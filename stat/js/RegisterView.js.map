{"version":3,"sources":["webpack:///./src/views/Auth/RegisterView.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["useStyles","makeStyles","theme","_rightSide","_logoAvatar","root","backgroundColor","palette","background","dark","height","alert","_defineProperty","position","right","top","breakpoints","down","maxWidth","logo","width","menuPaper","maxHeight","mainBlock","display","flexDirection","margin","padding","leftSide","avatarLogo","left","title","fontFamily","fontWeight","fontSize","textAlign","lineHeight","color","marginTop","marginBottom","rightSide","justifyContent","alignItems","paddingRight","up","paddingLeft","logoAvatar","marginLeft","marginRight","RegisterView","classes","_useLocation","useLocation","search","pathname","queryParams","URLSearchParams","_useState2","_slicedToArray","useState","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","React","createElement","Page","className","Box","Container","sx","minWidth","xs","sm","minHeight","borderRadius","boxShadow","CustomAlert","open","onClose","PerfectScrollbar","Avatar","variant","src","Formik","initialValues","firstName","lastName","gender","email","get","password","passwordConfirmation","referralId","role","validationSchema","Yup","shape","max","required","matches","when","is","val","length","then","oneOf","onSubmit","values","_ref","setSubmitting","resetForm","url","Api","signup","config","headers","Cookies","axios","post","res","status","error","response","data","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","mb","Typography","TextField","Boolean","fullWidth","helperText","label","name","onBlur","onChange","value","select","MenuItem","type","my","Button","disabled","size","Link","component","RouterLink","to","forwardRef","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string","spacing","alertContainer","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","prototype","bool","func"],"mappings":"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","file":"RegisterView.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Avatar,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport Api from \"../../components/Api\";\r\nimport Page from \"../../components/Page\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n  },\r\n  alert: {\r\n    position: \"absolute\",\r\n    right: 50,\r\n    top: 50,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      right: 20,\r\n      maxWidth: 250,\r\n    },\r\n  },\r\n  logo: {\r\n    width: 100,\r\n  },\r\n  menuPaper: {\r\n    maxHeight: 200,\r\n  },\r\n  mainBlock: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  leftSide: {\r\n    width: \"70%\",\r\n    height: \"100vh\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#2069D8\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      height: \"40vh\",\r\n      margin: \"0\",\r\n    },\r\n  },\r\n\r\n  avatarLogo: {\r\n    width: 200,\r\n    height: 72,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"33%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"20%\",\r\n      top: \"30%\",\r\n    },\r\n  },\r\n\r\n  title: {\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: \"700\",\r\n    fontSize: \"72px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"87.7px\",\r\n    color: \"#FFFFFF\",\r\n    margin: \"auto\",\r\n    marginTop: \"50vh\",\r\n    marginBottom: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"10vh\",\r\n    },\r\n  },\r\n\r\n  rightSide: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#F5F5F5\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\", // Center vertically\r\n    alignItems: \"center\", // Center horizontally\r\n    margin: \"0\",\r\n    paddingRight: \"200px\",\r\n    padding: \"0\", // Reset padding\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\", // Set width to 100%\r\n      paddingLeft: \"0\", // Reset padding\r\n      justifyContent: \"center\", // Center vertically\r\n      alignItems: \"center\", // Center horizontally\r\n      paddingRight: \"0px\",\r\n    },\r\n  },\r\n  logoAvatar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: \"0px\",\r\n      marginRight: \"auto\",\r\n      marginTop: \"15px\",\r\n      marginBottom: \"15px\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"150px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const { pathname, search } = useLocation();\r\n  const queryParams = new URLSearchParams(search);\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Register\">\r\n      <Box>\r\n        <Container maxWidth=\"md\">\r\n          {/* <Box className={classes.leftSide}>\r\n            <Avatar\r\n              variant=\"square\"\r\n              src=\"/static/img/onecall-logo.png\"\r\n              className={classes.avatarLogo}\r\n            />\r\n          </Box> */}\r\n          <Box\r\n            // className={classes.rightSide}\r\n            sx={{\r\n              minWidth: \"350px\",\r\n              maxWidth: { xs: \"350px\", sm: \"650px\" },\r\n              minHeight: \"450px\",\r\n              backgroundColor: \"rgba(255,255,255,1)\",\r\n              borderRadius: \"4px\",\r\n              boxShadow: \"rgba(149, 157, 165, 0.2) 0px 8px 24px\",\r\n              margin: \"10% auto 0\",\r\n              padding: \"24px\",\r\n            }}\r\n          >\r\n            {showAlert.isAlert ? (\r\n              <CustomAlert\r\n                open={showAlert.isAlert}\r\n                severity={showAlert.severity}\r\n                alertTitle={showAlert.alertTitle}\r\n                alertText={showAlert.alertText}\r\n                onClose={() =>\r\n                  setShowAlert({\r\n                    isAlert: false,\r\n                    alertTitle: \"\",\r\n                    alertText: \"\",\r\n                    severity: \"\",\r\n                  })\r\n                }\r\n              />\r\n            ) : null}\r\n\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"column\"\r\n              height=\"100%\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <PerfectScrollbar>\r\n                <Container maxWidth=\"sm\">\r\n                  <Box\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    marginBottom={2}\r\n                  >\r\n                    {/* We can place our logo here */}\r\n                    <Avatar\r\n                      variant=\"square\"\r\n                      src=\"/static/img/apexlogo.png\"\r\n                      sx={{\r\n                        // flexGrow: 1,\r\n                        height: 60,\r\n                        width: 170,\r\n                      }}\r\n                      className={classes.logoAvatar}\r\n                    />\r\n                  </Box>\r\n                  <Formik\r\n                    initialValues={{\r\n                      firstName: \"\",\r\n                      lastName: \"\",\r\n                      gender: \"\",\r\n                      email: queryParams.get(\"email\"),\r\n                      password: \"\",\r\n                      passwordConfirmation: \"\",\r\n                      referralId: queryParams.get(\"referralId\"),\r\n                      role: \"CLIENT\",\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                      firstName: Yup.string()\r\n                        .max(255)\r\n                        .required(\"First Name is required\"),\r\n                      lastName: Yup.string()\r\n                        .max(255)\r\n                        .required(\"Last Name is required\"),\r\n                      gender: Yup.string().required(\"Gender is required\"),\r\n                      email: Yup.string()\r\n                        .email(\"Must be a valid email\")\r\n                        .max(255)\r\n                        .required(\"Email is required\"),\r\n\r\n                      password: Yup.string()\r\n                        .required(\"Please enter your password\")\r\n                        .matches(\r\n                          /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n                          \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\r\n                        ),\r\n                      passwordConfirmation: Yup.string().when(\"password\", {\r\n                        is: (val) => (val && val.length > 0 ? true : false),\r\n                        then: Yup.string().oneOf(\r\n                          [Yup.ref(\"password\")],\r\n                          \"Both password need to be the same\"\r\n                        ),\r\n                      }),\r\n                    })}\r\n                    onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                      const url = Api.signup;\r\n\r\n                      const config = {\r\n                        headers: {\r\n                          \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n                        },\r\n                      };\r\n\r\n                      axios\r\n                        .post(url, values, config)\r\n                        .then((res) => {\r\n                          if (res.status === 200) {\r\n                            setShowAlert({\r\n                              isAlert: true,\r\n                              alertText: \"Your are successfully registered.\",\r\n                              severity: \"success\",\r\n                            });\r\n                            setSubmitting(false);\r\n                            resetForm();\r\n                          }\r\n                        })\r\n                        .catch((error) => {\r\n                          if (error.response) {\r\n                            const { data } = error.response;\r\n                            setShowAlert({\r\n                              isAlert: true,\r\n                              alertText: data?.[\"message\"],\r\n                              severity: \"error\",\r\n                              alertTitle: \"Error\",\r\n                            });\r\n                            // resetForm();\r\n                            setSubmitting(false);\r\n                          }\r\n                        });\r\n                    }}\r\n                  >\r\n                    {({\r\n                      errors,\r\n                      handleBlur,\r\n                      handleChange,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                      touched,\r\n                      values,\r\n                    }) => (\r\n                      <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                        <Box mb={3}>\r\n                          <Typography color=\"textPrimary\" variant=\"h2\">\r\n                            Register\r\n                          </Typography>\r\n                        </Box>\r\n                        <TextField\r\n                          error={Boolean(touched.firstName && errors.firstName)}\r\n                          fullWidth\r\n                          helperText={touched.firstName && errors.firstName}\r\n                          label=\"First Name\"\r\n                          margin=\"normal\"\r\n                          name=\"firstName\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.firstName}\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                          error={Boolean(touched.lastName && errors.lastName)}\r\n                          fullWidth\r\n                          helperText={touched.lastName && errors.lastName}\r\n                          label=\"Last Name\"\r\n                          margin=\"normal\"\r\n                          name=\"lastName\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.lastName}\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                          error={Boolean(touched.gender && errors.gender)}\r\n                          select\r\n                          fullWidth\r\n                          helperText={touched.gender && errors.gender}\r\n                          label=\"Gender\"\r\n                          margin=\"normal\"\r\n                          name=\"gender\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.gender}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          <MenuItem value=\"MALE\">Male</MenuItem>\r\n                          <MenuItem value=\"FEMALE\">Female</MenuItem>\r\n                          <MenuItem value=\"Other\">Other</MenuItem>\r\n                        </TextField>\r\n                        <TextField\r\n                          error={Boolean(touched.email && errors.email)}\r\n                          fullWidth\r\n                          helperText={touched.email && errors.email}\r\n                          label=\"Email Address\"\r\n                          margin=\"normal\"\r\n                          name=\"email\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          type=\"email\"\r\n                          value={values.email}\r\n                          variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                          error={Boolean(touched.password && errors.password)}\r\n                          fullWidth\r\n                          helperText={touched.password && errors.password}\r\n                          label=\"Password\"\r\n                          margin=\"normal\"\r\n                          name=\"password\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          type=\"password\"\r\n                          value={values.password}\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                          error={Boolean(\r\n                            touched.passwordConfirmation &&\r\n                              errors.passwordConfirmation\r\n                          )}\r\n                          fullWidth\r\n                          helperText={\r\n                            touched.passwordConfirmation &&\r\n                            errors.passwordConfirmation\r\n                          }\r\n                          label=\"Confirm Password\"\r\n                          margin=\"normal\"\r\n                          name=\"passwordConfirmation\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          type=\"password\"\r\n                          value={values.passwordConfirmation}\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                          error={Boolean(\r\n                            touched.referralId && errors.referralId\r\n                          )}\r\n                          fullWidth\r\n                          helperText={touched.referralId && errors.referralId}\r\n                          label=\"Referral Id (Optional)\"\r\n                          margin=\"normal\"\r\n                          name=\"referralId\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.referralId}\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <Box my={2}>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            disabled={isSubmitting}\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                          >\r\n                            Sign up\r\n                          </Button>\r\n                        </Box>\r\n                        <Typography color=\"textSecondary\" variant=\"body1\">\r\n                          Have an account?{\" \"}\r\n                          <Link component={RouterLink} to=\"/login\" variant=\"h6\">\r\n                            Sign in\r\n                          </Link>\r\n                        </Typography>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n                </Container>\r\n              </PerfectScrollbar>\r\n            </Box>\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}