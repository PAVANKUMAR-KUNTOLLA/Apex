{"version":3,"sources":["webpack:///./src/views/Profile/profile.page.js","webpack:///./src/components/Page.js"],"names":["customProfileStyles","makeStyles","theme","mainBlock","marginTop","justifyContent","alignItems","alignSelf","textAlign","width","account","_defineProperty","breakpoints","down","maxWidth","marginBottom","title","textTransform","color","fontSize","fontWeight","letterSpacing","subTitle","ProfilePage","useNavigate","useDispatch","state","useSelector","app","_useState2","_slicedToArray","useState","scrollEl","customStyles","useEffect","scrollTop","React","createElement","Page","Box","sx","backgroundColor","boxShadow","borderRadius","padding","height","overflow","maxHeight","className","Card","CardHeader","subheader","CardContent","Grid","container","spacing","item","md","xs","TextField","fullWidth","label","name","value","variant","InputProps","readOnly","disabled","forwardRef","_ref","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string"],"mappings":"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","file":"profile.page.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Page from \"../../components/Page\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Avatar,\n  Typography,\n  TextField,\n  useMediaQuery,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\nimport Api from \"../../components/Api\";\n\nimport { useDispatch } from \"react-redux\";\n\nconst customProfileStyles = makeStyles((theme) => ({\n  mainBlock: {\n    marginTop: \"0px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n  account: {\n    justifyContent: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      maxWidth: \"100%\",\n      marginBottom: \"10px\",\n    },\n  },\n  title: {\n    textTransform: \"uppercase\",\n    color: \"#3e4152\",\n    fontSize: \"28px\",\n    fontWeight: \"700\",\n    marginTop: \"34px\",\n    marginBottom: \"10px\",\n    letterSpacing: \"1.5px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"0\",\n      fontSize: \"20px\",\n      letterSpacing: \"0.5px\",\n    },\n  },\n  subTitle: {\n    textTransform: \"uppercase\",\n    color: \"#3e4152\",\n    fontSize: \"20px\",\n    fontWeight: \"500\",\n    textAlign: \"left\",\n    marginTop: \"24px\",\n    letterSpacing: \"1px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"16px\",\n      letterSpacing: \"0.5px\",\n    },\n  },\n}));\n\nconst ProfilePage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const state = useSelector((state) => state.app);\n\n  const [scrollEl, setScrollEl] = useState();\n  const customStyles = customProfileStyles();\n\n  function stringAvatar(name) {\n    if (name.split(\" \").length == 1) {\n      return {\n        children: `${name.split(\" \")[0][0]}`,\n      };\n    }\n    return {\n      children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\n    };\n  }\n\n  useEffect(() => {\n    if (scrollEl) {\n      scrollEl.scrollTop = 100;\n    }\n  }, [scrollEl]);\n\n  return (\n    <Page title=\"Profile\">\n      <Box\n        sx={{\n          backgroundColor: \"rgba(255,255,255,1)\",\n          boxShadow:\n            \"rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px\",\n          borderRadius: \"4px\",\n          padding: \"20px 10px\",\n          height: \"800px\",\n          overflow: \"auto\",\n          maxHeight: \"800px\",\n        }}\n      >\n        <Box className={customStyles.account}>\n          {/* {state.first_name && (\n            <Avatar\n              {...stringAvatar(state.first_name + state.last_name)}\n              sx={{\n                width: \"100px\",\n                height: \"100px\",\n                fontSize: \"48px\",\n                color: \"white\",\n                backgroundColor: \"rgb(0,76,153,0.8)\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n              }}\n            />\n          )}\n\n          <Typography\n            sx={{ fontWeight: \"700\", marginTop: \"10px\", fontSize: \"16px\" }}\n          >\n            {state.first_name} {state.last_name}\n          </Typography> */}\n\n          <Card sx={{ marginTop: \"20px\" }}>\n            <CardHeader\n              subheader={\"This information can't be edited\"}\n              title={\"PROFILE\"}\n            />\n            <CardContent>\n              <Grid container spacing={3}>\n                <Grid item md={12} xs={12}>\n                  <Grid container spacing={3}>\n                    <Grid item md={4} xs={12}>\n                      <TextField\n                        fullWidth\n                        label=\"First_Name\"\n                        name=\"name\"\n                        value={state?.[\"first_name\"]}\n                        variant=\"outlined\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        disabled\n                      />\n                    </Grid>\n                    <Grid item md={4} xs={12}>\n                      <TextField\n                        fullWidth\n                        label=\"Last_Name\"\n                        name=\"name\"\n                        value={state?.[\"last_name\"]}\n                        variant=\"outlined\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        disabled\n                      />\n                    </Grid>\n                    <Grid item md={4} xs={12}>\n                      <TextField\n                        fullWidth\n                        label=\"Gender\"\n                        name=\"name\"\n                        value={state?.[\"gender\"]}\n                        variant=\"outlined\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        disabled\n                      />\n                    </Grid>\n                    <Grid item md={4} xs={12}>\n                      <TextField\n                        fullWidth\n                        label=\"Email\"\n                        name=\"email\"\n                        value={state?.[\"email\"]}\n                        variant=\"outlined\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        disabled\n                      />\n                    </Grid>\n                    <Grid item md={4} xs={12}>\n                      <TextField\n                        fullWidth\n                        label=\"Phone Number\"\n                        name=\"phone_no\"\n                        value={state ? state[\"phone_no\"] : \"\"}\n                        variant=\"outlined\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        disabled\n                      />\n                    </Grid>\n                    <Grid item md={4} xs={12}>\n                      <TextField\n                        fullWidth\n                        label=\"Address\"\n                        name=\"address\"\n                        value={state ? state[\"address\"] : \"\"}\n                        variant=\"outlined\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        disabled\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Box>\n      </Box>\n    </Page>\n  );\n};\n\nexport default ProfilePage;\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n"],"sourceRoot":""}