{"version":3,"sources":["webpack:///./src/views/Refer/referFriend.js","webpack:///./src/views/Refer/referralDiscount.js","webpack:///./src/views/Refer/myReferrer.js","webpack:///./src/views/Refer/myReferrals.js","webpack:///./src/views/Refer/tabsDesktop.js","webpack:///./src/views/Refer/accordinMobile.js","webpack:///./src/views/Refer/index.js","webpack:///./src/views/TaxFilling/Forms/filerDeatils.js","webpack:///./src/views/TaxFilling/Forms/incomeDetails.js","webpack:///./src/views/TaxFilling/Forms/bankDetails.js","webpack:///./src/views/TaxFilling/Forms/taxReturns.js","webpack:///./src/views/TaxFilling/Forms/TaxDocs.js","webpack:///./src/views/TaxFilling/TabsDesktop.js","webpack:///./src/views/TaxFilling/AdminTaxFilingpage/index.js","webpack:///./src/views/TaxFilling/Forms/pickAppointment.js","webpack:///./src/views/Home/payPalPayment.js","webpack:///./src/views/TaxFilling/Forms/confirmDetails.js","webpack:///./src/views/TaxFilling/Forms/refundQuote.js","webpack:///./src/views/TaxFilling/AccordionMobile.js","webpack:///./src/views/TaxFilling/ClientTaxFilingPage/index.js","webpack:///./src/views/TaxFilling/index.js","webpack:///./src/components/CustomInputField.js","webpack:///./src/constants/index.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["initialValues","firstName","lastName","email","contact","validationSchema","Yup","shape","required","ReferFriend","_ref","_useState2","_slicedToArray","useState","setIsReferalDetailsLoading","React","createElement","Box","sx","backgroundColor","padding","sm","xs","paddingTop","paddingBottom","bgcolor","transition","borderRadius","boxShadow","overflow","color","backgroundImage","height","_defineProperty","Typography","fontSize","fontWeight","lineHeight","textAlign","marginBottom","Formik","onSubmit","values","_ref2","setSubmitting","resetForm","payload","_objectSpread","privateApiPOST","Api","makeReferal","then","response","status","data","console","log","error","_ref3","handleChange","errors","touched","handleBlur","Form","Grid","container","spacing","marginLeft","marginTop","item","marginRight","CustomInputTextField","attribute","margin","name","onBlur","onChange","fullWidth","value","variant","Boolean","helperText","justifyContent","alignItems","Button","type","ReferralDiscount","List","ListItem","size","MyReferrer","setIsReferralDetailsLoading","_useState4","referralEmail","referralID","referralDetails","setReferralDetails","useEffect","sessionStorage","getItem","privateApiGET","profile","disabled","customTextStyles","makeStyles","theme","tableHeader","breakpoints","down","display","tableData","headerText","confirmButton","mobileViewStyledTableCellValue","mobileView","cursor","border","up","mobileViewStyledTableCellHeader","MyReferrals","customStyles","joined","not_joined","referalDetails","setReferalDetails","PerfectScrollbar","TableContainer","Table","borderCollapse","TableHead","TableRow","StyledTableCell","className","TableBody","length","map","row","id","key","first_name","last_name","phone_no","flexDirection","contact_no","accordion","accordionHeader","opacity","paddingLeft","maxHeight","accordionHeaderText","accordionColumn","accordionColumnHeaderText","accordionColumnText","footerText","collpaseIcon","TabsDesktop","handleFetchData","customTextClasses","setValue","CustomTabPanel","props","children","index","other","_objectWithoutProperties","_excluded","_extends","role","hidden","concat","a11yProps","propTypes","PropTypes","node","number","isRequired","width","borderBottom","borderColor","Tabs","event","newValue","Tab","label","tabHeaderText","BasicAccordion","expanded","setExpanded","panel","isExpanded","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","styled","TableCell","borderWidth","borderStyle","borderLeftWidth","borderRightWidth","ReferPage","Page","title","buttons","CustomLabel","style","FilerDetails","open","personalDetails","contactDetails","spouseDetails","incomeDetails","providedLivingSupport","handleDownloadTemplate","isFilerDetailsLoading","setIsFilerDetailsLoading","isDependantDetailsLoading","setIsDependantDetailsLoading","_useState6","dependantDetails","setDependantDetails","transform","input","includes","replace","_useState8","middleName","ssn","dateOfBirth","gender","occupation","residentialStatus","street","apartment","city","state","zipCode","country","primaryCountryCode","primaryPhoneNumber","secondaryCountryCode","secondaryPhoneNumber","contactEmail","taxFiledLastYear","taxPayerStatus","spouseFirstName","spouseMiddleInitial","spouseLastName","spouseSsnOrItin","spouseApplyForItin","spouseDateOfBirth","spouseGender","spouseOccupation","spouseResidentialStatus","spouseEmail","isNewDependant","additionalFirstName","additionalMiddleInitial","additionalLastName","additionalSsnOrItin","additionalApplyForItin","additionalDateOfBirth","additionalGender","additionalOccupation","additionalVisaType","additionalEmail","additionalStayCount","additionalRelationship","formData","stateOptions","statesNames","countryCodes","countryCode","handleDeleteDependant","dependantId","taxFilingId","deleteDependant","handleFetchDependantDetails","minHeight","CircularProgress","max","matches","Date","when","is","otherwise","personalContactDetails","_ref4","handleSubmit","isSubmitting","setFieldValue","autoComplete","lg","leftSide","flexWrap","maxWidth","attributeTextAlign","is_required","InputLabelProps","shrink","InputProps","inputProps","placeholder","select","MenuItem","rightSide","option","TextField","ButtonBase","onClick","textDecoration","disableTouchRipple","wordSpacing","startIcon","RemoveIcon","AddIcon","each","DeleteIcon","ml","IncomeDetails","isIncomeDetailsLoading","setIsIncomeDetailsLoading","interestIncome","dividendIncome","soldStocks","soldCrypto","foreignIncome","retirementAccounts","stateTaxRefund","foreignBankAccount","foreignAssets","rentalIncome","income1099","incomeDescription","incomeAmount","addAdditionalInformation","FormControl","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","Tooltip","placement","bankingType","bankName","accountHolderName","ownership","routingNumber","confirmRoutingNumber","oneOf","accountNumber","confirmAccountNumber","accountType","confirmAccountType","BankDetails","isBankDetailsLoading","setIsBankDetailsLoading","bankDetails","align","TaxReturns","params","useParams","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","useSelector","app","isLoading","setIsLoading","isImport","isImpoFormSubmitting","selectedFile","remarks","isMyTaxDocsLoading","myTaxDocs","setState","handleDownloadFile","file","file_name","downloadTaxDocsFile","responseType","res","url","window","URL","createObjectURL","Blob","anchor","document","href","setAttribute","body","appendChild","click","err","handleDeleteFile","file_id","deleteTaxDocsFile","handleFetchMyTaxDocs","_data","prev","uploadTaxDocs","CustomAlert","onClose","e","target","files","accept","visibility","htmlFor","CloudUploadIcon","fontStyle","FormData","append","token","axios","post","headers","Authorization","upload_time","GetApp","alertCard","alertIcon","root","link","info","UploadTaxDocs","Card","CardContent","Link","Paper","elevation","valign","file_size","parseInt","action","FilerDeatils","tabButton","AdminTaxFillingPage","setData","isLoadingSpin","setIsLoadingSpin","handleFetchTaxFilingDetails","taxFiling","position","zIndex","left","top","year","templateDownload","PickAppointment","isPickAppointmentDetailsLoading","setIsPickAppointmentDetailsLoading","date","time","timezone","appointmentData","setAppointmentData","appointmentDetails","setAppointmentDetails","handleCancelAppointment","appointmentId","deleteAppointment","handleFetchAppointmentDetails","_error$response$data","message","showMsg","timeOptions","hours","minutes","hourStr","String","padStart","minuteStr","timeOption","push","generateTimeOptions","attributeMarginTop","readOnly","preventDefault","bookAppointment","_error$response$data2","handleFetchAppointmentChange","start_time","end_time","Chip","IconButton","onCursor","Avatar","alt","src","PayPalPayment","Container","fontFamily","p","mt","useStyles","ConfirmDetails","handlePickAppointment","mb","RefundQuote","minWidth","ClientTaxFillingPage","isActiveTab","setIsActiveTab","handleActiveTabChange","tabName","HomePage","Fragment","NO_WRAP_ATTRIBUTES","others","whiteSpace","prototype","bool","string","refundTypes","forwardRef","ref","_ref$title","rest","Helmet","alertContainer","classes","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","func"],"mappings":"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","file":"index.js","sourcesContent":["import React, { useState } from \"react\";\nimport Page from \"../../components/Page\";\nimport { Grid, Box, Typography, Button, Container } from \"@mui/material\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Api from \"../../components/Api\";\nimport { privateApiPOST } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  contact: \"\",\n};\n\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string().required(\"First Name is required\"),\n  lastName: Yup.string().required(\"Last Name is required\"),\n  email: Yup.string()\n    .email(\"Invalid email format\")\n    .required(\"Email is required\"),\n  contact: Yup.string().required(\"Contact number is required\"),\n});\n\nconst ReferFriend = () => {\n  const [isReferalDetailsLoading, setIsReferalDetailsLoading] = useState(false);\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow:\n          \"rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px\",\n        overflow: \"hidden\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n        height: \"800px\",\n        overflow: \"auto\",\n        maxHeight: \"800px\",\n      }}\n    >\n      {/* <Container> */}\n      <Typography\n        sx={{\n          color: \"rgba(71,71,71,1)\",\n          fontSize: \"21px\",\n          fontWeight: 500,\n          lineHeight: \"33px\",\n          textAlign: \"left\",\n          marginBottom: \"32px\",\n        }}\n      >\n        Refer a Friend\n      </Typography>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setIsReferalDetailsLoading(true);\n          setSubmitting(true);\n          let payload = { ...values };\n          privateApiPOST(Api.makeReferal, payload)\n            .then((response) => {\n              const { status, data } = response;\n              if (status === 200) {\n                console.log(\"data\", data);\n                setIsReferalDetailsLoading(false);\n                resetForm();\n                setSubmitting(false);\n              }\n            })\n            .catch((error) => {\n              console.log(\"Error\", error);\n              setIsReferalDetailsLoading(false);\n              setSubmitting(false);\n            });\n        }}\n      >\n        {({ values, handleChange, errors, touched, handleBlur }) => (\n          <Form>\n            <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n              <Grid\n                container\n                sx={{\n                  marginBottom: \"30px\",\n                  marginTop: \"30px\",\n                }}\n              >\n                <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                  <CustomInputTextField\n                    attribute=\"First Name\"\n                    margin=\"normal\"\n                    name=\"firstName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    fullWidth\n                    value={values.firstName}\n                    variant=\"outlined\"\n                    error={Boolean(touched.firstName && errors.firstName)}\n                    helperText={touched.firstName && errors.firstName}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                  <CustomInputTextField\n                    attribute=\"Last Name\"\n                    margin=\"normal\"\n                    name=\"lastName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    fullWidth\n                    value={values.lastName}\n                    variant=\"outlined\"\n                    error={Boolean(touched.lastName && errors.lastName)}\n                    helperText={touched.lastName && errors.lastName}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                  <CustomInputTextField\n                    attribute=\"Email\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    fullWidth\n                    value={values.email}\n                    variant=\"outlined\"\n                    error={Boolean(touched.email && errors.email)}\n                    helperText={touched.email && errors.email}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={5} sx={{ marginRight: \"20px\" }}>\n                  <CustomInputTextField\n                    attribute=\"Contact\"\n                    margin=\"normal\"\n                    name=\"contact\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    fullWidth\n                    value={values.contact}\n                    variant=\"outlined\"\n                    error={Boolean(touched.contact && errors.contact)}\n                    helperText={touched.contact && errors.contact}\n                  />\n                </Grid>\n              </Grid>\n              <Grid\n                container\n                justifyContent=\"center\" // Center horizontally\n                alignItems=\"center\" // Center vertically\n              >\n                <Box\n                  sx={{\n                    textAlign: \"center\",\n                    paddingBottom: { xs: \"20px\" },\n                  }}\n                >\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    sx={{\n                      marginRight: { xs: \"0px\", sm: \"130px\" },\n                    }}\n                  >\n                    Submit\n                  </Button>\n                </Box>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n      {/* </Container> */}\n    </Box>\n  );\n};\n\nexport default ReferFriend;\n","import { Typography, Box, Container, List, ListItem } from \"@mui/material\";\nimport React from \"react\";\n\nconst ReferralDiscount = () => {\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow:\n          \"rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n        height: \"800px\",\n        overflow: \"auto\",\n        maxHeight: \"800px\",\n      }}\n    >\n      {/* <Container> */}\n      <Box>\n        <Typography\n          sx={{\n            color: \"rgba(71,71,71,1)\",\n            fontSize: \"21px\",\n            fontWeight: 500,\n            lineHeight: \"33px\",\n            textAlign: \"left\",\n            marginBottom: \"32px\",\n          }}\n        >\n          Referral Discount Details\n        </Typography>\n        <Typography sx={{ marginTop: \"10px\" }}>\n          1 - 4 New Clients Referred : $10 for each client who completes their\n          tax filing with us\n        </Typography>\n        <Typography sx={{ marginTop: \"10px\" }}>\n          5 - 9 New Clients Referred : $20 for each client who completes their\n          tax filing with us\n        </Typography>\n        <Typography sx={{ marginTop: \"10px\" }}>\n          10 or more New Clients Referred : $30 for each client who completes\n          their tax filing with us\n        </Typography>\n        <List>\n          <ListItem>\n            <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n              <strong>*</strong> All Referral Discounts will be applied only if\n              newly referred clients complete their tax filing with us\n            </Typography>\n          </ListItem>\n          <ListItem>\n            <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n              <strong>*</strong> Referral discount will be used towards your tax\n              filing fee\n            </Typography>\n          </ListItem>\n          <ListItem>\n            <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n              <strong>*</strong> If you have more referral discount than your\n              tax filing fee, it will be carried forward and used towards your\n              future service fee with Taxcooler Inc\n            </Typography>\n          </ListItem>\n          <ListItem>\n            <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n              <strong>*</strong> Referral discount cannot be transferred from\n              one client to another\n            </Typography>\n          </ListItem>\n          <ListItem>\n            <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n              <strong>*</strong> You can earn as much referral discount as\n              possible by referring more new clients to us every year\n            </Typography>\n          </ListItem>\n          <ListItem>\n            <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n              <strong>*</strong> New Client means who did not file with\n              TaxCooler Inc in any of the previous years\n            </Typography>\n          </ListItem>\n          <ListItem>\n            <Box variant=\"body1\">\n              <font color=\"green\" size=\"2\">\n                Example:\n                <ul>\n                  <li>You referred 5 new clients in this year</li>\n                  <li>\n                    3 of them filed with us and 2 of them did not complete their\n                    tax return with us. You get referral discount for 3 new\n                    clients who completed their filing with us\n                  </li>\n                  <li>\n                    Referral discount would be $10 per client. So you have\n                    earned $30 referral discount\n                  </li>\n                  <li>\n                    This discount will be applied on your filing fee when you\n                    are filing your tax return. If you filed your tax return\n                    already, the discount will be carried forward to your future\n                    filing fee (or any other service fee with Taxcooler Inc)\n                  </li>\n                </ul>\n              </font>\n            </Box>\n          </ListItem>\n          <ListItem>\n            <Typography variant=\"body1\" sx={{ color: \"#FF0000\" }}>\n              <strong>*</strong> All amounts indicated here are in legal US\n              Dollars\n            </Typography>\n          </ListItem>\n        </List>\n      </Box>\n      {/* </Container> */}\n    </Box>\n  );\n};\n\nexport default ReferralDiscount;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Container, Typography, Box, Grid, TextField } from \"@mui/material\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../components/CustomInputField\";\n\nconst MyReferrer = () => {\n  const [isReferralDetailsLoading, setIsReferralDetailsLoading] =\n    useState(false);\n  const [referralDetails, setReferralDetails] = useState({\n    referralEmail: \"\",\n    referralID: \"\",\n  });\n\n  const handleFetchProfileDetails = () => {\n    setIsReferralDetailsLoading(true);\n    privateApiGET(Api.profile)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setReferralDetails({\n            ...referralDetails,\n            referralEmail: data?.data[\"referred_by\"],\n            referralID: data?.data[\"referral_id\"],\n          });\n          setIsReferralDetailsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsReferralDetailsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) {\n      handleFetchProfileDetails();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow:\n          \"rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n        height: \"800px\",\n        overflow: \"auto\",\n        maxHeight: \"800px\",\n      }}\n    >\n      {/* <Container> */}\n      <Typography\n        sx={{\n          color: \"rgba(71,71,71,1)\",\n          fontSize: \"21px\",\n          fontWeight: 500,\n          lineHeight: \"33px\",\n          textAlign: \"left\",\n          marginBottom: \"32px\",\n        }}\n      >\n        Referal Details\n      </Typography>\n\n      <Grid container>\n        <Grid item sm={5} xs={12} sx={{ marginRight: \"20px\" }}>\n          <CustomInputTextField\n            fullWidth\n            attribute=\"Referral ID\"\n            margin=\"normal\"\n            name=\"referralID\" // Updated name\n            disabled\n            value={referralDetails.referralID} // Updated value\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item sm={5} xs={12} sx={{ marginRight: \"20px\" }}>\n          <CustomInputTextField\n            fullWidth\n            attribute=\"Referral Email\"\n            margin=\"normal\"\n            name=\"referralEmail\" // Updated name\n            value={referralDetails.referralEmail} // Updated value\n            variant=\"outlined\"\n            disabled\n          />\n        </Grid>\n      </Grid>\n      {/* </Container> */}\n    </Box>\n  );\n};\n\nexport default MyReferrer;\n","import React, { useState, useEffect, Component } from \"react\";\nimport {\n  Grid,\n  Box,\n  Link,\n  Avatar,\n  Typography,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  FormControl,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport Api from \"../../components/Api\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\nimport { StyledTableCell } from \".\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: \"700\",\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewStyledTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewStyledTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n}));\n\nconst MyReferrals = () => {\n  const customStyles = customTextStyles();\n  const [isReferalDetailsLoading, setIsReferalDetailsLoading] = useState(false);\n  const [referalDetails, setReferalDetails] = useState({\n    joined: [],\n    not_joined: [],\n  });\n\n  const handleFetchReferalDetails = () => {\n    privateApiGET(Api.referalDetails)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setReferalDetails({\n            joined: data?.data[\"joined\"],\n            not_joined: data?.data[\"not_joined\"],\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\")) {\n      handleFetchReferalDetails();\n    }\n  }, []);\n  console.log(referalDetails);\n  return (\n    <Box\n      sx={{\n        marginTop: \"40px\",\n        backgroundColor: \"#fff\",\n        padding: { sm: \"30px\", xs: \"0\" },\n        paddingTop: { xs: \"30px\" },\n        paddingBottom: { xs: \"20px\" },\n\n        bgcolor: \"#ffffff\",\n        transition: \"box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        borderRadius: \"6px\",\n        boxShadow:\n          \"rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px\",\n        overflow: \"hidden\",\n        marginTop: \"20px\",\n        color: \"#333333\",\n        backgroundImage: \"none\",\n        height: \"800px\",\n        overflow: \"auto\",\n        maxHeight: \"800px\",\n      }}\n    >\n      <PerfectScrollbar>\n        {/* <Container> */}\n        <Box>\n          <Typography\n            sx={{\n              color: \"rgba(71,71,71,1)\",\n              fontSize: \"21px\",\n              fontWeight: 500,\n              lineHeight: \"33px\",\n              textAlign: \"left\",\n              marginBottom: \"32px\",\n            }}\n          >\n            Registered Till Now\n          </Typography>\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n            >\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    First Name\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Last Name\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Email Id\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Phone Number\n                  </StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {referalDetails[\"joined\"].length > 0 &&\n                  referalDetails[\"joined\"].map((row, id) => (\n                    <TableRow key={id}>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.first_name}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.last_name}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.email}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.phone_no}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.first_name}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.last_name}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                Email Id\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.email}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                Phone Number\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.phone_no}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </StyledTableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n            {referalDetails[\"joined\"].length === 0 && (\n              <Typography\n                variant=\"h5\"\n                sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n              >\n                No Records Found\n              </Typography>\n            )}\n          </TableContainer>\n        </Box>\n        <Box sx={{ marginTop: { xs: \"16px\", sm: \"24px\" } }}>\n          <Typography\n            sx={{\n              color: \"rgba(71,71,71,1)\",\n              fontSize: \"21px\",\n              fontWeight: 500,\n              lineHeight: \"33px\",\n              textAlign: \"left\",\n              marginBottom: \"32px\",\n            }}\n          >\n            Referred Till Now\n          </Typography>\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n            >\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    First Name\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Last Name\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Email Id\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Phone Number\n                  </StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {referalDetails[\"not_joined\"].length > 0 &&\n                  referalDetails[\"not_joined\"].map((row, id) => (\n                    <TableRow key={id}>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.first_name}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.last_name}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.email}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.contact_no}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"row\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\", marginRight: \"10px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                First Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.first_name}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\", marginRight: \"10px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                Last Name\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.last_name}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexDirection: \"column\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                Email Id\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.email}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                Phone Number\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.contact_no}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </StyledTableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n            {referalDetails[\"not_joined\"].length === 0 && (\n              <Typography\n                variant=\"h5\"\n                sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n              >\n                No Records Found\n              </Typography>\n            )}\n          </TableContainer>\n        </Box>\n        {/* </Container> */}\n      </PerfectScrollbar>\n    </Box>\n  );\n};\n\nexport default MyReferrals;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport config from \"../../config\";\n// Material UI\nimport { Grid, Box, Avatar, Typography, Tabs, Tab } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport PropTypes from \"prop-types\";\nimport PercentIcon from \"@mui/icons-material/Percent\";\nimport Groups from \"@mui/icons-material/Groups\";\nimport ListAlt from \"@mui/icons-material/ListAlt\";\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\nimport ReferFriend from \"./referFriend\";\nimport ReferralDiscount from \"./referralDiscount\";\nimport MyReferrer from \"./myReferrer\";\nimport MyReferrals from \"./myReferrals\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst TabsDesktop = ({ data, handleFetchData }) => {\n  const customTextClasses = customTextStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box>{children}</Box>}\n      </div>\n    );\n  }\n\n  CustomTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <Grid item xs={12}>\n      <Box\n        sx={{\n          width: \"100%\",\n          marginBottom: \"64px\",\n        }}\n      >\n        <Box\n          sx={{\n            borderBottom: 1,\n            borderColor: \"divider\",\n            margin: \"8px 32px 32px 10px\",\n          }}\n        >\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"basic tabs example\"\n          >\n            <Tab\n              label=\"Referral Discount\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(0)}\n            />\n            <Tab\n              label=\"My Referrals\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(1)}\n            />\n            <Tab\n              label=\"Refer a Friend\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(2)}\n            />\n            <Tab\n              label=\"My Referrer\"\n              className={customTextClasses.tabHeaderText}\n              {...a11yProps(2)}\n            />\n          </Tabs>\n        </Box>\n\n        <CustomTabPanel value={value} index={0}>\n          <ReferralDiscount />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={1}>\n          <MyReferrals />\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={2}>\n          <Grid container>\n            <Grid item xs={12}>\n              <Box>\n                <ReferFriend />\n              </Box>\n            </Grid>\n          </Grid>\n        </CustomTabPanel>\n        <CustomTabPanel value={value} index={3}>\n          <MyReferrer />\n        </CustomTabPanel>\n      </Box>\n    </Grid>\n  );\n};\nexport default TabsDesktop;\n","import React, { useState } from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport PercentIcon from \"@mui/icons-material/Percent\";\nimport Groups from \"@mui/icons-material/Groups\";\nimport ListAlt from \"@mui/icons-material/ListAlt\";\nimport AspectRatioOutlined from \"@mui/icons-material/AspectRatioOutlined\";\nimport UnfoldLess from \"@mui/icons-material/UnfoldLess\";\nimport UnfoldMore from \"@mui/icons-material/UnfoldMore\";\nimport DiscountOutlined from \"@mui/icons-material/DiscountOutlined\";\nimport MonetizationOnOutlined from \"@mui/icons-material/MonetizationOnOutlined\";\nimport InsertPageBreakOutlined from \"@mui/icons-material/InsertPageBreakOutlined\";\nimport DescriptionOutlined from \"@mui/icons-material/DescriptionOutlined\";\nimport StackedBarChartOutlined from \"@mui/icons-material/StackedBarChartOutlined\";\nimport PriceCheckOutlined from \"@mui/icons-material/PriceCheckOutlined\";\nimport { Grid, Box, Avatar, Typography } from \"@mui/material\";\nimport SavingsOutlinedIcon from \"@mui/icons-material/SavingsOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport config from \"../../config\";\nimport { makeStyles } from \"@mui/styles\";\nimport ReferFriend from \"./referFriend\";\nimport ReferralDiscount from \"./referralDiscount\";\nimport MyReferrer from \"./myReferrer\";\nimport MyReferrals from \"./myReferrals\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst BasicAccordion = ({ data, handleFetchData }) => {\n  const customTextClasses = customTextStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <Box>\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel1\" ? \"600\" : \"400\" }}\n          >\n            Referral Discount\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails\n          sx={{\n            bgcolor: \"#FAFAFA\",\n          }}\n        >\n          <ReferralDiscount />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel2\" ? \"600\" : \"400\" }}\n          >\n            My Referrals\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <MyReferrals />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel3\"}\n        onChange={handleChange(\"panel3\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            Refer a Friend\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <ReferFriend />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel4\"}\n        onChange={handleChange(\"panel4\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4a-content\"\n          id=\"panel4a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            My Referral\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <MyReferrer />\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default BasicAccordion;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../components/Page\";\nimport {\n  Grid,\n  Container,\n  Box,\n  CircularProgress,\n  TableCell,\n  styled,\n} from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\n\nimport TabsDesktop from \"./tabsDesktop\";\nimport BasicAccordion from \"./accordinMobile\";\n\nexport const StyledTableCell = styled(TableCell)(({ theme }) => ({\n  \"&\": {\n    backgroundColor: \"#FFFFFF\",\n    borderWidth: \"1px 0\",\n    borderStyle: \"solid\",\n    borderColor: \"#E2EBFF\",\n    \"&:first-of-type\": {\n      borderLeftWidth: \"1px\",\n    },\n    \"&:nth-last-of-type(2)\": {\n      borderRightWidth: \"1px\",\n    },\n  },\n}));\n\nconst ReferPage = () => {\n  return (\n    <Page title={\"Refer\"}>\n      {/* <Container maxWidth=\"lg\"> */}\n      <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n        <TabsDesktop />\n      </Box>\n      <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n        <BasicAccordion />\n      </Box>\n      {/* </Container> */}\n    </Page>\n  );\n};\n\nexport default ReferPage;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n  ButtonBase,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { makeStyles } from \"@mui/styles\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport { statesNames, countryCode } from \"../../../constants\";\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\nimport { ALIGN_LEFT } from \"@blueprintjs/core/lib/esm/common/classes\";\nimport { StyledTableCell } from \"..\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewStyledTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewStyledTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport function CustomLabel({ label, required }) {\n  return (\n    <label style={{ display: \"flex\", alignItems: \"center\" }}>\n      {label}\n      {required && (\n        <span\n          style={{\n            color: \"red\",\n            fontSize: \"16px\",\n            marginLeft: \"3px\",\n          }}\n        >\n          *\n        </span>\n      )}\n    </label>\n  );\n}\n\nconst FilerDetails = ({\n  open,\n  id,\n  personalDetails,\n  contactDetails,\n  spouseDetails,\n  incomeDetails,\n  providedLivingSupport,\n  handleFetchData,\n  handleDownloadTemplate,\n}) => {\n  const customStyles = customTextStyles();\n  const [isFilerDetailsLoading, setIsFilerDetailsLoading] = useState(false);\n  const [isDependantDetailsLoading, setIsDependantDetailsLoading] =\n    useState(false);\n  const [dependantDetails, setDependantDetails] = useState([]);\n\n  const transform = (input) => {\n    if (input === undefined || input === null) {\n      return \"\";\n    }\n\n    if (input.includes(\"-\")) {\n      return input;\n    }\n\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\n    const formattedSsn = rawSsn\n      .replace(/\\D/g, \"\") // Remove non-digits\n      .replace(/(\\d{3})(\\d{3})(\\d{3})/, \"$1-$2-$3\"); // Format as 123-45-6789\n    return formattedSsn;\n  };\n\n  const [formData, setFormData] = useState({\n    // Personal Details\n\n    firstName: personalDetails[\"firstName\"],\n    middleName: personalDetails[\"middleName\"],\n    lastName: personalDetails[\"lastName\"],\n    ssn: personalDetails[\"ssn\"],\n    dateOfBirth: personalDetails[\"dateOfBirth\"],\n    gender: personalDetails[\"gender\"],\n    occupation: personalDetails[\"occupation\"],\n    residentialStatus: personalDetails[\"residentialStatus\"],\n    email: personalDetails[\"email\"],\n\n    // Contact Details\n    street: contactDetails[\"street\"],\n    apartment: contactDetails[\"apartment\"],\n    city: contactDetails[\"city\"],\n    state: contactDetails[\"state\"],\n    zipCode: contactDetails[\"zipCode\"],\n    country: contactDetails[\"country\"],\n    primaryCountryCode: contactDetails[\"primaryCountryCode\"],\n    primaryPhoneNumber: contactDetails[\"primaryPhoneNumber\"],\n    secondaryCountryCode: contactDetails[\"secondaryCountryCode\"],\n    secondaryPhoneNumber: contactDetails[\"secondaryPhoneNumber\"],\n    contactEmail: contactDetails[\"contactEmail\"],\n\n    taxFiledLastYear: incomeDetails[\"taxFiledLastYear\"], // Set an initial value for taxFiledLastYear\n\n    // additional Spouse Details (Initially hidden)\n    taxPayerStatus: personalDetails[\"taxPayerStatus\"], // Default to \"No\" (Single)\n    spouseFirstName: spouseDetails[\"spouseFirstName\"],\n    spouseMiddleInitial: spouseDetails[\"spouseMiddleInitial\"],\n    spouseLastName: spouseDetails[\"spouseLastName\"],\n    spouseSsnOrItin: spouseDetails[\"spouseSsnOrItin\"],\n    spouseApplyForItin: spouseDetails[\"spouseApplyForItin\"], // Default to \"No\"\n    spouseDateOfBirth: spouseDetails[\"spouseDateOfBirth\"],\n    spouseGender: spouseDetails[\"spouseGender\"],\n    spouseOccupation: spouseDetails[\"spouseOccupation\"],\n    spouseResidentialStatus: spouseDetails[\"spouseResidentialStatus\"],\n    spouseEmail: spouseDetails[\"spouseEmail\"],\n\n    providedLivingSupport: providedLivingSupport,\n    isNewDependant: false,\n    additionalFirstName: \"\",\n    additionalMiddleInitial: \"\",\n    additionalLastName: \"\",\n    additionalSsnOrItin: \"\",\n    additionalApplyForItin: false, // Default to \"No\"\n    additionalDateOfBirth: \"\",\n    additionalGender: \"\",\n    additionalOccupation: \"\",\n    additionalVisaType: \"\",\n    additionalEmail: \"\",\n    additionalStayCount: \"\",\n    additionalRelationship: \"\",\n  });\n\n  const stateOptions = statesNames;\n  const countryCodes = countryCode;\n\n  const handleDeleteDependant = (dependantId) => {\n    setIsDependantDetailsLoading(true);\n    let payload = { taxFilingId: id, id: dependantId };\n    privateApiPOST(Api.deleteDependant, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setIsDependantDetailsLoading(false);\n          handleFetchDependantDetails();\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsFilerDetailsLoading(false);\n      });\n  };\n\n  const handleFetchDependantDetails = () => {\n    setIsDependantDetailsLoading(true);\n    let payload = { id: id };\n    privateApiPOST(Api.dependantDetails, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setDependantDetails(data?.data);\n          setIsDependantDetailsLoading(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsDependantDetailsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (open) {\n      handleFetchDependantDetails();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 30px\",\n        border: { xs: \"none\", sm: \"none\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {/* <Container> */}\n      {isFilerDetailsLoading ? (\n        <CircularProgress />\n      ) : (\n        <Box>\n          <Formik\n            initialValues={formData}\n            validationSchema={Yup.object().shape({\n              firstName: Yup.string()\n                .max(255)\n                .required(\"First Name is required\"),\n              middleName: Yup.string().max(255),\n              lastName: Yup.string().max(255).required(\"Last Name is required\"),\n              ssn: Yup.string()\n                .matches(\n                  /^\\d{9}$/,\n                  \"SSN must be exactly 9 digits long and contain only numbers\"\n                )\n                .required(\"SSN is required\"),\n              dateOfBirth: Yup.date()\n                .max(new Date(), \"Date of Birth cannot be in the future\")\n                .required(\"Date of Birth is required\"),\n              gender: Yup.string().required(\"Gender is required\"),\n              occupation: Yup.string()\n                .max(255)\n                .required(\"Occupation is required\"),\n              residentialStatus: Yup.string().required(\n                \"Residential Status is required\"\n              ),\n              street: Yup.string().max(255).required(\"Street is required\"),\n              apartment: Yup.string().max(255),\n              city: Yup.string().max(255).required(\"City is required\"),\n              state: Yup.string().max(255).required(\"State is required\"),\n              zipCode: Yup.string().max(10).required(\"Zip Code is required\"),\n              country: Yup.string().max(255).required(\"Country is required\"),\n              primaryCountryCode: Yup.string().required(\n                \" Country Code is required\"\n              ),\n              primaryPhoneNumber: Yup.string().required(\n                \"Primary Phone Number is required\"\n              ),\n              secondaryCountryCode: Yup.string(),\n              secondaryPhoneNumber: Yup.string(),\n              contactEmail: Yup.string()\n                .email(\"Must be a valid email\")\n                .max(255)\n                .required(\"Contact Email is required\"),\n              taxFiledLastYear: Yup.boolean().required(\n                \"Please select an option\"\n              ),\n              taxPayerStatus: Yup.string().required(\n                \"Please select your status\"\n              ),\n\n              // additional Spouse Details (Add validation rules as needed)\n              spouseFirstName: Yup.string().when(\"taxPayerStatus\", {\n                is: \"MARRIED\",\n                then: Yup.string().required(\"Spouse First Name is required\"),\n                otherwise: Yup.string(),\n              }),\n              spouseMiddleInitial: Yup.string(),\n              spouseLastName: Yup.string().when(\"taxPayerStatus\", {\n                is: \"MARRIED\",\n                then: Yup.string().required(\"Spouse Last Name is required\"),\n                otherwise: Yup.string(),\n              }),\n              spouseSsnOrItin: Yup.string().when(\"taxPayerStatus\", {\n                is: \"MARRIED\",\n                then: Yup.string()\n                  .required(\"Spouse SSN/ITIN is required if married\")\n                  .matches(/^\\d{9}$/, \"Spouse SSN/ITIN must be 9 digits\"),\n                otherwise: Yup.string(),\n              }),\n              spouseApplyForItin: Yup.string().when(\"taxPayerStatus\", {\n                is: \"MARRIED\",\n                then: Yup.string().required(\n                  \"Please select whether you want to apply for ITIN\"\n                ),\n                otherwise: Yup.string(),\n              }),\n              spouseDateOfBirth: Yup.date().when(\"taxPayerStatus\", {\n                is: \"MARRIED\",\n                then: Yup.date().required(\"Spouse Date of Birth is required\"),\n                otherwise: Yup.date(),\n              }),\n              spouseGender: Yup.string().when(\"taxPayerStatus\", {\n                is: \"MARRIED\",\n                then: Yup.string().required(\"Spouse Gender is required\"),\n                otherwise: Yup.string(),\n              }),\n              spouseOccupation: Yup.string().when(\"taxPayerStatus\", {\n                is: \"MARRIED\",\n                then: Yup.string().required(\"Spouse Occupation is required\"),\n                otherwise: Yup.string(),\n              }),\n              spouseResidentialStatus: Yup.string().when(\"taxPayerStatus\", {\n                is: \"MARRIED\",\n                then: Yup.string().required(\n                  \"Spouse Residential Status is required\"\n                ),\n                otherwise: Yup.string(),\n              }),\n              spouseEmail: Yup.string().when(\"taxPayerStatus\", {\n                is: \"MARRIED\",\n                then: Yup.string()\n                  .email(\"Must be a valid email\")\n                  .max(255)\n                  .required(\"Spouse Email is required\"),\n                otherwise: Yup.string(),\n              }),\n\n              //  additional Details (Add validation rules as needed)\n\n              providedLivingSupport: Yup.boolean().required(\n                \"Please select an option\"\n              ),\n\n              isNewDependant: Yup.boolean().required(\"Please select an option\"),\n\n              additionalFirstName: Yup.string().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.string().required(\"First Name is required\"),\n                otherwise: Yup.string(),\n              }),\n              additionalMiddleInitial: Yup.string(),\n              additionalLastName: Yup.string().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.string().required(\"Last Name is required\"),\n                otherwise: Yup.string(),\n              }),\n              additionalSsnOrItin: Yup.string().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.string().required(\"SSN/ITIN is required if married\"),\n                otherwise: Yup.string(),\n              }),\n              additionalApplyForItin: Yup.string().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.string().required(\n                  \"Please select whether you want to apply for ITIN\"\n                ),\n                otherwise: Yup.string(),\n              }),\n              additionalDateOfBirth: Yup.date().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.date().required(\"Date of Birth is required\"),\n                otherwise: Yup.date(),\n              }),\n              additionalGender: Yup.string().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.string().required(\"Gender is required\"),\n                otherwise: Yup.string(),\n              }),\n              additionalOccupation: Yup.string().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.string().required(\"Occupation is required\"),\n                otherwise: Yup.string(),\n              }),\n              additionalVisaType: Yup.string().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.string().required(\"Residential Status is required\"),\n                otherwise: Yup.string(),\n              }),\n              additionalEmail: Yup.string().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.string()\n                  .email(\"Must be a valid email\")\n                  .max(255)\n                  .required(\"Email is required\"),\n                otherwise: Yup.string(),\n              }),\n              additionalRelationship: Yup.string().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.string().required(\"Relationship is required\"),\n                otherwise: Yup.string(),\n              }),\n              additionalStayCount: Yup.number().when(\"isNewDependant\", {\n                is: true,\n                then: Yup.number().required(\n                  \"No. of months dependent has stayed with you in U.S is required\"\n                ),\n                otherwise: Yup.number(),\n              }),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setIsFilerDetailsLoading(true);\n              setSubmitting(true);\n              let payload = { ...values, id: id };\n              privateApiPOST(Api.personalContactDetails, payload)\n                .then((response) => {\n                  const { status, data } = response;\n                  if (status === 200) {\n                    console.log(\"data\", data);\n                    setIsFilerDetailsLoading(false);\n                    handleFetchData();\n                    setSubmitting(false);\n                  }\n                })\n                .catch((error) => {\n                  console.log(\"Error\", error);\n                  setIsFilerDetailsLoading(false);\n                  setSubmitting(false);\n                });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values,\n              setFieldValue,\n            }) => (\n              <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                  {/* Left Side - Personal Details */}\n\n                  <Grid item lg={6} sm={6} xs={12}>\n                    <Box className={customStyles.leftSide}>\n                      <Typography variant=\"h4\" sx={{ marginBottom: \"36px\" }}>\n                        Personal Details\n                      </Typography>\n\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexWrap: \"wrap\",\n                          justifyContent: \"space-between\",\n                          maxWidth: \"96%\",\n                        }}\n                      >\n                        <Typography\n                          variant=\"subtitle1\"\n                          color=\"textSecondary\"\n                          sx={{ marginTop: \"20px\", maxWidth: \"30%\" }}\n                        >\n                          Taxpayer Name\n                          <font color=\"red\" size=\"2\">\n                            (As Per SSN):\n                          </font>\n                        </Typography>\n\n                        <Box>\n                          <CustomInputTextField\n                            attribute=\"First Name\"\n                            attributeTextAlign=\"right\"\n                            is_required={true}\n                            error={Boolean(\n                              touched.firstName && errors.firstName\n                            )}\n                            fullWidth\n                            helperText={touched.firstName && errors.firstName}\n                            // label={\n                            //   <CustomLabel label=\"First Name\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name=\"firstName\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.firstName}\n                            variant=\"outlined\"\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Middle Initial\"\n                            attributeTextAlign=\"right\"\n                            is_required={false}\n                            error={Boolean(\n                              touched.middleName && errors.middleName\n                            )}\n                            fullWidth\n                            helperText={touched.middleName && errors.middleName}\n                            // label={\n                            //   <CustomLabel label=\"Middle Name\" required={false} />\n                            // }\n                            margin=\"normal\"\n                            name=\"middleName\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.middleName}\n                            variant=\"outlined\"\n                          />\n                          <CustomInputTextField\n                            attribute=\"Last Name\"\n                            attributeTextAlign=\"right\"\n                            is_required={true}\n                            error={Boolean(touched.lastName && errors.lastName)}\n                            fullWidth\n                            helperText={touched.lastName && errors.lastName}\n                            // label={\n                            //   <CustomLabel label=\"Last Name\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name=\"lastName\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.lastName}\n                            variant=\"outlined\"\n                          />\n                        </Box>\n                      </Box>\n\n                      <CustomInputTextField\n                        attribute=\"SSN\"\n                        attributeTextAlign=\"right\"\n                        is_required={true}\n                        error={Boolean(touched.ssn && errors.ssn)}\n                        fullWidth\n                        helperText={touched.ssn && errors.ssn}\n                        // label={<CustomLabel label=\"SSN\" required={true} />}\n                        margin=\"normal\"\n                        name=\"ssn\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={transform(values.ssn)}\n                        variant=\"outlined\"\n                      />\n                      <CustomInputTextField\n                        attribute=\"Date of Birth\"\n                        attributeTextAlign=\"right\"\n                        is_required={true}\n                        error={Boolean(\n                          touched.dateOfBirth && errors.dateOfBirth\n                        )}\n                        fullWidth\n                        helperText={touched.dateOfBirth && errors.dateOfBirth}\n                        // label={\n                        //   <CustomLabel\n                        //     label=\"Date of Birth\"\n                        //     required={true}\n                        //   />\n                        // }\n                        margin=\"normal\"\n                        name=\"dateOfBirth\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"date\"\n                        value={values.dateOfBirth}\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                          shrink: true, // This is important for the label to behave correctly\n                        }}\n                        InputProps={{\n                          style: {\n                            color: \"black\", // Customize the label color\n                          },\n                        }}\n                        inputProps={{\n                          // To disable the default placeholder\n                          placeholder: \"\",\n                          // Other attributes you might need\n                        }}\n                      />\n                      <CustomInputTextField\n                        attribute=\"Gender\"\n                        attributeTextAlign=\"right\"\n                        is_required={true}\n                        error={Boolean(touched.gender && errors.gender)}\n                        select\n                        fullWidth\n                        helperText={touched.gender && errors.gender}\n                        // label={<CustomLabel label=\"Gender\" required={true} />}\n                        margin=\"normal\"\n                        name=\"gender\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.gender}\n                        variant=\"outlined\"\n                      >\n                        <MenuItem value=\"MALE\">Male</MenuItem>\n                        <MenuItem value=\"FEMALE\">Female</MenuItem>\n                        <MenuItem value=\"Other\">Other</MenuItem>\n                      </CustomInputTextField>\n                      <CustomInputTextField\n                        attribute=\"Occupation / Job Title\"\n                        attributeTextAlign=\"right\"\n                        is_required={true}\n                        error={Boolean(touched.occupation && errors.occupation)}\n                        fullWidth\n                        helperText={touched.occupation && errors.occupation}\n                        // label={\n                        //   <CustomLabel label=\"Occupation\" required={true} />\n                        // }\n                        margin=\"normal\"\n                        name=\"occupation\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.occupation}\n                        variant=\"outlined\"\n                      />\n                      <CustomInputTextField\n                        attribute=\"Residential Status\"\n                        attributeTextAlign=\"right\"\n                        is_required={true}\n                        error={Boolean(\n                          touched.residentialStatus && errors.residentialStatus\n                        )}\n                        fullWidth\n                        helperText={\n                          touched.residentialStatus && errors.residentialStatus\n                        }\n                        // label={\n                        //   <CustomLabel\n                        //     label=\"Residential Status\"\n                        //     required={true}\n                        //   />\n                        // }\n                        margin=\"normal\"\n                        name=\"residentialStatus\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.residentialStatus}\n                        variant=\"outlined\"\n                      />\n                    </Box>\n                  </Grid>\n\n                  {/* Right Side - Contact Details */}\n                  <Grid\n                    item\n                    lg={6}\n                    sm={6}\n                    xs={12}\n                    // sx={{ marginLeft: { xs: \"0px\", sm: \"60px\" } }}\n                  >\n                    <Box className={customStyles.rightSide}>\n                      <Typography variant=\"h4\" sx={{ marginBottom: \"16px\" }}>\n                        Contact Details\n                      </Typography>\n                      <Typography\n                        color={\"red\"}\n                        sx={{ marginLeft: \"10px\" }}\n                        variant=\"h5\"\n                      >\n                        (Provide U.S current communication Address)\n                      </Typography>\n                      <CustomInputTextField\n                        attribute=\"Street\"\n                        is_required={true}\n                        error={Boolean(touched.street && errors.street)}\n                        fullWidth\n                        helperText={touched.street && errors.street}\n                        // label={<CustomLabel label=\"Street\" required={true} />}\n                        margin=\"normal\"\n                        name=\"street\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.street}\n                        variant=\"outlined\"\n                      />\n                      <CustomInputTextField\n                        attribute=\"Apartment\"\n                        is_required={true}\n                        error={Boolean(touched.apartment && errors.apartment)}\n                        fullWidth\n                        helperText={touched.apartment && errors.apartment}\n                        // label={\n                        //   <CustomLabel label=\"Apartment\" required={true} />\n                        // }\n                        margin=\"normal\"\n                        name=\"apartment\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.apartment}\n                        variant=\"outlined\"\n                      />\n                      <CustomInputTextField\n                        attribute=\"City\"\n                        is_required={true}\n                        error={Boolean(touched.city && errors.city)}\n                        fullWidth\n                        helperText={touched.city && errors.city}\n                        // label={<CustomLabel label=\"City\" required={true} />}\n                        margin=\"normal\"\n                        name=\"city\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.city}\n                        variant=\"outlined\"\n                      />\n                      <CustomInputTextField\n                        attribute=\"State\"\n                        is_required={true}\n                        error={Boolean(touched.state && errors.state)}\n                        select\n                        fullWidth\n                        helperText={touched.state && errors.state}\n                        // label={<CustomLabel label=\"State\" required={true} />}\n                        margin=\"normal\"\n                        name=\"state\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.state}\n                        variant=\"outlined\"\n                      >\n                        {stateOptions.map((option) => (\n                          <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                          </MenuItem>\n                        ))}\n                      </CustomInputTextField>\n                      <CustomInputTextField\n                        attribute=\"Zip Code\"\n                        is_required={true}\n                        error={Boolean(touched.zipCode && errors.zipCode)}\n                        fullWidth\n                        helperText={touched.zipCode && errors.zipCode}\n                        // label={\n                        //   <CustomLabel label=\"Zip Code\" required={true} />\n                        // }\n                        margin=\"normal\"\n                        name=\"zipCode\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.zipCode}\n                        variant=\"outlined\"\n                      />\n                      <CustomInputTextField\n                        attribute=\"Country\"\n                        is_required={true}\n                        error={Boolean(touched.country && errors.country)}\n                        select\n                        fullWidth\n                        helperText={touched.country && errors.country}\n                        // label={\n                        //   <CustomLabel label=\"Country\" required={true} />\n                        // }\n                        margin=\"normal\"\n                        name=\"country\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.country}\n                        variant=\"outlined\"\n                      >\n                        {/* <MenuItem value=\"India\">India</MenuItem> */}\n                        <MenuItem value=\"USA\">USA</MenuItem>\n                        <MenuItem value=\"Other\">Other</MenuItem>\n                      </CustomInputTextField>\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexWrap: \"wrap\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          width: \"93%\",\n                          margin: \"10px 0\",\n                          maxHeight: \"60px\",\n                        }}\n                      >\n                        <Typography\n                          variant=\"body1\"\n                          sx={{\n                            width: { xs: \"30%\", sm: \"120px\" },\n                          }}\n                        >\n                          <span>Primary Phone</span>\n                          <span\n                            style={{\n                              color: \"red\",\n                              fontSize: \"0.875rem\",\n                              marginLeft: \"3px\",\n                            }}\n                          >\n                            *\n                          </span>\n                          &nbsp;:\n                        </Typography>\n\n                        <TextField\n                          attribute=\"Primary Phone\"\n                          error={Boolean(\n                            touched.primaryCountryCode &&\n                              errors.primaryCountryCode\n                          )}\n                          select\n                          helperText={\n                            touched.primaryCountryCode &&\n                            errors.primaryCountryCode\n                          }\n                          // label={\n                          //   <CustomLabel label=\"+91\" required={true} />\n                          // }\n                          margin=\"normal\"\n                          name=\"primaryCountryCode\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.primaryCountryCode}\n                          variant=\"outlined\"\n                          sx={{\n                            width: \"18%\",\n                            \"& .MuiOutlinedInput-root\": {\n                              \"& fieldset\": {\n                                borderRadius: \"2px\",\n                              },\n                            },\n                            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                              {\n                                border: \"0.1px solid #bdbdbd\",\n                              },\n                            \"& .MuiOutlinedInput-input\": {\n                              padding: \"10px\",\n                              backgroundColor: \"rgba(255,255,255,1)\",\n                            },\n                          }}\n                        >\n                          {countryCodes.map((option) => (\n                            <MenuItem key={option.value} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n\n                        <TextField\n                          error={Boolean(\n                            touched.primaryPhoneNumber &&\n                              errors.primaryPhoneNumber\n                          )}\n                          helperText={\n                            touched.primaryPhoneNumber &&\n                            errors.primaryPhoneNumber\n                          }\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Primary Phone Number\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"primaryPhoneNumber\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.primaryPhoneNumber}\n                          variant=\"outlined\"\n                          sx={{\n                            \"& .MuiOutlinedInput-root\": {\n                              \"& fieldset\": {\n                                borderRadius: \"2px\",\n                              },\n                            },\n                            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                              {\n                                border: \"0.1px solid #bdbdbd\",\n                              },\n                            \"& .MuiOutlinedInput-input\": {\n                              padding: \"10px\",\n                              backgroundColor: \"rgba(255,255,255,1)\",\n                            },\n                            width: { xs: \"50%\", sm: \"165px\" },\n                          }}\n                        />\n                      </Box>\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexWrap: \"wrap\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          width: \"93%\",\n                          margin: \"10px 0\",\n                          maxHeight: \"60px\",\n                        }}\n                      >\n                        <Typography\n                          variant=\"body1\"\n                          sx={{\n                            width: { xs: \"30%\", sm: \"120px\" },\n                          }}\n                        >\n                          <span>Secondary Phone</span>\n                          &nbsp;:\n                        </Typography>\n\n                        <TextField\n                          error={Boolean(\n                            touched.secondaryCountryCode &&\n                              errors.secondaryCountryCode\n                          )}\n                          select\n                          helperText={\n                            touched.secondaryCountryCode &&\n                            errors.secondaryCountryCode\n                          }\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Country Code\"\n                          //     required={false}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"secondaryCountryCode\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.secondaryCountryCode}\n                          variant=\"outlined\"\n                          sx={{\n                            \"& .MuiOutlinedInput-root\": {\n                              \"& fieldset\": {\n                                borderRadius: \"2px\",\n                              },\n                            },\n                            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                              {\n                                border: \"0.1px solid #bdbdbd\",\n                              },\n                            \"& .MuiOutlinedInput-input\": {\n                              padding: \"10px\",\n                              backgroundColor: \"rgba(255,255,255,1)\",\n                            },\n                            width: \"18%\",\n                          }}\n                        >\n                          {countryCodes.map((option) => (\n                            <MenuItem key={option.value} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n\n                        <TextField\n                          attribute=\"Secondary Phone\"\n                          error={Boolean(\n                            touched.secondaryPhoneNumber &&\n                              errors.secondaryPhoneNumber\n                          )}\n                          helperText={\n                            touched.secondaryPhoneNumber &&\n                            errors.secondaryPhoneNumber\n                          }\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Secondary Phone Number\"\n                          //     required={false}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"secondaryPhoneNumber\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.secondaryPhoneNumber}\n                          variant=\"outlined\"\n                          sx={{\n                            \"& .MuiOutlinedInput-root\": {\n                              \"& fieldset\": {\n                                borderRadius: \"2px\",\n                              },\n                            },\n                            \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\":\n                              {\n                                border: \"0.1px solid #bdbdbd\",\n                              },\n                            \"& .MuiOutlinedInput-input\": {\n                              padding: \"10px\",\n                              backgroundColor: \"rgba(255,255,255,1)\",\n                            },\n                            width: { xs: \"50%\", sm: \"165px\" },\n                          }}\n                        />\n                      </Box>\n\n                      <CustomInputTextField\n                        attribute=\"Email Id\"\n                        is_required={true}\n                        error={Boolean(\n                          touched.contactEmail && errors.contactEmail\n                        )}\n                        fullWidth\n                        helperText={touched.contactEmail && errors.contactEmail}\n                        // label={\n                        //   <CustomLabel\n                        //     label=\"Contact Email\"\n                        //     required={true}\n                        //   />\n                        // }\n                        margin=\"normal\"\n                        name=\"contactEmail\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.contactEmail}\n                        variant=\"outlined\"\n                      />\n                    </Box>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                  <Box sx={{ margin: \"16px 0\" }}>\n                    <Grid container spacing={2}>\n                      <Grid\n                        item\n                        xs={10}\n                        sm={5}\n                        style={{ display: \"flex\", alignItems: \"center\" }}\n                      >\n                        <Typography variant=\"body1\">\n                          <CustomLabel\n                            label=\"Have you filed your taxes with Taxcooler in the last year?\"\n                            required={true}\n                          />\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={2} sm={1}>\n                        <select\n                          id=\"taxFiledLastYear\"\n                          name=\"taxFiledLastYear\"\n                          value={values.taxFiledLastYear}\n                          onChange={handleChange}\n                          style={{ width: \"100%\" }}\n                        >\n                          <option value=\"\">Select</option>\n                          {/* Add an empty option */}\n                          <option value={true}>Yes</option>\n                          <option value={false}>No</option>\n                        </select>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Grid>\n                <Grid item xs={12}>\n                  <Box sx={{ margin: \"16px 0\" }}>\n                    <Grid container spacing={2}>\n                      <Grid\n                        item\n                        xs={8}\n                        sm={5}\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Typography variant=\"body1\">\n                          <CustomLabel\n                            label=\"Taxpayer Status\"\n                            required={true}\n                          />\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={4} sm={1}>\n                        <select\n                          id=\"taxPayerStatus\"\n                          name=\"taxPayerStatus\"\n                          value={values.taxPayerStatus}\n                          onChange={handleChange}\n                          style={{ width: \"100%\" }}\n                        >\n                          <option value=\"\">Select Status</option>{\" \"}\n                          {/* Add an empty option */}\n                          <option value=\"SINGLE\">Single</option>\n                          <option value=\"MARRIED\">Married</option>\n                        </select>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Grid>\n                {values.taxPayerStatus === \"MARRIED\" && (\n                  <Grid container spacing={2}>\n                    {/* Left Side - Spouse Details */}\n                    <Grid item lg={6} sm={6} xs={12}>\n                      <Typography variant=\"h4\">Spouse Details</Typography>\n                      <Grid container spacing={2}>\n                        <CustomInputTextField\n                          attribute=\"First Name\"\n                          is_required={true}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"First Name\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"spouseFirstName\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          fullWidth\n                          value={values.spouseFirstName}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.spouseFirstName && errors.spouseFirstName\n                          )}\n                          helperText={\n                            touched.spouseFirstName && errors.spouseFirstName\n                          }\n                        />\n\n                        <CustomInputTextField\n                          attribute=\"Middle Initial\"\n                          is_required={false}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Spouse Middle Initial\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"spouseMiddleInitial\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          fullWidth\n                          value={values.spouseMiddleInitial}\n                          variant=\"outlined\"\n                        />\n\n                        <CustomInputTextField\n                          attribute=\"Last Name\"\n                          is_required={true}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Spouse Last Name\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"spouseLastName\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          fullWidth\n                          value={values.spouseLastName}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.spouseLastName && errors.spouseLastName\n                          )}\n                          helperText={\n                            touched.spouseLastName && errors.spouseLastName\n                          }\n                        />\n\n                        <CustomInputTextField\n                          attribute=\"SSN/ITIN\"\n                          is_required={true}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Spouse SSN/ITIN\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"spouseSsnOrItin\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          fullWidth\n                          value={transform(values.spouseSsnOrItin)}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.spouseSsnOrItin && errors.spouseSsnOrItin\n                          )}\n                          helperText={\n                            touched.spouseSsnOrItin && errors.spouseSsnOrItin\n                          }\n                        />\n\n                        <CustomInputTextField\n                          attribute=\"Do you want to apply for ITIN?\"\n                          is_required={true}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Do you want to apply for ITIN?\"\n                          //     required={true}\n                          //   />\n                          // }\n                          select\n                          margin=\"normal\"\n                          name=\"spouseApplyForItin\"\n                          onBlur={handleBlur}\n                          fullWidth\n                          onChange={handleChange}\n                          value={values.spouseApplyForItin}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.spouseApplyForItin &&\n                              errors.spouseApplyForItin\n                          )}\n                          helperText={\n                            touched.spouseApplyForItin &&\n                            errors.spouseApplyForItin\n                          }\n                        >\n                          <MenuItem value={false}>No</MenuItem>\n                          <MenuItem value={true}>Yes</MenuItem>\n                        </CustomInputTextField>\n                        {values.spouseApplyForItin === true && (\n                          <ButtonBase\n                            onClick={() =>\n                              handleDownloadTemplate(\"ITIN_Information.xls\")\n                            }\n                            sx={{\n                              marginTop: \"12px\",\n                              textDecoration: \"underline\",\n                            }}\n                            disableTouchRipple\n                          >\n                            Download ITIN Information Excel\n                          </ButtonBase>\n                        )}\n                      </Grid>\n                    </Grid>\n\n                    {/* Right Side - Spouse Contact */}\n                    <Grid item lg={6} sm={6} xs={12}>\n                      <Typography variant=\"h4\">Spouse Contact</Typography>\n                      <Grid container spacing={2}>\n                        <CustomInputTextField\n                          attribute=\"Date of Birth\"\n                          is_required={true}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Date of Birth\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"spouseDateOfBirth\"\n                          onBlur={handleBlur}\n                          fullWidth\n                          onChange={handleChange}\n                          type=\"date\"\n                          value={values.spouseDateOfBirth}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.spouseDateOfBirth &&\n                              errors.spouseDateOfBirth\n                          )}\n                          helperText={\n                            touched.spouseDateOfBirth &&\n                            errors.spouseDateOfBirth\n                          }\n                          InputLabelProps={{\n                            shrink: true, // This is important for the label to behave correctly\n                          }}\n                          InputProps={{\n                            style: {\n                              color: \"black\", // Customize the label color\n                            },\n                          }}\n                          inputProps={{\n                            // To disable the default placeholder\n                            placeholder: \"\",\n                            // Other attributes you might need\n                          }}\n                        />\n\n                        <CustomInputTextField\n                          attribute=\"Gender\"\n                          is_required={true}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Spouse Gender\"\n                          //     required={true}\n                          //   />\n                          // }\n                          select\n                          margin=\"normal\"\n                          name=\"spouseGender\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          fullWidth\n                          value={values.spouseGender}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.spouseGender && errors.spouseGender\n                          )}\n                          helperText={\n                            touched.spouseGender && errors.spouseGender\n                          }\n                        >\n                          <MenuItem value=\"MALE\">Male</MenuItem>\n                          <MenuItem value=\"FEMALE\">Female</MenuItem>\n                          <MenuItem value=\"Other\">Other</MenuItem>\n                        </CustomInputTextField>\n\n                        <CustomInputTextField\n                          attribute=\"Occupation / Job Title\"\n                          is_required={true}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Spouse Occupation / Job Title\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"spouseOccupation\"\n                          onBlur={handleBlur}\n                          fullWidth\n                          onChange={handleChange}\n                          value={values.spouseOccupation}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.spouseOccupation && errors.spouseOccupation\n                          )}\n                          helperText={\n                            touched.spouseOccupation && errors.spouseOccupation\n                          }\n                        />\n\n                        <CustomInputTextField\n                          attribute=\"Residential Status\"\n                          is_required={true}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Spouse Residential Status\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"spouseResidentialStatus\"\n                          onBlur={handleBlur}\n                          fullWidth\n                          onChange={handleChange}\n                          value={values.spouseResidentialStatus}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.spouseResidentialStatus &&\n                              errors.spouseResidentialStatus\n                          )}\n                          helperText={\n                            touched.spouseResidentialStatus &&\n                            errors.spouseResidentialStatus\n                          }\n                        />\n\n                        <CustomInputTextField\n                          attribute=\"Email Id\"\n                          is_required={true}\n                          // label={\n                          //   <CustomLabel\n                          //     label=\"Spouse Email Id\"\n                          //     required={true}\n                          //   />\n                          // }\n                          margin=\"normal\"\n                          name=\"spouseEmail\"\n                          onBlur={handleBlur}\n                          fullWidth\n                          onChange={handleChange}\n                          value={values.spouseEmail}\n                          variant=\"outlined\"\n                          error={Boolean(\n                            touched.spouseEmail && errors.spouseEmail\n                          )}\n                          helperText={touched.spouseEmail && errors.spouseEmail}\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                )}\n\n                <Grid container>\n                  <Grid\n                    container\n                    sx={{\n                      marginTop: \"36px\",\n                      marginBottom: \"24px\",\n                    }}\n                  >\n                    <Grid\n                      item\n                      xs={10}\n                      sm={9}\n                      sx={{ display: \"flex\", alignItems: \"center\" }}\n                    >\n                      <Typography variant=\"body1\">\n                        <CustomLabel\n                          label=\" Have you (or your spouse, if married) provided living\n                        support to your kids and/or dependents during the tax\n                        year?\"\n                        />\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={2}>\n                      <CustomInputTextField\n                        attribute=\"\"\n                        is_required={true}\n                        // label={<CustomLabel label=\"\" />}\n                        select\n                        margin=\"normal\"\n                        name=\"providedLivingSupport\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.providedLivingSupport}\n                        variant=\"outlined\"\n                        error={Boolean(\n                          touched.providedLivingSupport &&\n                            errors.providedLivingSupport\n                        )}\n                        helperText={\n                          touched.providedLivingSupport &&\n                          errors.providedLivingSupport\n                        }\n                      >\n                        <MenuItem value={true}>Yes</MenuItem>\n                        <MenuItem value={false}>No</MenuItem>\n                      </CustomInputTextField>\n                    </Grid>\n                  </Grid>\n                  <Grid>\n                    <Typography\n                      variant=\"body1\"\n                      style={{ color: \"blue\", wordSpacing: \"2px\" }}\n                    >\n                      NOTE: Make sure the kids or dependants reported in your\n                      (Taxpayer) 2023 Tax Return are not claimed as dependants\n                      in any other 2023 Individual Tax Returns.\n                    </Typography>\n                  </Grid>\n\n                  {values.providedLivingSupport === true ? (\n                    <Grid item xs={12}>\n                      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                        <Button\n                          startIcon={\n                            values.isNewDependant ? <RemoveIcon /> : <AddIcon />\n                          }\n                          color=\"primary\"\n                          onClick={() => {\n                            // Toggle between true and false\n                            setFieldValue(\n                              \"isNewDependant\",\n                              !values.isNewDependant\n                            );\n                          }}\n                          sx={{\n                            margin: \"20px 0\",\n                          }}\n                        >\n                          {values.isNewDependant\n                            ? \"Remove Dependant\"\n                            : \"Add Dependant\"}\n                        </Button>\n                      </Box>\n                    </Grid>\n                  ) : null}\n\n                  {values.isNewDependant && (\n                    <Grid container spacing={2}>\n                      {/* Left Side - additional Details */}\n                      <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h4\">Additional Details</Typography>\n                        <Grid container spacing={2}>\n                          <CustomInputTextField\n                            attribute=\"First Name\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"First Name\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalFirstName`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.additionalFirstName}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalFirstName &&\n                              errors.additionalFirstName\n                            }\n                            helperText={\n                              touched.additionalFirstName &&\n                              errors.additionalFirstName\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Middle Initial\"\n                            is_required={false}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Middle Initial\"\n                            //     required={false}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalMiddleInitial`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.additionalMiddleInitial}\n                            variant=\"outlined\"\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Last Name\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Last Name\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalLastName`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.additionalLastName}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalLastName &&\n                              errors.additionalLastName\n                            }\n                            helperText={\n                              touched.additionalLastName &&\n                              errors.additionalLastName\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"SSN/ITIN\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel label=\"SSN/ITIN\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalSsnOrItin`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={transform(values.additionalSsnOrItin)}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalSsnOrItin &&\n                              errors.additionalSsnOrItin\n                            }\n                            helperText={\n                              touched.additionalSsnOrItin &&\n                              errors.additionalSsnOrItin\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Do you want to apply for ITIN?\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Do you want to apply for ITIN?\"\n                            //     required={true}\n                            //   />\n                            // }\n                            select\n                            margin=\"normal\"\n                            name={`additionalApplyForItin`}\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.additionalApplyForItin}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalApplyForItin &&\n                              errors.additionalApplyForItin\n                            }\n                            helperText={\n                              touched.additionalApplyForItin &&\n                              errors.additionalApplyForItin\n                            }\n                          >\n                            <MenuItem value={false}>No</MenuItem>\n                            <MenuItem value={true}>Yes</MenuItem>\n                          </CustomInputTextField>\n                          {values.additionalApplyForItin === true && (\n                            <ButtonBase\n                              onClick={() =>\n                                handleDownloadTemplate(\"ITIN_Information.xls\")\n                              }\n                              sx={{\n                                marginTop: \"2px\",\n                                textDecoration: \"underline\",\n                              }}\n                              disableTouchRipple\n                            >\n                              Download ITIN Information Excel\n                            </ButtonBase>\n                          )}\n\n                          <CustomInputTextField\n                            attribute=\"Relationship\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Relationship\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalRelationship`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.additionalRelationship}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalRelationship &&\n                              errors.additionalRelationship\n                            }\n                            helperText={\n                              touched.additionalRelationship &&\n                              errors.additionalRelationship\n                            }\n                          />\n                        </Grid>\n                      </Grid>\n\n                      {/* Right Side - additional Contact */}\n                      <Grid item lg={6} sm={6} xs={12}>\n                        <Typography variant=\"h4\">Additional Contact</Typography>\n                        <Grid container spacing={2}>\n                          <CustomInputTextField\n                            attribute=\"Dependent DOB\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Date of Birth\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalDateOfBirth`}\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            type=\"date\"\n                            value={values.additionalDateOfBirth}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalDateOfBirth &&\n                              errors.additionalDateOfBirth\n                            }\n                            helperText={\n                              touched.additionalDateOfBirth &&\n                              errors.additionalDateOfBirth\n                            }\n                            InputLabelProps={{\n                              shrink: true, // This is important for the label to behave correctly\n                            }}\n                            InputProps={{\n                              style: {\n                                color: \"black\", // Customize the label color\n                              },\n                            }}\n                            inputProps={{\n                              // To disable the default placeholder\n                              placeholder: \"\",\n                              // Other attributes you might need\n                            }}\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Gender\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel label=\"Gender\" required={true} />\n                            // }\n                            select\n                            margin=\"normal\"\n                            name={`additionalGender`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            fullWidth\n                            value={values.additionalGender}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalGender &&\n                              errors.additionalGender\n                            }\n                            helperText={\n                              touched.additionalGender &&\n                              errors.additionalGender\n                            }\n                          >\n                            <MenuItem value=\"MALE\">Male</MenuItem>\n                            <MenuItem value=\"FEMALE\">Female</MenuItem>\n                            <MenuItem value=\"Other\">Other</MenuItem>\n                          </CustomInputTextField>\n\n                          <CustomInputTextField\n                            attribute=\"Occupation / Job Title\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Occupation / Job Title\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalOccupation`}\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.additionalOccupation}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalOccupation &&\n                              errors.additionalOccupation\n                            }\n                            helperText={\n                              touched.additionalOccupation &&\n                              errors.additionalOccupation\n                            }\n                          />\n\n                          <CustomInputTextField\n                            attribute=\"Visa Type\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"Visa Type\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalVisaType`}\n                            onBlur={handleBlur}\n                            select\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.additionalVisaType}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalVisaType &&\n                              errors.additionalVisaType\n                            }\n                            helperText={\n                              touched.additionalVisaType &&\n                              errors.additionalVisaType\n                            }\n                          >\n                            {[\n                              \"H4\",\n                              \"US Citizen\",\n                              \"L2\",\n                              \"Green Card\",\n                              \"Other\",\n                            ].map((each, id) => {\n                              return (\n                                <MenuItem key={id} value={each}>\n                                  {each}\n                                </MenuItem>\n                              );\n                            })}\n                          </CustomInputTextField>\n\n                          <CustomInputTextField\n                            attribute=\"Email Id\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel label=\"Email Id\" required={true} />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalEmail`}\n                            onBlur={handleBlur}\n                            fullWidth\n                            onChange={handleChange}\n                            value={values.additionalEmail}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalEmail && errors.additionalEmail\n                            }\n                            helperText={\n                              touched.additionalEmail && errors.additionalEmail\n                            }\n                          />\n                          <CustomInputTextField\n                            attribute=\"No. of months dependent has stayed with you in U.S\"\n                            is_required={true}\n                            // label={\n                            //   <CustomLabel\n                            //     label=\"No. of months dependent has stayed with you in U.S\"\n                            //     required={true}\n                            //   />\n                            // }\n                            margin=\"normal\"\n                            name={`additionalStayCount`}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"number\"\n                            fullWidth\n                            value={values.additionalStayCount}\n                            variant=\"outlined\"\n                            error={\n                              touched.additionalStayCount &&\n                              errors.additionalStayCount\n                            }\n                            helperText={\n                              touched.additionalStayCount &&\n                              errors.additionalStayCount\n                            }\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  )}\n                  <Grid item xs={12}>\n                    {isDependantDetailsLoading ? (\n                      <CircularProgress />\n                    ) : (\n                      <TableContainer\n                        sx={{\n                          margin: \"32px 0\",\n                          paddingBottom: { xs: \"10px\", sm: \"0px\" },\n                        }}\n                      >\n                        <Typography\n                          sx={{\n                            color: \"rgba(71,71,71,1)\",\n                            fontSize: \"21px\",\n                            fontWeight: 500,\n                            lineHeight: \"33px\",\n                            textAlign: \"center\",\n                            marginBottom: \"32px\",\n                          }}\n                        >\n                          Existing Dependant Details\n                        </Typography>\n                        <Table\n                          sx={{\n                            borderCollapse: \"collapse\",\n                          }}\n                        >\n                          <TableHead>\n                            <TableRow>\n                              <StyledTableCell\n                                className={customStyles.tableHeader}\n                              >\n                                Name\n                              </StyledTableCell>\n\n                              <StyledTableCell\n                                className={customStyles.tableHeader}\n                              >\n                                Relationship\n                              </StyledTableCell>\n                              <StyledTableCell\n                                className={customStyles.tableHeader}\n                              >\n                                SSN/ITIN\n                              </StyledTableCell>\n                              <StyledTableCell\n                                className={customStyles.tableHeader}\n                              >\n                                Apply ?\n                              </StyledTableCell>\n                              <StyledTableCell\n                                className={customStyles.tableHeader}\n                              >\n                                DOB\n                              </StyledTableCell>\n                              <StyledTableCell\n                                className={customStyles.tableHeader}\n                              >\n                                Visa Type\n                              </StyledTableCell>\n                              <StyledTableCell\n                                className={customStyles.tableHeader}\n                              >\n                                C.S\n                              </StyledTableCell>\n                              <StyledTableCell\n                                className={customStyles.tableHeader}\n                              >\n                                Months\n                              </StyledTableCell>\n                              <StyledTableCell\n                                className={customStyles.tableHeader}\n                              >\n                                Action\n                              </StyledTableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {dependantDetails.length > 0 &&\n                              dependantDetails.map((row, index) => (\n                                <TableRow key={index}>\n                                  <StyledTableCell\n                                    className={customStyles.tableData}\n                                  >\n                                    {row.additionalFirstName}{\" \"}\n                                    {row.additionalLastName}\n                                  </StyledTableCell>\n                                  <StyledTableCell\n                                    className={customStyles.tableData}\n                                  >\n                                    {row.additionalRelationship}\n                                  </StyledTableCell>\n                                  <StyledTableCell\n                                    className={customStyles.tableData}\n                                  >\n                                    {transform(row.additionalSsnOrItin)}\n                                  </StyledTableCell>\n                                  <StyledTableCell\n                                    className={customStyles.tableData}\n                                  >\n                                    {row.additionalApplyForItin ? \"YES\" : \"NO\"}\n                                  </StyledTableCell>\n                                  <StyledTableCell\n                                    className={customStyles.tableData}\n                                  >\n                                    {row.additionalDateOfBirth}\n                                  </StyledTableCell>\n                                  <StyledTableCell\n                                    className={customStyles.tableData}\n                                  >\n                                    {row.additionalVisaType}\n                                  </StyledTableCell>\n                                  <StyledTableCell\n                                    className={customStyles.tableData}\n                                  >\n                                    USA\n                                  </StyledTableCell>\n                                  <StyledTableCell\n                                    className={customStyles.tableData}\n                                  >\n                                    {row.additionalStayCount}\n                                  </StyledTableCell>\n                                  <StyledTableCell\n                                    className={customStyles.tableData}\n                                  >\n                                    <Button\n                                      disabled={isFilerDetailsLoading}\n                                      startIcon={<DeleteIcon />}\n                                      size=\"small\"\n                                      onClick={() => {\n                                        handleDeleteDependant(row.id);\n                                      }}\n                                      className={customStyles.buttons}\n                                    >\n                                      Delete{\" \"}\n                                      {isFilerDetailsLoading && (\n                                        <CircularProgress\n                                          sx={{ ml: 1 }}\n                                          size={14}\n                                        />\n                                      )}\n                                    </Button>\n                                  </StyledTableCell>\n                                  <StyledTableCell\n                                    className={customStyles.mobileView}\n                                  >\n                                    <Box>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          flexWrap: \"wrap\",\n                                          justifyContent: \"space-between\",\n                                          marginTop: \"16px\",\n                                        }}\n                                      >\n                                        <Box sx={{ marginTop: \"3px\" }}>\n                                          <Typography\n                                            className={\n                                              customStyles.mobileViewStyledTableCellHeader\n                                            }\n                                          >\n                                            First Name\n                                          </Typography>\n\n                                          <Typography\n                                            className={\n                                              customStyles.mobileViewStyledTableCellValue\n                                            }\n                                          >\n                                            {row.additionalFirstName}\n                                          </Typography>\n                                        </Box>\n                                        <Box sx={{ marginTop: \"3px\" }}>\n                                          <Typography\n                                            className={\n                                              customStyles.mobileViewStyledTableCellHeader\n                                            }\n                                          >\n                                            Last Name\n                                          </Typography>\n\n                                          <Typography\n                                            className={\n                                              customStyles.mobileViewStyledTableCellValue\n                                            }\n                                          >\n                                            {row.additionalLastName}\n                                          </Typography>\n                                        </Box>\n                                        <Box sx={{ marginTop: \"3px\" }}>\n                                          <Typography\n                                            className={\n                                              customStyles.mobileViewStyledTableCellHeader\n                                            }\n                                          >\n                                            RelationShip\n                                          </Typography>\n\n                                          <Typography\n                                            className={\n                                              customStyles.mobileViewStyledTableCellValue\n                                            }\n                                          >\n                                            {row.additionalRelationship}\n                                          </Typography>\n                                        </Box>\n                                      </Box>\n                                      <Box\n                                        sx={{\n                                          display: \"flex\",\n                                          flexWrap: \"wrap\",\n                                          justifyContent: \"space-between\",\n                                          marginTop: \"16px\",\n                                        }}\n                                      >\n                                        <Box sx={{ marginTop: \"3px\" }}>\n                                          <Typography\n                                            className={\n                                              customStyles.mobileViewStyledTableCellHeader\n                                            }\n                                          >\n                                            Visa Type\n                                          </Typography>\n\n                                          <Typography\n                                            className={\n                                              customStyles.mobileViewStyledTableCellValue\n                                            }\n                                          >\n                                            {row.additionalVisaType}\n                                          </Typography>\n                                        </Box>\n\n                                        <Box sx={{ marginTop: \"3px\" }}>\n                                          <Typography\n                                            className={\n                                              customStyles.mobileViewStyledTableCellHeader\n                                            }\n                                          >\n                                            SSN/ITIN\n                                          </Typography>\n\n                                          <Typography\n                                            className={\n                                              customStyles.mobileViewStyledTableCellValue\n                                            }\n                                          >\n                                            {transform(row.additionalSsnOrItin)}\n                                          </Typography>\n                                        </Box>\n\n                                        <Button\n                                          disabled={isFilerDetailsLoading}\n                                          startIcon={<DeleteIcon />}\n                                          size=\"small\"\n                                          onClick={() => {\n                                            handleDeleteDependant(row.id);\n                                          }}\n                                        >\n                                          Delete{\" \"}\n                                          {isFilerDetailsLoading && (\n                                            <CircularProgress\n                                              sx={{ ml: 1 }}\n                                              size={14}\n                                            />\n                                          )}\n                                        </Button>\n                                      </Box>\n                                    </Box>\n                                  </StyledTableCell>\n                                </TableRow>\n                              ))}\n                          </TableBody>\n                        </Table>\n\n                        {dependantDetails.length === 0 &&\n                          !isDependantDetailsLoading && (\n                            <Typography\n                              variant=\"h5\"\n                              sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n                            >\n                              No Dependants Found\n                            </Typography>\n                          )}\n                        <Typography\n                          variant=\"h5\"\n                          sx={{\n                            textAlign: \"center\",\n                            color: \"red\",\n                            marginTop: \"20px\",\n                          }}\n                        >\n                          TO MODIFY EXISTING DEPENDENT DETAILS, DELETE THE SAME\n                          and then CLICK on \"Add Additional Dependents\"\n                        </Typography>\n                      </TableContainer>\n                    )}\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        margin: { xs: \"8px 0\", sm: \"16px 0\" },\n                      }}\n                    >\n                      <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                      >\n                        SAVE\n                      </Button>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      )}\n      {/* </Container> */}\n    </Box>\n  );\n};\n\nexport default FilerDetails;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  CircularProgress,\n  Tooltip,\n  ButtonBase,\n} from \"@mui/material\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport TextField from \"@mui/material/TextField\";\nimport Api from \"../../../components/Api\";\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\n\nconst IncomeDetails = ({\n  open,\n  id,\n  data,\n  handleFetchData,\n  handleDownloadTemplate,\n}) => {\n  const [isIncomeDetailsLoading, setIsIncomeDetailsLoading] = useState(false);\n\n  const initialValues = {\n    interestIncome: data[\"interestIncome\"],\n    dividendIncome: data[\"dividendIncome\"],\n    soldStocks: data[\"soldStocks\"],\n    soldCrypto: data[\"soldCrypto\"],\n    foreignIncome: data[\"foreignIncome\"],\n    retirementAccounts: data[\"retirementAccounts\"],\n    stateTaxRefund: data[\"stateTaxRefund\"],\n    foreignBankAccount: data[\"foreignBankAccount\"],\n    foreignAssets: data[\"foreignAssets\"],\n    rentalIncome: data[\"rentalIncome\"],\n    income1099: data[\"income1099\"],\n    incomeDescription: data[\"incomeDescription\"],\n    incomeAmount: data[\"incomeAmount\"],\n    addAdditionalInformation: false,\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 30px 5px\",\n        border: { xs: \"none\", sm: \"none\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      {isIncomeDetailsLoading ? (\n        <CircularProgress />\n      ) : (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={Yup.object().shape({\n            interestIncome: Yup.boolean(),\n            dividendIncome: Yup.boolean(),\n            soldStocks: Yup.boolean(),\n            soldCrypto: Yup.boolean(),\n            foreignIncome: Yup.boolean(),\n            retirementAccounts: Yup.boolean(),\n            stateTaxRefund: Yup.boolean(),\n            foreignBankAccount: Yup.boolean(),\n            foreignAssets: Yup.boolean(),\n            rentalIncome: Yup.boolean(),\n            income1099: Yup.boolean(),\n            incomeDescription: Yup.string().when(\"addAdditionalInformation\", {\n              is: true,\n              then: Yup.string().required(\"Income Description is Required\"),\n              otherwise: Yup.string(),\n            }),\n            incomeAmount: Yup.number().when(\"addAdditionalInformation\", {\n              is: true,\n              then: Yup.number().required(\"Income Amount is Required\"),\n              otherwise: Yup.number(),\n            }),\n            addAdditionalInformation: Yup.boolean(),\n          })}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setIsIncomeDetailsLoading(true);\n            setSubmitting(true);\n            let payload = { ...values, id: id };\n            privateApiPOST(Api.incomeDetails, payload)\n              .then((response) => {\n                const { status, data } = response;\n                if (status === 200) {\n                  console.log(\"data\", data);\n                  setIsIncomeDetailsLoading(false);\n                  handleFetchData();\n                  setSubmitting(false);\n                }\n              })\n              .catch((error) => {\n                console.log(\"Error\", error);\n                setIsIncomeDetailsLoading(false);\n                setSubmitting(false);\n              });\n          }}\n        >\n          {({\n            values,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            errors,\n            touched,\n          }) => (\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                {/* Interest Income */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Do you have any Interest Income?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"interestIncome\"\n                      value={values.interestIncome}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                    <Tooltip\n                      title=\"Upload 1099-INT forms and Interest received in Foreign Banks\"\n                      placement=\"left-end\"\n                    >\n                      <Button>Details</Button>\n                    </Tooltip>\n                  </FormControl>\n                </Grid>\n\n                {/* Dividend Income */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Do you have any Dividend Income?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"dividendIncome\"\n                      value={values.dividendIncome}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                    <Tooltip\n                      title=\"Upload 1099-DIV forms and dividends received in Foreign Banks\"\n                      placement=\"left-end\"\n                    >\n                      <Button>Details</Button>\n                    </Tooltip>\n                  </FormControl>\n                </Grid>\n\n                {/* Sold Stocks */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Did you sell any stocks in 2022?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"soldStocks\"\n                      value={values.soldStocks}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                    <Tooltip\n                      title=\"Upload 1099-B, Gain/Loss statement in excel format. If it is ESPP/RSU stocks, upload adjusted cost basis details as well.\"\n                      placement=\"left-end\"\n                    >\n                      <Button>Details</Button>\n                    </Tooltip>\n                  </FormControl>\n                </Grid>\n\n                {/* Sold Crypto */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Did you sell any Crypto Currency in 2022?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"soldCrypto\"\n                      value={values.soldCrypto}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                    <Tooltip\n                      title=\"Download and fill Crypto CSV.\"\n                      placement=\"left-end\"\n                    >\n                      <Button>Details</Button>\n                    </Tooltip>\n                    {values.soldCrypto ? (\n                      <ButtonBase\n                        onClick={() =>\n                          handleDownloadTemplate(\"Crypto_Information_1.xls\")\n                        }\n                        sx={{\n                          marginTop: \"2px\",\n                          textDecoration: \"underline\",\n                        }}\n                        disableTouchRipple\n                      >\n                        Download and fill Crypto Excel\n                      </ButtonBase>\n                    ) : null}\n                  </FormControl>\n                </Grid>\n                {/* Foreign Income */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Do you have any foreign country income in 2022?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"foreignIncome\"\n                      value={values.foreignIncome}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n\n                    <Tooltip\n                      title=\"Upload Total income received in Foreign Country and Total taxes paid in Foreign Country\"\n                      placement=\"left-end\"\n                    >\n                      <Button>Details</Button>\n                    </Tooltip>\n                  </FormControl>\n                </Grid>\n\n                {/* Contributions/Distributions */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Do you have contributions/distributions to/from retirement\n                      accounts in year 2022?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"retirementAccounts\"\n                      value={values.retirementAccounts}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                    <Tooltip\n                      title=\"401k/IRA etc., which is not mentioned in your W2. Upload Bank Statement 1099 R in Upload Tax Docs section\"\n                      placement=\"left-end\"\n                    >\n                      <Button>Details</Button>\n                    </Tooltip>\n                  </FormControl>\n                </Grid>\n\n                {/* State Tax Refund */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Did you get State tax refund(s) in 2022?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"stateTaxRefund\"\n                      value={values.stateTaxRefund}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                    <Tooltip\n                      title=\"If yes, upload 1099 G you might have received from State in Upload Tax Docs section\"\n                      placement=\"left-end\"\n                    >\n                      <Button>Details</Button>\n                    </Tooltip>\n                  </FormControl>\n                </Grid>\n\n                {/* Foreign Bank Account */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Do you have Account Balance in Foreign banks exceeding\n                      more than $10,000?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"foreignBankAccount\"\n                      value={values.foreignBankAccount}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                    <Tooltip\n                      title=\"As per recent IRS laws, you need to report if the combined investments(stocks/bonds/real estate) of all your foreign accounts exceeds $10,000 on at least 1 day.\n                        You do not need to pay any tax on this amount. A separate form need to be sent to IRS\"\n                      placement=\"left-end\"\n                    >\n                      <Button>Details</Button>\n                    </Tooltip>\n                    {values.foreignBankAccount ? (\n                      <ButtonBase\n                        onClick={() =>\n                          handleDownloadTemplate(\"FBAR_Information_2022.xls\")\n                        }\n                        sx={{\n                          marginTop: \"2px\",\n                          textDecoration: \"underline\",\n                        }}\n                        disableTouchRipple\n                      >\n                        Download and fill FBAR Excel\n                      </ButtonBase>\n                    ) : null}\n                  </FormControl>\n                </Grid>\n\n                {/* Foreign Assets */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Do you have Foreign Assets value more than $50,000 at any\n                      time during the tax year?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"foreignAssets\"\n                      value={values.foreignAssets}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                    <Tooltip\n                      title=\"As per recent IRS laws, you need to report if the combined investments(stocks/bonds/Accounts/Partnerships) of all your foreign assets exceeds $50,000 on at least 1 day in year 2022. You do not need to pay any tax on this amount. You need to report these details to avoid penalties.\"\n                      placement=\"left-end\"\n                    >\n                      <Button>Details</Button>\n                    </Tooltip>\n                    {values.foreignAssets ? (\n                      <ButtonBase\n                        onClick={() =>\n                          handleDownloadTemplate(\"FBAR_Information_2022_1.xls\")\n                        }\n                        sx={{\n                          marginTop: \"2px\",\n                          textDecoration: \"underline\",\n                        }}\n                        disableTouchRipple\n                      >\n                        Download and fill FBAR Excel(Financial Assets Tab)\n                      </ButtonBase>\n                    ) : null}\n                  </FormControl>\n                </Grid>\n\n                {/* Rental Income */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Do you have Rental Income in Foreign Country/USA?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"rentalIncome\"\n                      value={values.rentalIncome}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n\n                {/* 1099-Misc/1099-NEC Income */}\n                <Grid item sm={12} xs={12}>\n                  <FormControl\n                    component=\"fieldset\"\n                    sx={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      justifyContent: \"flex-start\",\n                    }}\n                  >\n                    <FormLabel\n                      sx={{\n                        width: \"550px\", // Set the width here\n                      }}\n                    >\n                      Do you have 1099-Misc/1099-NEC Income in year 2022?\n                    </FormLabel>\n                    <RadioGroup\n                      name=\"income1099\"\n                      value={values.income1099}\n                      onChange={handleChange}\n                      sx={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                      }}\n                    >\n                      <FormControlLabel\n                        value={true}\n                        control={<Radio />}\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value={false}\n                        control={<Radio />}\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                    <Tooltip\n                      title=\"Upload 1099 Misc / 1099 NEC\"\n                      placement=\"left-end\"\n                    >\n                      <Button>Details</Button>\n                    </Tooltip>\n                  </FormControl>\n                </Grid>\n\n                <Grid\n                  container\n                  spacing={2}\n                  sx={{\n                    marginTop: \"30px\",\n                    marginBottom: \"30px\",\n                    marginLeft: \"0px\",\n                  }}\n                >\n                  <Grid item xs={12} className=\"leftSide\">\n                    <Typography variant=\"h5\">\n                      Add other Income Information\n                    </Typography>\n\n                    <CustomInputTextField\n                      error={Boolean(\n                        touched.incomeDescription && errors.incomeDescription\n                      )}\n                      fullWidth\n                      helperText={\n                        touched.incomeDescription && errors.incomeDescription\n                      }\n                      attribute=\"Income Description\"\n                      margin=\"normal\"\n                      name=\"incomeDescription\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.incomeDescription}\n                      variant=\"outlined\"\n                    />\n\n                    <CustomInputTextField\n                      error={Boolean(\n                        touched.incomeAmount && errors.incomeAmount\n                      )}\n                      fullWidth\n                      helperText={touched.incomeAmount && errors.incomeAmount}\n                      attribute=\"Income Amount\"\n                      margin=\"normal\"\n                      name=\"incomeAmount\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.incomeAmount}\n                      variant=\"outlined\"\n                      type=\"number\"\n                    />\n\n                    {/* <Grid item xs={12} sm={6}>\n                        <Button\n                          variant={\n                            values.addAdditionalInformation\n                              ? \"contained\"\n                              : \"outlined\"\n                          }\n                          color=\"primary\"\n                          name=\"addAdditionalInformation\"\n                          onClick={() =>\n                            handleChange(!values.addAdditionalInformation)\n                          }\n                          value={values.addAdditionalInformation}\n                        >\n                          Add Additional Information\n                        </Button>\n                      </Grid> */}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    margin: { xs: \"8px 0\", sm: \"16px 0\" },\n                  }}\n                >\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    SAVE\n                  </Button>\n                </Box>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </Box>\n  );\n};\n\nexport default IncomeDetails;\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  TextField,\n  MenuItem,\n  Button,\n  CircularProgress,\n  FormControl,\n} from \"@mui/material\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\"; // Import Yup for validation\nimport Api from \"../../../components/Api\";\nimport { privateApiPOST } from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\n\nconst validationSchema = Yup.object().shape({\n  bankingType: Yup.string().required(\"Banking Type is required\"),\n  bankName: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Bank Name is required\"),\n  }),\n  accountHolderName: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Holder Name is required\"),\n  }),\n  ownership: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Ownership is required\"),\n  }),\n  routingNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .matches(/^\\d{9}$/, \"Routing Number must be a valid 9-digit number\")\n      .required(\"Routing Number is required\"),\n  }),\n  confirmRoutingNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Routing Number is required\")\n      .oneOf([Yup.ref(\"routingNumber\"), null], \"Routing Numbers must match\"),\n  }),\n  accountNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Number is required\"),\n  }),\n  confirmAccountNumber: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Account Number is required\")\n      .oneOf([Yup.ref(\"accountNumber\"), null], \"Account Numbers must match\"),\n  }),\n  accountType: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string().required(\"Account Type is required\"),\n  }),\n  confirmAccountType: Yup.string().when(\"bankingType\", {\n    is: \"PAPER CHECK\",\n    then: Yup.string(),\n    otherwise: Yup.string()\n      .required(\"Confirm Account Type is required\")\n      .oneOf([Yup.ref(\"accountType\"), null], \"Account Types must match\"),\n  }),\n});\n\nconst BankDetails = ({ open, id, data, handleFetchData }) => {\n  const [isBankDetailsLoading, setIsBankDetailsLoading] = useState(false);\n\n  const initialValues = {\n    bankingType: data[\"bankingType\"],\n    bankName: data[\"bankName\"],\n    accountHolderName: data[\"accountHolderName\"],\n    ownership: data[\"ownership\"],\n    routingNumber: data[\"routingNumber\"],\n    confirmRoutingNumber: data[\"confirmRoutingNumber\"],\n    accountNumber: data[\"accountNumber\"],\n    confirmAccountNumber: data[\"confirmAccountNumber\"],\n    accountType: data[\"accountType\"],\n    confirmAccountType: data[\"confirmAccountType\"],\n  };\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 30px 5px\",\n        border: { xs: \"none\", sm: \"none\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {isBankDetailsLoading ? (\n        <CircularProgress />\n      ) : (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setIsBankDetailsLoading(true);\n            setSubmitting(true);\n            let payload = { ...values, id: id };\n            privateApiPOST(Api.bankDetails, payload)\n              .then((response) => {\n                const { status, data } = response;\n                if (status === 200) {\n                  console.log(\"data\", data);\n                  setIsBankDetailsLoading(false);\n                  handleFetchData();\n                  setSubmitting(false);\n                }\n              })\n              .catch((error) => {\n                console.log(\"Error\", error);\n                setIsBankDetailsLoading(false);\n                setSubmitting(false);\n              });\n          }}\n        >\n          {({ values, handleChange, errors, touched, handleBlur }) => (\n            <Form>\n              <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n                <Box\n                  width=\"98%\"\n                  align=\"left\"\n                  sx={{\n                    border: \"1px solid #000000\",\n                    padding: \"20px\",\n                    marginBottom: \"20px\",\n                    backgroundColor: \"#f7f7f7\",\n                  }}\n                >\n                  <fieldset>\n                    <legend>Bank Details</legend>\n                    <br />\n                    <Typography\n                      color=\"brown\"\n                      variant=\"h4\"\n                      sx={{ marginTop: \"10px\" }}\n                    >\n                      <b>Important Note</b>\n                    </Typography>\n                    <Typography\n                      align=\"justify\"\n                      sx={{ marginTop: \"5px\", wordSpacing: \"3px\" }}\n                    >\n                      The IRS and certain State Revenue Departments facilitate\n                      DIRECT DEPOSIT / WITHDRAWAL of Tax Refund or Tax Dues on\n                      the Tax Returns. If you are interested in availing this\n                      option, we request you to kindly input the following\n                      details. You may also provide multiple bank accounts for\n                      IRS to direct deposit your Tax Refund in different\n                      accounts.\n                    </Typography>\n                    <br />\n                    <br />\n                  </fieldset>\n                </Box>\n                <Grid\n                  container\n                  sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}\n                >\n                  <Grid\n                    item\n                    xs={10}\n                    sm={4}\n                    style={{ display: \"flex\", alignItems: \"center\" }}\n                  >\n                    <Typography variant=\"body1\">\n                      I prefer to receive my tax refunds by way of\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={2} sm={4}>\n                    <select\n                      id=\"bankingType\"\n                      name=\"bankingType\"\n                      value={values.bankingType}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      style={{ width: \"100%\" }}\n                    >\n                      <option value=\"\">Select Option</option>\n                      <option value=\"DIRECT DEPOSIT INTO MY BANK ACCOUNT\">\n                        Direct deposit into my bank account\n                      </option>\n                      <option value=\"PAPER CHECK\">Paper Check</option>\n                    </select>\n                    {touched.bankingType && errors.bankingType && (\n                      <div className=\"error\">{errors.bankingType}</div>\n                    )}\n                  </Grid>\n                  <Grid>\n                    {\" \"}\n                    <Typography\n                      variant=\"h5\"\n                      sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}\n                    >\n                      Bank Account Information\n                    </Typography>\n                    <Typography\n                      sx={{\n                        marginTop: \"30px\",\n                        marginLeft: \"15px\",\n                        color: \"red\",\n                      }}\n                    >\n                      Note: Please understand that there is no risk by entering\n                      Bank Account and Routing Numbers\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              {/* Additional Fields for Direct Deposit */}\n\n              <Grid>\n                <Grid\n                  container\n                  spacing={2}\n                  sx={{\n                    border: \"1px solid #000000\",\n                    padding: \"20px\",\n                    marginBottom: \"20px\",\n                    backgroundColor: \"#C7DFF0\",\n                  }}\n                >\n                  <Grid item lg={6} sm={6} xs={12}>\n                    <CustomInputTextField\n                      attribute=\"Bank Name\"\n                      is_required={false}\n                      margin=\"normal\"\n                      name=\"bankName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.bankName}\n                      variant=\"outlined\"\n                      disabled={values.bankingType === \"PAPER CHECK\"}\n                      error={Boolean(touched.bankName && errors.bankName)}\n                      helperText={touched.bankName && errors.bankName}\n                    />\n                    <CustomInputTextField\n                      attribute=\"Account Number\"\n                      is_required={false}\n                      margin=\"normal\"\n                      name=\"accountNumber\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.accountNumber}\n                      variant=\"outlined\"\n                      disabled={values.bankingType === \"PAPER CHECK\"}\n                      error={Boolean(\n                        touched.accountNumber && errors.accountNumber\n                      )}\n                      helperText={touched.accountNumber && errors.accountNumber}\n                    />\n\n                    <CustomInputTextField\n                      attribute=\"Routing Number\"\n                      is_required={false}\n                      margin=\"normal\"\n                      name=\"routingNumber\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.routingNumber}\n                      variant=\"outlined\"\n                      disabled={values.bankingType === \"PAPER CHECK\"}\n                      error={Boolean(\n                        touched.routingNumber && errors.routingNumber\n                      )}\n                      helperText={touched.routingNumber && errors.routingNumber}\n                    />\n                    <CustomInputTextField\n                      attribute=\"Account Type\"\n                      is_required={false}\n                      margin=\"normal\"\n                      name=\"accountType\"\n                      select\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.accountType}\n                      variant=\"outlined\"\n                      disabled={values.bankingType === \"PAPER CHECK\"}\n                      error={Boolean(touched.accountType && errors.accountType)}\n                      helperText={touched.accountType && errors.accountType}\n                    >\n                      <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                      <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                    </CustomInputTextField>\n                    <CustomInputTextField\n                      attribute=\"Ownership\"\n                      is_required={false}\n                      margin=\"normal\"\n                      name=\"ownership\"\n                      select\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.ownership}\n                      variant=\"outlined\"\n                      disabled={values.bankingType === \"PAPER CHECK\"}\n                      error={Boolean(touched.ownership && errors.ownership)}\n                      helperText={touched.ownership && errors.ownership}\n                    >\n                      <MenuItem value=\"TAXPAYER/SPOUSE\">\n                        Tax Payer / Spouse\n                      </MenuItem>\n                      <MenuItem value=\"JOINT\">Joint</MenuItem>\n                    </CustomInputTextField>\n                  </Grid>\n                  <Grid item lg={6} sm={6} xs={12}>\n                    <CustomInputTextField\n                      attribute=\"Account Holder Name\"\n                      is_required={false}\n                      margin=\"normal\"\n                      name=\"accountHolderName\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.accountHolderName}\n                      variant=\"outlined\"\n                      disabled={values.bankingType === \"PAPER CHECK\"}\n                      error={Boolean(\n                        touched.accountHolderName && errors.accountHolderName\n                      )}\n                      helperText={\n                        touched.accountHolderName && errors.accountHolderName\n                      }\n                    />\n\n                    <CustomInputTextField\n                      attribute=\"Confirm Account Number\"\n                      is_required={false}\n                      margin=\"normal\"\n                      name=\"confirmAccountNumber\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.confirmAccountNumber}\n                      variant=\"outlined\"\n                      disabled={values.bankingType === \"PAPER CHECK\"}\n                      error={Boolean(\n                        touched.confirmAccountNumber &&\n                          errors.confirmAccountNumber\n                      )}\n                      helperText={\n                        touched.confirmAccountNumber &&\n                        errors.confirmAccountNumber\n                      }\n                    />\n                    <CustomInputTextField\n                      attribute=\"Confirm Routing Number\"\n                      is_required={false}\n                      margin=\"normal\"\n                      name=\"confirmRoutingNumber\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      fullWidth\n                      value={values.confirmRoutingNumber}\n                      variant=\"outlined\"\n                      disabled={values.bankingType === \"PAPER CHECK\"}\n                      error={Boolean(\n                        touched.confirmRoutingNumber &&\n                          errors.confirmRoutingNumber\n                      )}\n                      helperText={\n                        touched.confirmRoutingNumber &&\n                        errors.confirmRoutingNumber\n                      }\n                    />\n                    <CustomInputTextField\n                      attribute=\"Confirm Account Type\"\n                      is_required={false}\n                      margin=\"normal\"\n                      name=\"confirmAccountType\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      select\n                      fullWidth\n                      value={values.confirmAccountType}\n                      variant=\"outlined\"\n                      disabled={values.bankingType === \"PAPER CHECK\"}\n                      error={Boolean(\n                        touched.confirmAccountType && errors.confirmAccountType\n                      )}\n                      helperText={\n                        touched.confirmAccountType && errors.confirmAccountType\n                      }\n                    >\n                      <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                      <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                    </CustomInputTextField>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    margin: { xs: \"8px 0\", sm: \"16px 0\" },\n                  }}\n                >\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    SAVE\n                  </Button>\n                </Box>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </Box>\n  );\n};\n\nexport default BankDetails;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Box,\n  Link,\n  Avatar,\n  Typography,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  FormControl,\n  CircularProgress,\n} from \"@mui/material\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { GetApp, CloudUpload, FilterAltOffSharp } from \"@mui/icons-material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport Api from \"../../../components/Api\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport CustomAlert from \"../../../components/CustomAlert\";\nimport { StyledTableCell } from \"..\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewStyledTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewStyledTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n}));\n\nconst TaxReturns = ({ open }) => {\n  const customStyles = customTextStyles();\n  const params = useParams();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n  const role = useSelector((state) => state.app.role);\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, setState] = useState({\n    isImport: false,\n    isImpoFormSubmitting: false,\n    selectedFile: {},\n    remarks: \"\",\n    isMyTaxDocsLoading: false,\n    myTaxDocs: [],\n  });\n\n  const handleDownloadFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: params.id,\n      type: \"returns\",\n    };\n\n    privateApiPOST(Api.downloadTaxDocsFile, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setIsLoading(false);\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n          setIsLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n        setIsLoading(false);\n      });\n  };\n\n  const handleDeleteFile = (id, file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_id: id,\n      file_name: file,\n      id: params.id,\n      type: \"returns\",\n    };\n\n    privateApiPOST(Api.deleteTaxDocsFile, payload)\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setIsLoading(false);\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDeleteFile--->\", err);\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n        setIsLoading(false);\n      });\n  };\n\n  //CLICK - Upload input file\n  const handleUploadClick = (e) => {\n    let file = e.target.files[0];\n    if (file) {\n      setState((prev) => ({\n        ...prev,\n        selectedFile: file,\n      }));\n    }\n  };\n\n  //SUBMIT - Import form\n  const handleUploadTaxDocs = () => {\n    if (!state.selectedFile.name) {\n      setShowAlert({\n        isAlert: true,\n        severity: \"warning\",\n        alertText: \"Please choose file to import\",\n      });\n      return;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      isImpoFormSubmitting: true,\n    }));\n\n    const formData = new FormData();\n    formData.append(\"upload\", state.selectedFile);\n    formData.append(\"id\", params.id);\n    formData.append(\"type\", \"returns\");\n    formData.append(\"remarks\", state.remarks);\n\n    const token = sessionStorage.getItem(\"token\");\n    axios\n      .post(Api.uploadTaxDocs, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setState((prev) => ({\n            ...prev,\n            selectedFile: {},\n            isImpoFormSubmitting: false,\n            isImport: false,\n            remarks: \"\",\n          }));\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((error) => {\n        console.log(\"handleUploadTaxDocs--->\", error);\n        const { data } = error.response;\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n\n        setState((prev) => ({\n          ...prev,\n          selectedFile: {},\n          isImpoFormSubmitting: false,\n          isImport: false,\n          remarks: \"\",\n        }));\n      });\n  };\n\n  const handleFetchMyTaxDocs = () => {\n    setState((prev) => ({ ...prev, isMyTaxDocsLoading: true }));\n    let payload = { id: params.id, type: \"returns\" };\n    privateApiPOST(Api.uploadTaxDocs, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setState((prev) => ({\n            ...prev,\n            isMyTaxDocsLoading: false,\n            myTaxDocs: data?.data,\n          }));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setState((prev) => ({ ...prev, isMyTaxDocsLoading: false }));\n      });\n  };\n\n  useEffect(() => {\n    if (open) {\n      handleFetchMyTaxDocs();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 30px 5px\",\n        border: { xs: \"none\", sm: \"none\" },\n        minHeight: { xs: \"auto\", sm: \"400px\" },\n      }}\n    >\n      {showAlert.isAlert && (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      )}\n      {role === \"ADMIN\" ? (\n        <Box>\n          <Typography\n            sx={{\n              color: \"rgba(71,71,71,1)\",\n              fontSize: \"21px\",\n              fontWeight: 500,\n              lineHeight: \"33px\",\n              textAlign: \"left\",\n              marginBottom: \"32px\",\n            }}\n          >\n            Attach Client Tax Returns\n          </Typography>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              margin: \"20px 0\",\n            }}\n          >\n            <Typography sx={{ marginRight: \"24px\" }}>Upload File</Typography>\n            <Box sx={{ marginRight: \"20px\" }}>\n              <input\n                required\n                id=\"import-file-button\"\n                type=\"file\"\n                onChange={handleUploadClick}\n                accept=\".xlsx\"\n                style={{ opacity: 0, visibility: \"hidden\", width: \"1px\" }}\n              />\n              <label htmlFor=\"import-file-button\">\n                <Button\n                  startIcon={<CloudUploadIcon />}\n                  component=\"span\"\n                  variant=\"contained\"\n                >\n                  Choose File\n                </Button>\n              </label>\n              <Typography sx={{ marginTop: \"8px\", fontStyle: \"italic\" }}>\n                {state.selectedFile.name}\n              </Typography>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              margin: \"20px 0\",\n            }}\n          >\n            <Typography sx={{ marginRight: \"24px\" }}>Remarks</Typography>\n            <TextField\n              size=\"large\"\n              name=\"remarks\"\n              value={state.remarks}\n              onChange={(e) =>\n                setState((prev) => ({ ...prev, remarks: e.target.value }))\n              }\n            />\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              margin: \"20px 0\",\n            }}\n          >\n            <Button onClick={handleUploadTaxDocs} sx={{ marginBottom: \"10px\" }}>\n              Upload Tax Returns\n            </Button>\n          </Box>\n        </Box>\n      ) : null}\n      <Box\n        sx={{\n          minHeight: { xs: \"auto\", sm: role === \"ADMIN\" ? \"400px\" : \"800px\" },\n        }}\n      >\n        <TableContainer sx={{ marginTop: \"32px\" }}>\n          <Typography\n            sx={{\n              color: \"rgba(71,71,71,1)\",\n              fontSize: \"21px\",\n              fontWeight: 500,\n              lineHeight: \"33px\",\n              textAlign: \"left\",\n              marginBottom: \"32px\",\n            }}\n          >\n            Tax Return Document List\n          </Typography>\n          <Table\n            sx={{\n              borderCollapse: \"collapse\",\n              marginTop: \"30px\",\n            }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  ID\n                </StyledTableCell>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  Document Name\n                </StyledTableCell>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  uploaded on\n                </StyledTableCell>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  Remarks\n                </StyledTableCell>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  Actions\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {state.myTaxDocs.length > 0 &&\n                state.myTaxDocs.map((row, index) => (\n                  <TableRow key={index}>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {row.id}\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {row.upload_time}\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {row.remarks}\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.buttons}>\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexWrap: \"wrap\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <Button\n                          disabled={isLoading}\n                          startIcon={<GetApp />}\n                          size=\"small\"\n                          variant=\"outlined\"\n                          onClick={() => {\n                            handleDownloadFile(row.file_name);\n                          }}\n                        >\n                          Download{\" \"}\n                        </Button>\n                        <Button\n                          disabled={isLoading}\n                          startIcon={<DeleteIcon />}\n                          size=\"small\"\n                          onClick={() => {\n                            handleDeleteFile(row.id, row.file_name);\n                          }}\n                          sx={{\n                            display: role === \"ADMIN\" ? \"flex\" : \"none\",\n                          }}\n                        >\n                          Delete{\" \"}\n                        </Button>\n                      </Box>\n                    </StyledTableCell>\n\n                    <StyledTableCell className={customStyles.mobileView}>\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          marginTop: \"16px\",\n                        }}\n                      >\n                        <Box sx={{ marginTop: \"3px\" }}>\n                          <Typography\n                            className={\n                              customStyles.mobileViewStyledTableCellHeader\n                            }\n                          >\n                            File Name\n                          </Typography>\n\n                          <Typography\n                            className={\n                              customStyles.mobileViewStyledTableCellValue\n                            }\n                          >\n                            {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                          </Typography>\n                        </Box>\n                        <Box sx={{ marginTop: \"3px\" }}>\n                          <Typography\n                            className={\n                              customStyles.mobileViewStyledTableCellHeader\n                            }\n                          >\n                            Upload Time\n                          </Typography>\n\n                          <Typography\n                            className={\n                              customStyles.mobileViewStyledTableCellValue\n                            }\n                          >\n                            {row.upload_time}\n                          </Typography>\n                        </Box>\n\n                        <Box sx={{ marginTop: \"3px\" }}>\n                          <Typography\n                            className={\n                              customStyles.mobileViewStyledTableCellHeader\n                            }\n                          >\n                            Remarks\n                          </Typography>\n\n                          <Typography\n                            className={\n                              customStyles.mobileViewStyledTableCellValue\n                            }\n                          >\n                            {row.remarks}\n                          </Typography>\n                        </Box>\n\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                            marginTop: \"16px\",\n                          }}\n                        >\n                          <Button\n                            disabled={isLoading}\n                            startIcon={<GetApp />}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleDownloadFile(row.file_name);\n                            }}\n                          >\n                            Download{\" \"}\n                            {isLoading && (\n                              <CircularProgress sx={{ ml: 1 }} size={14} />\n                            )}\n                          </Button>\n                          <Button\n                            disabled={isLoading}\n                            startIcon={<DeleteIcon />}\n                            size=\"small\"\n                            onClick={() => {\n                              handleDeleteFile(row.file_name);\n                            }}\n                            sx={{\n                              display: role === \"ADMIN\" ? \"flex\" : \"none\",\n                            }}\n                          >\n                            Delete{\" \"}\n                            {isLoading && (\n                              <CircularProgress sx={{ ml: 1 }} size={14} />\n                            )}\n                          </Button>\n                        </Box>\n                      </Box>\n                    </StyledTableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n          {state.myTaxDocs.length === 0 && (\n            <Typography\n              variant=\"h5\"\n              sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n            >\n              No TaxReturns Found\n            </Typography>\n          )}\n        </TableContainer>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TaxReturns;\n","import React, { useState, useEffect } from \"react\";\n\nimport {\n  Box,\n  Button,\n  TextField,\n  Grid,\n  Typography,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n  CircularProgress,\n  Container,\n  Paper,\n} from \"@mui/material\";\nimport { Card, CardContent, Link } from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport { GetApp, CloudUpload, FilterAltOffSharp } from \"@mui/icons-material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport Api from \"../../../components/Api\";\nimport CustomAlert from \"../../../components/CustomAlert\";\nimport axios from \"axios\";\nimport { StyledTableCell } from \"..\";\nexport const customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  headerText: {\n    fontSize: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"32px\",\n    marginBottom: \"16px\",\n    color: \"#2069DB\",\n  },\n  confirmButton: {\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    lineHeight: \"19px\",\n    color: \"#FFFFFF\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n  },\n  mobileViewStyledTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewStyledTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  alertCard: {\n    border: \"1px solid #000000\",\n    marginBottom: theme.spacing(2),\n  },\n  alertIcon: {\n    color: \"#EB3414\",\n    marginRight: theme.spacing(1),\n  },\n  root: {\n    color: \"red\",\n    fontSize: \"1.0rem\",\n    marginLeft: \"10px\",\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    color: \"primary\",\n  },\n  info: {\n    color: \"green\",\n    fontSize: \"1.5rem\",\n    border: \"1px solid #000000\",\n    marginTop: \"10px\",\n  },\n}));\n\nconst UploadTaxDocs = ({ open, id }) => {\n  const customStyles = customTextStyles();\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [state, setState] = useState({\n    isImport: false,\n    isImpoFormSubmitting: false,\n    selectedFile: {},\n    isMyTaxDocsLoading: false,\n    myTaxDocs: [],\n  });\n\n  const handleDownloadFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: id,\n      type: \"docs\",\n    };\n\n    privateApiPOST(Api.downloadTaxDocsFile, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setIsLoading(false);\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n          setIsLoading(false);\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n        setIsLoading(false);\n      });\n  };\n\n  const handleDeleteFile = (file) => {\n    setIsLoading(true);\n\n    let payload = {\n      file_name: file,\n      id: id,\n      type: \"docs\",\n    };\n\n    privateApiPOST(Api.deleteTaxDocsFile, payload)\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setIsLoading(false);\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDeleteFile--->\", err);\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n        setIsLoading(false);\n      });\n  };\n\n  //CLICK - Upload input file\n  const handleUploadClick = (e) => {\n    let file = e.target.files[0];\n    if (file) {\n      setState((prev) => ({\n        ...prev,\n        selectedFile: file,\n      }));\n    }\n  };\n\n  //SUBMIT - Import form\n  const handleUploadTaxDocs = () => {\n    if (!state.selectedFile.name) {\n      setShowAlert({\n        isAlert: true,\n        severity: \"warning\",\n        alertText: \"Please choose file to import\",\n      });\n      return;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      isImpoFormSubmitting: true,\n    }));\n\n    const formData = new FormData();\n    formData.append(\"upload\", state.selectedFile);\n    formData.append(\"id\", id);\n    formData.append(\"type\", \"docs\");\n\n    const token = sessionStorage.getItem(\"token\");\n    axios\n      .post(Api.uploadTaxDocs, formData, {\n        headers: {\n          \"content-type\": \"multipart/form-data\",\n          Authorization: `Token ${token}`,\n        },\n      })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          setShowAlert({\n            isAlert: true,\n            severity: \"success\",\n            alertText: data?.[\"message\"],\n          });\n          setState((prev) => ({\n            ...prev,\n            selectedFile: {},\n            isImpoFormSubmitting: false,\n            isImport: false,\n          }));\n          handleFetchMyTaxDocs();\n        }\n      })\n      .catch((error) => {\n        console.log(\"handleUploadTaxDocs--->\", error);\n        const { data } = error.response;\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n\n        setState((prev) => ({\n          ...prev,\n          selectedFile: {},\n          isImpoFormSubmitting: false,\n          isImport: false,\n        }));\n      });\n  };\n\n  const handleFetchMyTaxDocs = () => {\n    setState((prev) => ({ ...prev, isMyTaxDocsLoading: true }));\n    let payload = { id: id, type: \"docs\" };\n    privateApiPOST(Api.uploadTaxDocs, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setState((prev) => ({\n            ...prev,\n            isMyTaxDocsLoading: false,\n            myTaxDocs: data?.data,\n          }));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setState((prev) => ({ ...prev, isMyTaxDocsLoading: false }));\n      });\n  };\n\n  useEffect(() => {\n    if (open) {\n      handleFetchMyTaxDocs();\n    }\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 30px 5px\",\n        border: { xs: \"none\", sm: \"none\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      {showAlert.isAlert && (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      )}\n      <Card className={customStyles.alertCard}>\n        <CardContent>\n          <Typography sx={{ marginBottom: \"10px\", color: \"red\" }}>\n            Alerts\n          </Typography>\n          <Typography variant=\"body2\">\n            <span className={customStyles.alertIcon}>!&nbsp;</span>\n            Information / Documents submitted here will be secured.\n          </Typography>\n          <br />\n          <Typography variant=\"body2\">\n            <span className={customStyles.alertIcon}>!&nbsp;</span>\n            Please contact our Team if any issues in uploading documents\n          </Typography>\n        </CardContent>\n      </Card>\n      <Typography className={customStyles.root}>\n        If needed, use the following links to download the required documents:\n        <br />\n        <Link\n          href=\"/static/img/1099_NEC_Expenses_Tax_Information.xlsx\"\n          className={customStyles.link}\n        >\n          1099 NEC Expenses Tax Information\n        </Link>\n        <br />\n        <Link\n          href=\"/static/img/City_Tax_Return_Information.xlsx\"\n          className={customStyles.link}\n        >\n          City Tax Return Information\n        </Link>\n        <br />\n        <Link\n          href=\"/static/img/Crypto_Information.xls\"\n          className={customStyles.link}\n        >\n          Crypto Information\n        </Link>\n        <br />\n        <Link\n          href=\"/static/img/FBAR_Information_2022.xls\"\n          className={customStyles.link}\n        >\n          FBAR Information\n        </Link>\n        <br />\n        <Link\n          href=\"/static/img/ITIN_Information.xls\"\n          className={customStyles.link}\n        >\n          ITN Information\n        </Link>\n        <br />\n        <Link\n          href=\"/static/img/Rental_Property_Details.xls\"\n          className={customStyles.link}\n        >\n          Rental Property Details\n        </Link>\n        <br />\n        After downloading, please fill/complete these documents and upload them\n        in the attachment section.\n      </Typography>\n      <Paper elevation={3} className={customStyles.info}>\n        <Table width=\"100%\">\n          <TableBody>\n            <TableRow valign=\"top\">\n              <StyledTableCell align=\"left\" width=\"20%\">\n                Addition Information\n              </StyledTableCell>\n              <StyledTableCell width=\"5%\"> - </StyledTableCell>\n              <StyledTableCell align=\"left\" width=\"75%\">\n                If you want to provide any additional information to your Tax\n                Consultant, please discuss during the Tax Interview.\n              </StyledTableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Paper>\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        sx={{ marginTop: { xs: \"20px\" } }}\n      >\n        <Box sx={{ marginRight: \"20px\" }}>\n          <input\n            required\n            id=\"import-file-button\"\n            type=\"file\"\n            onChange={handleUploadClick}\n            accept=\".xlsx\"\n            style={{ opacity: 0, visibility: \"hidden\", width: \"1px\" }}\n          />\n          <label htmlFor=\"import-file-button\">\n            <Button\n              startIcon={<CloudUploadIcon />}\n              component=\"span\"\n              variant=\"contained\"\n            >\n              Choose File\n            </Button>\n          </label>\n          <Typography sx={{ marginTop: \"8px\", fontStyle: \"italic\" }}>\n            {state.selectedFile.name}\n          </Typography>\n        </Box>\n        <Button onClick={handleUploadTaxDocs} sx={{ marginBottom: \"10px\" }}>\n          Upload\n        </Button>\n      </Box>\n      <Box>\n        {state.isMyTaxDocsLoading ? (\n          <CircularProgress />\n        ) : (\n          <TableContainer sx={{ marginTop: \"32px\" }}>\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n            >\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    File Name\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Upload Time\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    File Size\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Actions\n                  </StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {state.myTaxDocs.length > 0 &&\n                  state.myTaxDocs.map((row, index) => (\n                    <TableRow key={index}>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.upload_time}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.file_size}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.buttons}>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"nowrap\",\n                            justifyContent: \"space-between\",\n                          }}\n                        >\n                          <Button\n                            disabled={isLoading}\n                            startIcon={<GetApp />}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            onClick={() => {\n                              handleDownloadFile(row.file_name);\n                            }}\n                          >\n                            Download{\" \"}\n                            {isLoading && (\n                              <CircularProgress sx={{ ml: 1 }} size={14} />\n                            )}\n                          </Button>\n                          <Button\n                            disabled={isLoading}\n                            startIcon={<DeleteIcon />}\n                            size=\"small\"\n                            onClick={() => {\n                              handleDeleteFile(row.file_name);\n                            }}\n                          >\n                            Delete{\" \"}\n                            {isLoading && (\n                              <CircularProgress sx={{ ml: 1 }} size={14} />\n                            )}\n                          </Button>\n                        </Box>\n                      </StyledTableCell>\n\n                      <StyledTableCell className={customStyles.mobileView}>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            marginTop: \"16px\",\n                          }}\n                        >\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellHeader\n                              }\n                            >\n                              File Name\n                            </Typography>\n\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellValue\n                              }\n                            >\n                              {row.file_name.replace(/^[^_]*_([^_]*_)/, \"\")}\n                            </Typography>\n                          </Box>\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellHeader\n                              }\n                            >\n                              Upload Time\n                            </Typography>\n\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellValue\n                              }\n                            >\n                              {row.upload_time}\n                            </Typography>\n                          </Box>\n\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellHeader\n                              }\n                            >\n                              File Size\n                            </Typography>\n\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellValue\n                              }\n                            >\n                              {row.file_size}\n                            </Typography>\n                          </Box>\n\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Button\n                              disabled={isLoading}\n                              startIcon={<GetApp />}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              onClick={() => {\n                                handleDownloadFile(row.file_name);\n                              }}\n                            >\n                              Download{\" \"}\n                              {isLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                            <Button\n                              disabled={isLoading}\n                              startIcon={<DeleteIcon />}\n                              size=\"small\"\n                              onClick={() => {\n                                handleDeleteFile(row.file_name);\n                              }}\n                            >\n                              Delete{\" \"}\n                              {isLoading && (\n                                <CircularProgress sx={{ ml: 1 }} size={14} />\n                              )}\n                            </Button>\n                          </Box>\n                        </Box>\n                      </StyledTableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n            {state.myTaxDocs.length === 0 && (\n              <Typography\n                variant=\"h5\"\n                sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n              >\n                No TaxDocs Found\n              </Typography>\n            )}\n          </TableContainer>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default UploadTaxDocs;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport config from \"../../config\";\n// Material UI\nimport { Grid, Box, Avatar, Typography, Tabs, Tab } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport FilerDeatils from \"./Forms/filerDeatils\";\nimport IncomeDetails from \"./Forms/incomeDetails\";\nimport BankDetails from \"./Forms/bankDetails\";\nimport TaxReturns from \"./Forms/taxReturns\";\nimport UploadTaxDocs from \"./Forms/TaxDocs\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst TabsDesktop = ({ data, handleFetchData, handleDownloadTemplate }) => {\n  const params = useParams();\n  const customTextClasses = customTextStyles();\n  const [value, setValue] = useState(parseInt(params.action));\n\n  console.log(params.action);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box>{children}</Box>}\n      </div>\n    );\n  }\n\n  CustomTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        marginBottom: \"64px\",\n      }}\n    >\n      <Box\n        sx={{\n          borderBottom: 1,\n          borderColor: \"divider\",\n          margin: \"8px\",\n        }}\n      >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"basic tabs example\"\n        >\n          <Tab\n            label=\"Filer Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(0)}\n          />\n          <Tab\n            label=\"Income Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(1)}\n          />\n          <Tab\n            label=\"Bank Details\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(2)}\n          />\n          <Tab\n            label=\"Upload Tax Docs\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(3)}\n          />\n          <Tab\n            label=\"Tax Returns\"\n            className={customTextClasses.tabHeaderText}\n            {...a11yProps(3)}\n          />\n        </Tabs>\n      </Box>\n\n      <CustomTabPanel value={value} index={0}>\n        <FilerDeatils\n          open={value === 0}\n          id={data[\"id\"]}\n          personalDetails={data[\"personalDetails\"]}\n          contactDetails={data[\"contactDetails\"]}\n          spouseDetails={data[\"spouseDetails\"]}\n          incomeDetails={data[\"incomeDetails\"]}\n          providedLivingSupport={data[\"providedLivingSupport\"]}\n          handleFetchData={handleFetchData}\n          handleDownloadTemplate={handleDownloadTemplate}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={1}>\n        <IncomeDetails\n          open={value === 1}\n          id={data[\"id\"]}\n          data={data[\"incomeDetails\"]}\n          handleFetchData={handleFetchData}\n          handleDownloadTemplate={handleDownloadTemplate}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={2}>\n        <BankDetails\n          open={value === 2}\n          id={data[\"id\"]}\n          data={data[\"bankDetails\"]}\n          handleFetchData={handleFetchData}\n        />\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={3}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box>\n              <UploadTaxDocs open={value === 3} id={data[\"id\"]} />\n            </Box>\n          </Grid>\n        </Grid>\n      </CustomTabPanel>\n      <CustomTabPanel value={value} index={4}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box>\n              <TaxReturns open={value === 4} id={data[\"id\"]} />\n            </Box>\n          </Grid>\n        </Grid>\n      </CustomTabPanel>\n    </Box>\n  );\n};\nexport default TabsDesktop;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../../components/Page\";\nimport {\n  Grid,\n  Container,\n  Box,\n  CircularProgress,\n  Typography,\n} from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport TabsDesktop from \"../TabsDesktop\";\nimport { makeStyles } from \"@mui/styles\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tabButton: {\n    display: \"block\",\n    width: \"100%\",\n    paddingLeft: \"15px\",\n    textAlign: \"left\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n  },\n}));\n\nconst AdminTaxFillingPage = () => {\n  const params = useParams();\n  const customStyles = customTextStyles();\n  const [data, setData] = useState({});\n  const [isLoadingSpin, setIsLoadingSpin] = useState(true);\n\n  const handleFetchTaxFilingDetails = () => {\n    setIsLoadingSpin(true);\n    let payload = { id: params.id };\n    privateApiPOST(Api.taxFiling, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setData(data?.data);\n          setIsLoadingSpin(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsLoadingSpin(false);\n      });\n  };\n\n  const handleDownloadTemplate = (file) => {\n    let payload = {\n      file_name: file,\n    };\n\n    privateApiPOST(Api.templateDownload, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n      });\n  };\n\n  useEffect(() => {\n    handleFetchTaxFilingDetails();\n  }, []);\n\n  return (\n    <Page title={\"Tax Filing\"}>\n      <Box>\n        <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n          {isLoadingSpin ? (\n            <Box\n              display=\"flex\"\n              height=\"100%\"\n              width=\"100%\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              sx={{\n                position: \"absolute\",\n                zIndex: \"10\",\n                left: 0,\n                top: \"10%\",\n              }}\n            >\n              <CircularProgress size={30} />\n            </Box>\n          ) : data ? (\n            <Box\n              sx={{\n                backgroundColor: \"rgba(255,255,255,1)\",\n                boxShadow:\n                  \"rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px\",\n                borderRadius: \"4px\",\n                padding: \"20px 10px\",\n                height: \"800px\", // Adjust the height as needed\n                overflow: \"auto\", // Add overflow to enable scrolling\n                maxHeight: \"800px\", // Add a maximum height to prevent content from overflowing\n              }}\n            >\n              <PerfectScrollbar>\n                <Typography\n                  variant=\"h3\"\n                  sx={{\n                    marginLeft: \"20px\",\n                  }}\n                >\n                  Tax-Filing For Year - {params.year}\n                </Typography>\n\n                <TabsDesktop\n                  data={data}\n                  handleFetchData={handleFetchTaxFilingDetails}\n                  handleDownloadTemplate={handleDownloadTemplate}\n                />\n              </PerfectScrollbar>\n            </Box>\n          ) : null}\n        </Box>\n      </Box>\n    </Page>\n  );\n};\n\nexport default AdminTaxFillingPage;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Grid,\n  TextField,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  MenuItem,\n  CircularProgress,\n  Chip,\n  IconButton,\n  Avatar,\n} from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport CustomAlert from \"../../../components/CustomAlert\";\n\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport { makeStyles } from \"@mui/styles\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\nimport { thousands_separators } from \"../../../utils/index\";\nimport { StyledTableCell } from \"..\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewStyledTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewStyledTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst PickAppointment = ({ open, id }) => {\n  const customStyles = customTextStyles();\n  const [isPickAppointmentDetailsLoading, setIsPickAppointmentDetailsLoading] =\n    useState(false);\n  const state = useSelector((state) => state.app);\n\n  const [appointmentData, setAppointmentData] = useState({\n    date: \"\",\n    time: \"23:00\",\n    timezone: \"America/Chicago\",\n  });\n  const [appointmentDetails, setAppointmentDetails] = useState([]);\n\n  const [showAlert, setShowAlert] = useState({\n    isAlert: false,\n    alertTitle: \"\",\n    alertText: \"\",\n    severity: \"\",\n  });\n\n  const handleDateChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      date: event.target.value,\n    });\n  };\n\n  const handleTimeChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      time: event.target.value,\n    });\n  };\n\n  const handleTimezoneChange = (event) => {\n    setAppointmentData({\n      ...appointmentData,\n      timezone: event.target.value,\n    });\n  };\n\n  const handleCancelAppointment = (appointmentId) => {\n    setIsPickAppointmentDetailsLoading(true);\n    let payload = { id: id, appointmentId: appointmentId };\n    privateApiPOST(Api.deleteAppointment, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setShowAlert({\n            isAlert: true,\n            alertText: \"Appointment Cancelled Successfully\",\n            severity: \"success\",\n          });\n        }\n        setIsPickAppointmentDetailsLoading(false);\n        handleFetchAppointmentDetails();\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setShowAlert({\n          isAlert: true,\n          severity: \"error\",\n          alertText: data?.[\"message\"],\n        });\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n\n  const handleFetchAppointmentDetails = () => {\n    setIsPickAppointmentDetailsLoading(true);\n    let payload = { id: id };\n    privateApiPOST(Api.appointmentDetails, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setIsPickAppointmentDetailsLoading(false);\n          setAppointmentDetails(data?.data);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        if (error.response.status === 400 || error.response.status === 401) {\n          setShowAlert({\n            isAlert: true,\n            alertText: error.response.data?.message,\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        } else {\n          setShowAlert({\n            isAlert: true,\n            alertText: \"Something went wrong\",\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        }\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n  const handleFetchAppointmentChange = (payload) => {\n    setIsPickAppointmentDetailsLoading(true);\n\n    privateApiPOST(Api.bookAppointment, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          if (status === 200) {\n            console.log(\"data\", data?.data);\n            setShowAlert({\n              isAlert: true,\n              alertText: data?.message,\n              severity: \"success\",\n            });\n          }\n          setAppointmentData({\n            date: \"\",\n            time: \"23:00\",\n            timezone: \"America/Chicago\",\n          });\n          handleFetchAppointmentDetails();\n        }\n        setIsPickAppointmentDetailsLoading(false);\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        if (error.response.status === 400 || error.response.status === 401) {\n          setShowAlert({\n            isAlert: true,\n            alertText: error.response.data?.message,\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        } else {\n          setShowAlert({\n            isAlert: true,\n            alertText: \"Something went wrong\",\n            severity: \"error\",\n            alertTitle: \"Error\",\n          });\n        }\n        setIsPickAppointmentDetailsLoading(false);\n      });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let payload = { ...appointmentData, id: id };\n    handleFetchAppointmentChange(payload);\n  };\n\n  const showMsg = () => {\n    // Add your showMsg function logic here\n  };\n\n  useEffect(() => {\n    if (sessionStorage.getItem(\"token\") && open) {\n      handleFetchAppointmentDetails();\n    }\n  }, []);\n\n  const generateTimeOptions = () => {\n    const timeOptions = [];\n    for (let hours = 11; hours <= 23; hours++) {\n      for (let minutes = 0; minutes < 60; minutes += 30) {\n        const hourStr = String(hours).padStart(2, \"0\");\n        const minuteStr = String(minutes).padStart(2, \"0\");\n        const timeOption = `${hourStr}:${minuteStr}`;\n        timeOptions.push(timeOption);\n      }\n    }\n    return timeOptions;\n  };\n\n  const timeOptions = generateTimeOptions();\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 30px 5px\",\n        border: { xs: \"none\", sm: \"none\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {showAlert.isAlert ? (\n        <CustomAlert\n          open={showAlert.isAlert}\n          severity={showAlert.severity}\n          alertTitle={showAlert.alertTitle}\n          alertText={showAlert.alertText}\n          onClose={() =>\n            setShowAlert({\n              isAlert: false,\n              alertTitle: \"\",\n              alertText: \"\",\n              severity: \"\",\n            })\n          }\n        />\n      ) : null}\n\n      <Typography variant=\"h5\">\n        Tax Notes Interview - Schedule your date:\n      </Typography>\n      <Box\n        sx={{\n          display: { xs: \"block\", sm: \"flex\" },\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n          marginTop: \"30px\",\n        }}\n      >\n        <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\n          <CustomInputTextField\n            attributeMarginTop=\"12px\"\n            attribute=\"Client Name\"\n            is_required={false}\n            fullWidth\n            // label=\"Name\"\n            name=\"name\"\n            value={`${state.first_name} ${state.last_name}`}\n            variant=\"outlined\"\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n        </Box>\n\n        <Box sx={{ width: { xs: \"100%\", sm: \"35%\" } }}>\n          <CustomInputTextField\n            attributeMarginTop=\"12px\"\n            attribute={\"Phone Number\"}\n            is_required={false}\n            fullWidth\n            // label=\"Phone Number\"\n            name=\"phone_no\"\n            value={state ? state.phone_no : \"\"}\n            variant=\"outlined\"\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n        </Box>\n      </Box>\n      <Typography variant=\"body1\" color=\"red\" sx={{ marginTop: \"30px\" }}>\n        Become a confirmed client by making an advance fee payment. Same day tax\n        filing available for Confirmed Clients.\n      </Typography>\n      <br />\n      <Typography variant=\"body1\" color=\"green\" sx={{ marginTop: \"10px\" }}>\n        How to become a Confirmed Client?&nbsp;&nbsp;&nbsp;\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={showMsg}\n          sx={{ marginTop: { xs: \"10px\" } }}\n        >\n          CLICK HERE\n        </Button>\n      </Typography>\n\n      <Typography variant=\"body1\" color=\"red\" sx={{ marginTop: \"30px\" }}>\n        {`We will call you anytime between 11.00 AM CST to 11.30 PM CST on your appointment date.`}\n      </Typography>\n      <Typography variant=\"body1\" color=\"red\" sx={{ marginLeft: \"10px\" }}>\n        {`- We try to match your preferred time. Unfortunately, it is not a guaranteed time.`}\n      </Typography>\n      <Typography variant=\"body1\" color=\"red\" sx={{ marginLeft: \"10px\" }}>\n        {`- We try to match your preferred time. Unfortunately, it is not a guaranteed time.`}\n      </Typography>\n      <Typography variant=\"body1\" color=\"red\" sx={{ marginTop: \"30px\" }}>\n        Please pick your availability between{\" \"}\n        <Typography variant=\"body1\" color=\"primary\" component=\"span\">\n          01/11/2023 to 04/18/2023\n        </Typography>\n      </Typography>\n      <form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            display: { xs: \"block\", sm: \"flex\" },\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n            marginTop: \"30px\",\n          }}\n        >\n          <Box sx={{ width: { xs: \"100%\", sm: \"30%\" } }}>\n            <CustomInputTextField\n              attributeMarginTop=\"12px\"\n              attribute=\"Date\"\n              is_required={false}\n              type=\"date\"\n              value={appointmentData.date}\n              onChange={handleDateChange}\n              fullWidth\n              required\n            />\n          </Box>\n          <Box sx={{ width: { xs: \"100%\", sm: \"40%\" } }}>\n            <CustomInputTextField\n              attributeMarginTop=\"12px\"\n              attribute=\"Preferrable Time\"\n              is_required={false}\n              select\n              // label=\"Time\"\n              value={appointmentData.time}\n              onChange={handleTimeChange}\n              variant=\"outlined\"\n              fullWidth\n              required\n            >\n              {timeOptions.map((option) => (\n                <MenuItem key={option} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n            </CustomInputTextField>\n          </Box>\n          <Box sx={{ width: { xs: \"100%\", sm: \"30%\" } }}>\n            <CustomInputTextField\n              attributeMarginTop=\"12px\"\n              attribute=\"Time Zone\"\n              is_required={false}\n              select\n              value={appointmentData.timezone}\n              onChange={handleTimezoneChange}\n              fullWidth\n              required\n            >\n              <MenuItem value=\"America/Chicago\">CST</MenuItem>\n              <MenuItem value=\"EST\">EST</MenuItem>\n              {/* Add more time zones as needed */}\n            </CustomInputTextField>\n          </Box>\n        </Box>\n        <Typography variant=\"body1\" color=\"red\" sx={{ marginTop: \"30px\" }}>\n          Maximum number of appointments you can have is \"ONE\". If you already\n          have an appointment delete it before scheduling new appointment\n        </Typography>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={showMsg}\n          sx={{ display: \"block\", margin: \"0 auto\", marginTop: \"20px\" }}\n        >\n          SUBMIT\n        </Button>\n      </form>\n      <Box>\n        {isPickAppointmentDetailsLoading ? (\n          <CircularProgress />\n        ) : (\n          <TableContainer\n            sx={{\n              marginTop: \"32px\",\n              paddingBottom: { xs: \"10px\", sm: \"0px\" },\n            }}\n          >\n            <Table\n              sx={{\n                borderCollapse: \"collapse\",\n              }}\n            >\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Date\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Start Time\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    End Time\n                  </StyledTableCell>\n                  <StyledTableCell className={customStyles.tableHeader}>\n                    Status\n                  </StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {appointmentDetails.length > 0 &&\n                  appointmentDetails.map((row, index) => (\n                    <TableRow key={index}>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.date}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.start_time}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        {row.end_time}\n                      </StyledTableCell>\n                      <StyledTableCell className={customStyles.tableData}>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            marginTop: \"8px\",\n                            alignItems: \"center\",\n                            marginBottom: {\n                              xs: row.status !== \"BOOKED\" ? \"14px\" : 0,\n                              sm: 0,\n                            },\n                          }}\n                        >\n                          <Chip\n                            label={row[\"status\"]}\n                            size=\"small\"\n                            color={\n                              row.status === \"BOOKED\"\n                                ? \"info\"\n                                : row.status === \"CANCELLED\"\n                                ? \"error\"\n                                : \"success\"\n                            }\n                          />\n\n                          <IconButton\n                            disabled={isPickAppointmentDetailsLoading}\n                            sx={{\n                              height: \"40px\",\n                              width: \"40px\",\n                              visibility:\n                                row.status === \"BOOKED\" ? \"visible\" : \"hidden\",\n                              onCursor: \"pointer\",\n                              display: { xs: \"none\", sm: \"flex\" },\n                            }}\n                            onClick={() => handleCancelAppointment(row.id)}\n                          >\n                            <Avatar\n                              alt=\"delete\"\n                              src=\"/static/img/deleteIcon.svg\"\n                              sx={{ height: \"24px\", width: \"24px\" }}\n                            />\n                          </IconButton>\n                        </Box>\n                      </StyledTableCell>\n\n                      <StyledTableCell className={customStyles.mobileView}>\n                        <Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                Date\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.date}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                Status\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.status}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                Start Time\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.start_time}\n                              </Typography>\n                            </Box>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              flexWrap: \"wrap\",\n                              justifyContent: \"space-between\",\n                              marginTop: \"16px\",\n                            }}\n                          >\n                            <Box sx={{ marginTop: \"3px\" }}>\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellHeader\n                                }\n                              >\n                                End Time\n                              </Typography>\n\n                              <Typography\n                                className={\n                                  customStyles.mobileViewStyledTableCellValue\n                                }\n                              >\n                                {row.end_time}\n                              </Typography>\n                            </Box>\n                            <Box\n                            // sx={{\n                            //   display: \"flex\",\n                            //   justifyContent: \"center\", // Center the button horizontally\n                            //   alignItems: \"center\",\n                            // }}\n                            >\n                              <Button\n                                disabled={isPickAppointmentDetailsLoading}\n                                startIcon={<DeleteIcon />}\n                                size=\"small\"\n                                onClick={() => {\n                                  handleCancelAppointment(row.id);\n                                }}\n                                sx={{\n                                  visibility:\n                                    row.status === \"BOOKED\"\n                                      ? \"visible\"\n                                      : \"hidden\",\n                                }}\n                              >\n                                Delete{\" \"}\n                                {isPickAppointmentDetailsLoading && (\n                                  <CircularProgress sx={{ ml: 1 }} size={14} />\n                                )}\n                              </Button>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </StyledTableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n            {appointmentDetails.length === 0 && (\n              <Typography\n                variant=\"h5\"\n                sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n              >\n                No Appointments Found\n              </Typography>\n            )}\n          </TableContainer>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default PickAppointment;\n","import React from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Container,\n} from \"@mui/material\";\n\nconst PayPalPayment = () => {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n  return (\n    <Container>\n      <Grid spacing={2} container justifyContent=\"center\" alignItems=\"center\">\n        <Grid item xs={12} sm={7}>\n          <Box\n            id=\"ppdiv\"\n            name=\"ppdiv\"\n            sx={{\n              fontSize: 12,\n              fontFamily: \"Verdana\",\n              display: \"block\",\n              p: \"20px\", // Padding\n              border: \"1px solid grey\", // Border style\n            }}\n          >\n            <Typography\n              variant=\"body1\"\n              color=\"red\"\n              sx={{ marginBottom: \"20px\" }}\n            >\n              P.S: If you choose this Payment option (PayPal), your tax filing\n              fee includes a 3% service charge.\n            </Typography>\n            <Typography variant=\"body1\" sx={{ marginBottom: \"20px\" }}>\n              <span id=\"scsppt\">\n                Your Service Fee amount (including 3% service charge)\n              </span>\n            </Typography>\n            <Typography variant=\"body1\" sx={{ marginBottom: \"20px\" }}>\n              If your payment is successful, you'll receive an automatic email\n              confirmation from \"PayPal.\"\n            </Typography>\n            <form\n              autoComplete=\"off\"\n              onSubmit={handleSubmit}\n              // action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\"\n            >\n              <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n              <input type=\"hidden\" name=\"business\" value=\"4KKFRTPBL3E8E\" />\n              <input type=\"hidden\" name=\"lc\" value=\"US\" />\n              <input\n                type=\"hidden\"\n                name=\"item_name\"\n                value=\"Tax Consultation Fee\"\n              />\n              <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n              <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n              <input type=\"hidden\" name=\"no_note\" value=\"0\" />\n              <input\n                type=\"hidden\"\n                name=\"cn\"\n                value=\"Add special instructions to the seller:\"\n              />\n              <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n              <input type=\"hidden\" name=\"rm\" value=\"1\" />\n              <input\n                type=\"hidden\"\n                name=\"return\"\n                value=\"https://www.taxcooler.com/payment_sucess\"\n              />\n              <input\n                type=\"hidden\"\n                name=\"bn\"\n                value=\"PP-BuyNowBF:btn_paynowCC_LG.gif:NonHosted\"\n              />\n              <TextField\n                label=\"Enter amount Here\"\n                type=\"text\"\n                id=\"pp_amount\"\n                name=\"amount\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{\n                  mt: \"20px\",\n                  width: \"50%\",\n                  display: \"block\",\n                  ml: { xs: \"20px\", sm: \"0px\" },\n                }} // Adjust the margin-top as needed\n              />\n              <Button type=\"submit\">\n                <img\n                  src=\"https://www.paypalobjects.com/en_US/i/btn/btn_paynowCC_LG.gif\"\n                  border=\"0\"\n                  name=\"submit\"\n                  alt=\"PayPal - The safer, easier way to pay online!\"\n                />\n              </Button>\n              <img\n                alt=\"\"\n                border=\"0\"\n                src=\"https://www.paypalobjects.com/en_US/i/scr/pixel.gif\"\n                width=\"1\"\n                height=\"1\"\n              />\n            </form>\n            <Typography color=\"red\">\n              We will send your tax filing copies with instructions with in 2\n              business days.\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default PayPalPayment;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  TextField,\n  MenuItem,\n  Button,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  CircularProgress,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { statesNames, countryCode } from \"../../../constants\";\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport CustomInputTextField from \"../../../components/CustomInputField\";\nimport { CustomLabel } from \"./filerDeatils\";\nimport { StyledTableCell } from \"..\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableHeader: {\n    fontSize: \"16px\",\n    fontWeight: 600,\n    lineHeight: \"22px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  tableData: {\n    fontSize: \"16px\",\n    fontWeight: 400,\n    lineHeight: \"23px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      // marginBottom: \"8px\",\n      display: \"none\",\n    },\n  },\n  mobileViewStyledTableCellValue: {\n    color: \"rgb(71, 71, 71)\",\n    fontSize: \"14px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  mobileView: {\n    borderRadius: \"4px\",\n    boxShadow: \"0px 0px 5px rgba(0,0,0, 0.1)\",\n    backgroundColor: \"rgba(255,255,255, 1) !important\",\n    cursor: \"pointer\",\n    border: \"none !important\",\n    marginBottom: \"20px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  mobileViewStyledTableCellHeader: {\n    color: \"rgb(245, 166, 35)\",\n    fontSize: \"10px\",\n    fontWeight: \"400\",\n    lineHeight: \"14px\",\n  },\n  buttons: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst ConfirmDetails = ({\n  open,\n  id,\n  personalDetails,\n  contactDetails,\n  spouseDetails,\n  incomeDetails,\n  providedLivingSupport,\n  bankDetails,\n  handlePickAppointment,\n  dependantDetails,\n}) => {\n  const customStyles = useStyles();\n  const stateOptions = statesNames;\n  const countryCodes = countryCode;\n\n  const transform = (input) => {\n    if (input === undefined || input === null) {\n      return \"\";\n    }\n\n    if (input.includes(\"-\")) {\n      return input;\n    }\n\n    const rawSsn = input.replace(/-/g, \"\"); // Remove hyphens\n    const formattedSsn = rawSsn\n      .replace(/\\D/g, \"\") // Remove non-digits\n      .replace(/(\\d{3})(\\d{3})(\\d{3})/, \"$1-$2-$3\"); // Format as 123-45-6789\n    return formattedSsn;\n  };\n\n  const [formData, setFormData] = useState({\n    // Personal Details\n\n    firstName: personalDetails[\"firstName\"],\n    middleName: personalDetails[\"middleName\"],\n    lastName: personalDetails[\"lastName\"],\n    ssn: personalDetails[\"ssn\"],\n    dateOfBirth: personalDetails[\"dateOfBirth\"],\n    gender: personalDetails[\"gender\"],\n    occupation: personalDetails[\"occupation\"],\n    residentialStatus: personalDetails[\"residentialStatus\"],\n    email: personalDetails[\"email\"],\n\n    // Contact Details\n    street: contactDetails[\"street\"],\n    apartment: contactDetails[\"apartment\"],\n    city: contactDetails[\"city\"],\n    state: contactDetails[\"state\"],\n    zipCode: contactDetails[\"zipCode\"],\n    country: contactDetails[\"country\"],\n    primaryCountryCode: contactDetails[\"primaryCountryCode\"],\n    primaryPhoneNumber: contactDetails[\"primaryPhoneNumber\"],\n    secondaryCountryCode: contactDetails[\"secondaryCountryCode\"],\n    secondaryPhoneNumber: contactDetails[\"secondaryPhoneNumber\"],\n    contactEmail: contactDetails[\"contactEmail\"],\n\n    taxFiledLastYear: incomeDetails[\"taxFiledLastYear\"], // Set an initial value for taxFiledLastYear\n\n    // additional Spouse Details (Initially hidden)\n    taxPayerStatus: personalDetails[\"taxPayerStatus\"], // Default to \"No\" (Single)\n    spouseFirstName: spouseDetails[\"spouseFirstName\"],\n    spouseMiddleInitial: spouseDetails[\"spouseMiddleInitial\"],\n    spouseLastName: spouseDetails[\"spouseLastName\"],\n    spouseSsnOrItin: spouseDetails[\"spouseSsnOrItin\"],\n    spouseApplyForItin: spouseDetails[\"spouseApplyForItin\"], // Default to \"No\"\n    spouseDateOfBirth: spouseDetails[\"spouseDateOfBirth\"],\n    spouseGender: spouseDetails[\"spouseGender\"],\n    spouseOccupation: spouseDetails[\"spouseOccupation\"],\n    spouseResidentialStatus: spouseDetails[\"spouseResidentialStatus\"],\n    spouseEmail: spouseDetails[\"spouseEmail\"],\n\n    providedLivingSupport: providedLivingSupport,\n\n    //Income Details\n    interestIncome: incomeDetails[\"interestIncome\"],\n    dividendIncome: incomeDetails[\"dividendIncome\"],\n    soldStocks: incomeDetails[\"soldStocks\"],\n    soldCrypto: incomeDetails[\"soldCrypto\"],\n    foreignIncome: incomeDetails[\"foreignIncome\"],\n    retirementAccounts: incomeDetails[\"retirementAccounts\"],\n    stateTaxRefund: incomeDetails[\"stateTaxRefund\"],\n    foreignBankAccount: incomeDetails[\"foreignBankAccount\"],\n    foreignAssets: incomeDetails[\"foreignAssets\"],\n    rentalIncome: incomeDetails[\"rentalIncome\"],\n    income1099: incomeDetails[\"income1099\"],\n    incomeDescription: incomeDetails[\"incomeDescription\"],\n    incomeAmount: incomeDetails[\"incomeAmount\"],\n    addAdditionalInformation: false,\n\n    //Bank Details\n    bankingType: bankDetails[\"bankingType\"],\n    bankName: bankDetails[\"bankName\"],\n    accountHolderName: bankDetails[\"accountHolderName\"],\n    ownership: bankDetails[\"ownership\"],\n    routingNumber: bankDetails[\"routingNumber\"],\n    confirmRoutingNumber: bankDetails[\"confirmRoutingNumber\"],\n    accountNumber: bankDetails[\"accountNumber\"],\n    confirmAccountNumber: bankDetails[\"confirmAccountNumber\"],\n    accountType: bankDetails[\"accountType\"],\n    confirmAccountType: bankDetails[\"confirmAccountType\"],\n  });\n\n  return (\n    <Box\n      sx={{\n        padding: \"20px 30px 5px\",\n        border: { xs: \"none\", sm: \"none\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      <Grid container spacing={2}>\n        <Grid item lg={6} sm={6} xs={12}>\n          <Box className={customStyles.leftSide}>\n            <Typography variant=\"h4\" sx={{ marginBottom: \"36px\" }}>\n              Personal Details\n            </Typography>\n\n            <Box\n              sx={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n                maxWidth: \"96%\",\n              }}\n            >\n              <Typography\n                variant=\"subtitle1\"\n                color=\"textSecondary\"\n                sx={{ marginTop: \"20px\", maxWidth: \"30%\" }}\n              >\n                Taxpayer Name\n                <font color=\"red\" size=\"2\">\n                  (As Per SSN):\n                </font>\n              </Typography>\n\n              <Box>\n                <CustomInputTextField\n                  disabled\n                  attribute=\"First Name\"\n                  attributeTextAlign=\"right\"\n                  is_required={true}\n                  fullWidth\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  value={formData.firstName}\n                  variant=\"outlined\"\n                />\n\n                <CustomInputTextField\n                  disabled\n                  attribute=\"Middle Initial\"\n                  attributeTextAlign=\"right\"\n                  is_required={false}\n                  fullWidth\n                  margin=\"normal\"\n                  name=\"middleName\"\n                  value={formData.middleName}\n                  variant=\"outlined\"\n                />\n                <CustomInputTextField\n                  disabled\n                  attribute=\"Last Name\"\n                  attributeTextAlign=\"right\"\n                  is_required={true}\n                  fullWidth\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  value={formData.lastName}\n                  variant=\"outlined\"\n                />\n              </Box>\n            </Box>\n\n            <CustomInputTextField\n              disabled\n              attribute=\"SSN\"\n              attributeTextAlign=\"right\"\n              is_required={true}\n              fullWidth\n              margin=\"normal\"\n              name=\"ssn\"\n              value={transform(formData.ssn)}\n              variant=\"outlined\"\n            />\n            <CustomInputTextField\n              disabled\n              attribute=\"Date of Birth\"\n              attributeTextAlign=\"right\"\n              is_required={true}\n              fullWidth\n              margin=\"normal\"\n              name=\"dateOfBirth\"\n              type=\"date\"\n              value={formData.dateOfBirth}\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{\n                style: {\n                  color: \"black\",\n                },\n              }}\n              inputProps={{\n                placeholder: \"\",\n              }}\n            />\n            <CustomInputTextField\n              disabled\n              attribute=\"Gender\"\n              attributeTextAlign=\"right\"\n              is_required={true}\n              select\n              fullWidth\n              margin=\"normal\"\n              name=\"gender\"\n              value={formData.gender}\n              variant=\"outlined\"\n            >\n              <MenuItem value=\"MALE\">Male</MenuItem>\n              <MenuItem value=\"FEMALE\">Female</MenuItem>\n              <MenuItem value=\"Other\">Other</MenuItem>\n            </CustomInputTextField>\n            <CustomInputTextField\n              disabled\n              attribute=\"Occupation / Job Title\"\n              attributeTextAlign=\"right\"\n              is_required={true}\n              fullWidth\n              margin=\"normal\"\n              name=\"occupation\"\n              value={formData.occupation}\n              variant=\"outlined\"\n            />\n            <CustomInputTextField\n              disabled\n              attribute=\"Residential Status\"\n              attributeTextAlign=\"right\"\n              is_required={true}\n              fullWidth\n              margin=\"normal\"\n              name=\"residentialStatus\"\n              value={formData.residentialStatus}\n              variant=\"outlined\"\n            />\n          </Box>\n        </Grid>\n\n        {/* Right Side - Contact Details */}\n        <Grid item lg={6} sm={6} xs={12}>\n          <Box className={customStyles.rightSide}>\n            <Typography variant=\"h4\" sx={{ marginBottom: \"16px\" }}>\n              Contact Details\n            </Typography>\n            <Typography color={\"red\"} sx={{ marginLeft: \"10px\" }} variant=\"h5\">\n              (Provide U.S current communication Address)\n            </Typography>\n            <CustomInputTextField\n              attribute=\"Street\"\n              is_required={true}\n              fullWidth\n              name=\"street\"\n              value={formData.street}\n              variant=\"outlined\"\n              disabled\n            />\n            <CustomInputTextField\n              attribute=\"Apartment\"\n              is_required={true}\n              fullWidth\n              name=\"apartment\"\n              value={formData.apartment}\n              variant=\"outlined\"\n              disabled\n            />\n            <CustomInputTextField\n              attribute=\"City\"\n              is_required={true}\n              fullWidth\n              name=\"city\"\n              value={formData.city}\n              variant=\"outlined\"\n              disabled\n            />\n            <CustomInputTextField\n              attribute=\"State\"\n              is_required={true}\n              select\n              fullWidth\n              name=\"state\"\n              value={formData.state}\n              variant=\"outlined\"\n              disabled\n            >\n              {stateOptions.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </CustomInputTextField>\n            <CustomInputTextField\n              attribute=\"Zip Code\"\n              is_required={true}\n              fullWidth\n              name=\"zipCode\"\n              value={formData.zipCode}\n              variant=\"outlined\"\n              disabled\n            />\n            <CustomInputTextField\n              attribute=\"Country\"\n              is_required={true}\n              select\n              fullWidth\n              name=\"country\"\n              value={formData.country}\n              variant=\"outlined\"\n              disabled\n            >\n              <MenuItem value=\"USA\">USA</MenuItem>\n              <MenuItem value=\"Other\">Other</MenuItem>\n            </CustomInputTextField>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                width: \"93%\",\n                margin: \"10px 0\",\n                maxHeight: \"60px\",\n              }}\n            >\n              <Typography\n                variant=\"body1\"\n                sx={{\n                  width: { xs: \"30%\", sm: \"120px\" },\n                }}\n              >\n                <span>Primary Phone</span>\n                <span\n                  style={{\n                    color: \"red\",\n                    fontSize: \"0.875rem\",\n                    marginLeft: \"3px\",\n                  }}\n                >\n                  *\n                </span>\n                &nbsp;:\n              </Typography>\n              <TextField\n                attribute=\"Primary Phone\"\n                select\n                name=\"primaryCountryCode\"\n                value={formData.primaryCountryCode}\n                variant=\"outlined\"\n                disabled\n                sx={{\n                  width: \"18%\",\n                  \"& .MuiOutlinedInput-root\": {\n                    \"& fieldset\": {\n                      borderRadius: \"2px\",\n                    },\n                  },\n                  \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n                    border: \"0.1px solid #bdbdbd\",\n                  },\n                  \"& .MuiOutlinedInput-input\": {\n                    padding: \"10px\",\n                    backgroundColor: \"rgba(255,255,255,1)\",\n                  },\n                }}\n              >\n                {countryCodes.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                name=\"primaryPhoneNumber\"\n                value={formData.primaryPhoneNumber}\n                variant=\"outlined\"\n                disabled\n                sx={{\n                  width: { xs: \"50%\", sm: \"165px\" },\n                  \"& .MuiOutlinedInput-root\": {\n                    \"& fieldset\": {\n                      borderRadius: \"2px\",\n                    },\n                  },\n                  \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n                    border: \"0.1px solid #bdbdbd\",\n                  },\n                  \"& .MuiOutlinedInput-input\": {\n                    padding: \"10px\",\n                    backgroundColor: \"rgba(255,255,255,1)\",\n                  },\n                }}\n              />\n            </Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                width: \"93%\",\n                margin: \"10px 0\",\n                maxHeight: \"60px\",\n              }}\n            >\n              <Typography\n                variant=\"body1\"\n                sx={{\n                  width: { xs: \"30%\", sm: \"120px\" },\n                }}\n              >\n                <span>Secondary Phone</span>\n                &nbsp;:\n              </Typography>\n              <TextField\n                name=\"secondaryCountryCode\"\n                value={formData.secondaryCountryCode}\n                variant=\"outlined\"\n                disabled\n                sx={{\n                  width: \"18%\",\n                  \"& .MuiOutlinedInput-root\": {\n                    \"& fieldset\": {\n                      borderRadius: \"2px\",\n                    },\n                  },\n                  \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n                    border: \"0.1px solid #bdbdbd\",\n                  },\n                  \"& .MuiOutlinedInput-input\": {\n                    padding: \"10px\",\n                    backgroundColor: \"rgba(255,255,255,1)\",\n                  },\n                }}\n              >\n                {countryCodes.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                attribute=\"Secondary Phone\"\n                name=\"secondaryPhoneNumber\"\n                value={formData.secondaryPhoneNumber}\n                variant=\"outlined\"\n                disabled\n                sx={{\n                  width: { xs: \"50%\", sm: \"165px\" },\n                  \"& .MuiOutlinedInput-root\": {\n                    \"& fieldset\": {\n                      borderRadius: \"2px\",\n                    },\n                  },\n                  \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n                    border: \"0.1px solid #bdbdbd\",\n                  },\n                  \"& .MuiOutlinedInput-input\": {\n                    padding: \"10px\",\n                    backgroundColor: \"rgba(255,255,255,1)\",\n                  },\n                }}\n              />\n            </Box>\n            <CustomInputTextField\n              attribute=\"Email Id\"\n              is_required={true}\n              fullWidth\n              name=\"contactEmail\"\n              value={formData.contactEmail}\n              variant=\"outlined\"\n              disabled\n            />\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Box sx={{ margin: \"16px 0\" }}>\n          <Grid container spacing={2}>\n            <Grid\n              item\n              xs={10}\n              sm={5}\n              style={{ display: \"flex\", alignItems: \"center\" }}\n            >\n              <Typography variant=\"body1\">\n                <CustomLabel\n                  label=\"Have you filed your taxes with Taxcooler in the last year?\"\n                  required={true}\n                />\n              </Typography>\n            </Grid>\n            <Grid item xs={2} sm={1}>\n              <select\n                id=\"taxFiledLastYear\"\n                name=\"taxFiledLastYear\"\n                value={formData.taxFiledLastYear}\n                style={{ width: \"100%\" }}\n                disabled\n              >\n                <option value=\"\">Select</option>\n                {/* Add an empty option */}\n                <option value={true}>Yes</option>\n                <option value={false}>No</option>\n              </select>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box sx={{ margin: \"16px 0\" }}>\n          <Grid container spacing={2}>\n            <Grid\n              item\n              xs={8}\n              sm={5}\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <Typography variant=\"body1\">\n                <CustomLabel label=\"Taxpayer Status\" required={true} />\n              </Typography>\n            </Grid>\n            <Grid item xs={4} sm={1}>\n              <select\n                id=\"taxPayerStatus\"\n                name=\"taxPayerStatus\"\n                value={formData.taxPayerStatus}\n                style={{ width: \"100%\" }}\n                disabled\n              >\n                <option value=\"\">Select Status</option>{\" \"}\n                {/* Add an empty option */}\n                <option value=\"SINGLE\">Single</option>\n                <option value=\"MARRIED\">Married</option>\n              </select>\n            </Grid>\n          </Grid>\n        </Box>\n      </Grid>\n      {formData.taxPayerStatus === \"MARRIED\" && (\n        <Grid container spacing={2}>\n          {/* Left Side - Spouse Details */}\n          <Grid item lg={6} sm={6} xs={12}>\n            <Typography variant=\"h4\" mb={2}>\n              Spouse Details\n            </Typography>\n            <Grid container spacing={2}>\n              <CustomInputTextField\n                attribute=\"First Name\"\n                is_required={true}\n                attributeMarginTop=\"8px\"\n                fullWidth\n                name=\"spouseFirstName\"\n                value={formData.spouseFirstName}\n                variant=\"outlined\"\n                disabled\n              />\n\n              <CustomInputTextField\n                attribute=\"Middle Initial\"\n                is_required={false}\n                attributeMarginTop=\"8px\"\n                fullWidth\n                name=\"spouseMiddleInitial\"\n                value={formData.spouseMiddleInitial}\n                variant=\"outlined\"\n                disabled\n              />\n\n              <CustomInputTextField\n                attribute=\"Last Name\"\n                is_required={true}\n                attributeMarginTop=\"8px\"\n                fullWidth\n                name=\"spouseLastName\"\n                value={formData.spouseLastName}\n                variant=\"outlined\"\n                disabled\n              />\n\n              <CustomInputTextField\n                attribute=\"SSN/ITIN\"\n                is_required={true}\n                attributeMarginTop=\"8px\"\n                fullWidth\n                name=\"spouseSsnOrItin\"\n                value={transform(formData.spouseSsnOrItin)}\n                variant=\"outlined\"\n                disabled\n              />\n\n              <CustomInputTextField\n                attribute=\"Do you want to apply for ITIN?\"\n                is_required={true}\n                attributeMarginTop=\"8px\"\n                select\n                fullWidth\n                name=\"spouseApplyForItin\"\n                value={formData.spouseApplyForItin}\n                variant=\"outlined\"\n                disabled\n              >\n                <MenuItem value={false}>No</MenuItem>\n                <MenuItem value={true}>Yes</MenuItem>\n              </CustomInputTextField>\n            </Grid>\n          </Grid>\n\n          {/* Right Side - Spouse Contact */}\n          <Grid item lg={6} sm={6} xs={12}>\n            <Typography variant=\"h4\" mb={2}>\n              Spouse Contact\n            </Typography>\n            <Grid container spacing={2}>\n              <CustomInputTextField\n                attribute=\"Date of Birth\"\n                is_required={true}\n                attributeMarginTop=\"8px\"\n                fullWidth\n                name=\"spouseDateOfBirth\"\n                type=\"date\"\n                value={formData.spouseDateOfBirth}\n                variant=\"outlined\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                InputProps={{\n                  style: {\n                    color: \"black\",\n                  },\n                }}\n                inputProps={{\n                  placeholder: \"\",\n                }}\n                disabled\n              />\n\n              <CustomInputTextField\n                attribute=\"Gender\"\n                is_required={true}\n                attributeMarginTop=\"8px\"\n                select\n                fullWidth\n                name=\"spouseGender\"\n                value={formData.spouseGender}\n                variant=\"outlined\"\n                disabled\n              >\n                <MenuItem value=\"MALE\">Male</MenuItem>\n                <MenuItem value=\"FEMALE\">Female</MenuItem>\n                <MenuItem value=\"Other\">Other</MenuItem>\n              </CustomInputTextField>\n\n              <CustomInputTextField\n                attribute=\"Occupation / Job Title\"\n                is_required={true}\n                attributeMarginTop=\"8px\"\n                fullWidth\n                name=\"spouseOccupation\"\n                value={formData.spouseOccupation}\n                variant=\"outlined\"\n                disabled\n              />\n\n              <CustomInputTextField\n                attribute=\"Residential Status\"\n                is_required={true}\n                attributeMarginTop=\"8px\"\n                fullWidth\n                name=\"spouseResidentialStatus\"\n                value={formData.spouseResidentialStatus}\n                variant=\"outlined\"\n                disabled\n              />\n\n              <CustomInputTextField\n                attribute=\"Email Id\"\n                is_required={true}\n                attributeMarginTop=\"8px\"\n                fullWidth\n                name=\"spouseEmail\"\n                value={formData.spouseEmail}\n                variant=\"outlined\"\n                disabled\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n      <Grid container>\n        <Grid\n          container\n          sx={{\n            marginTop: \"36px\",\n            marginBottom: \"24px\",\n          }}\n        >\n          <Grid\n            item\n            xs={10}\n            sm={9}\n            sx={{ display: \"flex\", alignItems: \"center\" }}\n          >\n            <Typography variant=\"body1\">\n              <CustomLabel\n                label=\" Have you (or your spouse, if married) provided living\n                        support to your kids and/or dependents during the tax\n                        year?\"\n              />\n            </Typography>\n          </Grid>\n          <Grid item xs={2}>\n            <CustomInputTextField\n              attribute=\"\"\n              is_required={true}\n              // label={<CustomLabel label=\"\" />}\n              select\n              margin=\"normal\"\n              name=\"providedLivingSupport\"\n              value={formData.providedLivingSupport}\n              variant=\"outlined\"\n              disabled\n            >\n              <MenuItem value={true}>Yes</MenuItem>\n              <MenuItem value={false}>No</MenuItem>\n            </CustomInputTextField>\n          </Grid>\n        </Grid>\n        <Grid>\n          <Typography\n            variant=\"body1\"\n            style={{ color: \"blue\", wordSpacing: \"2px\" }}\n          >\n            NOTE: Make sure the kids or dependants reported in your (Taxpayer)\n            2023 Tax Return are not claimed as dependants in any other 2023\n            Individual Tax Returns.\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <TableContainer\n          sx={{\n            margin: \"30px 0\",\n            paddingBottom: { xs: \"10px\", sm: \"0px\" },\n          }}\n        >\n          <Typography\n            sx={{\n              color: \"rgba(71,71,71,1)\",\n              fontSize: \"21px\",\n              fontWeight: 500,\n              lineHeight: \"33px\",\n              textAlign: \"center\",\n              marginBottom: \"32px\",\n            }}\n          >\n            Dependant Details\n          </Typography>\n          <Table\n            sx={{\n              borderCollapse: \"collapse\",\n            }}\n          >\n            <TableHead>\n              <TableRow>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  Name\n                </StyledTableCell>\n\n                <StyledTableCell className={customStyles.tableHeader}>\n                  Relationship\n                </StyledTableCell>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  SSN/ITIN\n                </StyledTableCell>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  Apply ?\n                </StyledTableCell>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  DOB\n                </StyledTableCell>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  Visa Type\n                </StyledTableCell>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  C.S\n                </StyledTableCell>\n                <StyledTableCell className={customStyles.tableHeader}>\n                  Months\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {dependantDetails.length > 0 &&\n                dependantDetails.map((row, index) => (\n                  <TableRow key={index}>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {row.additionalFirstName} {row.additionalLastName}\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {row.additionalRelationship}\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {transform(row.additionalSsnOrItin)}\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {row.additionalApplyForItin ? \"YES\" : \"NO\"}\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {row.additionalDateOfBirth}\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {row.additionalVisaType}\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.tableData}>\n                      USA\n                    </StyledTableCell>\n                    <StyledTableCell className={customStyles.tableData}>\n                      {row.additionalStayCount}\n                    </StyledTableCell>\n\n                    <StyledTableCell className={customStyles.mobileView}>\n                      <Box>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                            marginTop: \"16px\",\n                          }}\n                        >\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellHeader\n                              }\n                            >\n                              First Name\n                            </Typography>\n\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellValue\n                              }\n                            >\n                              {row.additionalFirstName}\n                            </Typography>\n                          </Box>\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellHeader\n                              }\n                            >\n                              Last Name\n                            </Typography>\n\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellValue\n                              }\n                            >\n                              {row.additionalLastName}\n                            </Typography>\n                          </Box>\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellHeader\n                              }\n                            >\n                              RelationShip\n                            </Typography>\n\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellValue\n                              }\n                            >\n                              {row.additionalRelationship}\n                            </Typography>\n                          </Box>\n                        </Box>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                            marginTop: \"16px\",\n                          }}\n                        >\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellHeader\n                              }\n                            >\n                              Visa Type\n                            </Typography>\n\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellValue\n                              }\n                            >\n                              {row.additionalVisaType}\n                            </Typography>\n                          </Box>\n\n                          <Box sx={{ marginTop: \"3px\" }}>\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellHeader\n                              }\n                            >\n                              SSN/ITIN\n                            </Typography>\n\n                            <Typography\n                              className={\n                                customStyles.mobileViewStyledTableCellValue\n                              }\n                            >\n                              {transform(row.additionalSsnOrItin)}\n                            </Typography>\n                          </Box>\n                        </Box>\n                      </Box>\n                    </StyledTableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n          {dependantDetails.length === 0 && (\n            <Typography\n              variant=\"h5\"\n              sx={{ textAlign: \"center\", margin: \"10px 0\" }}\n            >\n              No Dependants Found\n            </Typography>\n          )}\n        </TableContainer>\n      </Grid>\n      <Grid container spacing={2}>\n        {/* Interest Income */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Do you have any Interest Income?\n            </FormLabel>\n            <RadioGroup\n              name=\"interestIncome\"\n              value={formData.interestIncome}\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Dividend Income */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Do you have any Dividend Income?\n            </FormLabel>\n            <RadioGroup\n              name=\"dividendIncome\"\n              value={formData.dividendIncome}\n              disabled\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Sold Stocks */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Did you sell any stocks in 2022?\n            </FormLabel>\n            <RadioGroup\n              name=\"soldStocks\"\n              value={formData.soldStocks}\n              disabled\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Sold Crypto */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Did you sell any Crypto Currency in 2022?\n            </FormLabel>\n            <RadioGroup\n              name=\"soldCrypto\"\n              value={formData.soldCrypto}\n              disabled\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        {/* Foreign Income */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Do you have any foreign country income in 2022?\n            </FormLabel>\n            <RadioGroup\n              name=\"foreignIncome\"\n              value={formData.foreignIncome}\n              disabled\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Contributions/Distributions */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Do you have contributions/distributions to/from retirement\n              accounts in year 2022?\n            </FormLabel>\n            <RadioGroup\n              name=\"retirementAccounts\"\n              value={formData.retirementAccounts}\n              disabled\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* State Tax Refund */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Did you get State tax refund(s) in 2022?\n            </FormLabel>\n            <RadioGroup\n              name=\"stateTaxRefund\"\n              value={formData.stateTaxRefund}\n              disabled\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Foreign Bank Account */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Do you have Account Balance in Foreign banks exceeding more than\n              $10,000?\n            </FormLabel>\n            <RadioGroup\n              name=\"foreignBankAccount\"\n              value={formData.foreignBankAccount}\n              disabled\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Foreign Assets */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Do you have Foreign Assets value more than $50,000 at any time\n              during the tax year?\n            </FormLabel>\n            <RadioGroup\n              name=\"foreignAssets\"\n              value={formData.foreignAssets}\n              disabled\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* Rental Income */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Do you have Rental Income in Foreign Country/USA?\n            </FormLabel>\n            <RadioGroup\n              name=\"rentalIncome\"\n              value={formData.rentalIncome}\n              disabled\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        {/* 1099-Misc/1099-NEC Income */}\n        <Grid item sm={12} xs={12}>\n          <FormControl\n            component=\"fieldset\"\n            sx={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"wrap\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n            }}\n          >\n            <FormLabel\n              sx={{\n                width: \"550px\", // Set the width here\n              }}\n            >\n              Do you have 1099-Misc/1099-NEC Income in year 2022?\n            </FormLabel>\n            <RadioGroup\n              name=\"income1099\"\n              value={formData.income1099}\n              disabled\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n              }}\n            >\n              <FormControlLabel value={true} control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value={false} control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        <Grid\n          container\n          spacing={2}\n          sx={{\n            marginTop: \"30px\",\n            marginBottom: \"30px\",\n            marginLeft: \"0px\",\n          }}\n        >\n          <Grid item xs={12} className=\"leftSide\">\n            <Typography variant=\"h5\">Add other Income Information</Typography>\n\n            <CustomInputTextField\n              disabled\n              fullWidth\n              attribute=\"Income Description\"\n              margin=\"normal\"\n              name=\"incomeDescription\"\n              value={formData.incomeDescription}\n              variant=\"outlined\"\n            />\n\n            <CustomInputTextField\n              disabled\n              fullWidth\n              attribute=\"Income Amount\"\n              margin=\"normal\"\n              name=\"incomeAmount\"\n              value={formData.incomeAmount}\n              variant=\"outlined\"\n              type=\"number\"\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={2} sx={{ marginLeft: \"0px\" }}>\n          <Typography variant=\"h4\" sx={{ marginTop: \"30px\" }}>\n            Important Note\n          </Typography>\n          <Typography\n            sx={{\n              marginTop: \"30px\",\n              wordSpacing: \"2px\",\n            }}\n          >\n            The IRS and certain State Revenue Departments facilitate DIRECT\n            DEPOSIT / WITHDRAWAL of Tax Refund or Tax Dues on the Tax Returns.\n            If you are interested in availing this option, we request you to\n            kindly input the following details.\n          </Typography>\n\n          <Grid container sx={{ marginBottom: \"30px\", marginTop: \"30px\" }}>\n            <Grid\n              item\n              xs={10}\n              sm={4}\n              style={{ display: \"flex\", alignItems: \"center\" }}\n            >\n              <Typography variant=\"body1\">\n                I prefer to receive my tax refunds by way of\n              </Typography>\n            </Grid>\n            <Grid item xs={2} sm={4}>\n              <select\n                id=\"bankingType\"\n                name=\"bankingType\"\n                value={formData.bankingType}\n                style={{ width: \"100%\" }}\n                disabled\n              >\n                <option value=\"\">Select Option</option>\n                <option value=\"DIRECT DEPOSIT INTO MY BANK ACCOUNT\">\n                  Direct deposit into my bank account\n                </option>\n                <option value=\"PAPER CHECK\">Paper Check</option>\n              </select>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {formData.bankingType === \"DIRECT DEPOSIT INTO MY BANK ACCOUNT\" && (\n          <Grid item xs={12}>\n            {/* Additional Fields for Direct Deposit */}\n            <Typography\n              variant=\"h5\"\n              sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}\n            >\n              Direct Deposit Information\n            </Typography>\n            <Typography sx={{ marginTop: \"30px\", marginLeft: \"15px\" }}>\n              Note : Please understand that there is no risk by entering Bank\n              Account and Routing Numbers\n            </Typography>\n            <Grid\n              container\n              spacing={2}\n              sx={{\n                border: \"1px solid #000000\",\n                padding: \"20px\",\n                marginBottom: \"20px\",\n                backgroundColor: \"#C7DFF0\",\n              }}\n            >\n              <Grid item lg={6} sm={6} xs={12}>\n                <CustomInputTextField\n                  attribute=\"Bank Name\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"bankName\"\n                  fullWidth\n                  value={formData.bankName}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Account Number\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"accountNumber\"\n                  fullWidth\n                  value={formData.accountNumber}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Routing Number\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"routingNumber\"\n                  fullWidth\n                  value={formData.routingNumber}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Account Type\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"accountType\"\n                  select\n                  fullWidth\n                  value={formData.accountType}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                >\n                  <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                  <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                </CustomInputTextField>\n                <CustomInputTextField\n                  attribute=\"Ownership\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"ownership\"\n                  select\n                  fullWidth\n                  value={formData.ownership}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                >\n                  <MenuItem value=\"TAXPAYER/SPOUSE\">\n                    Tax Payer / Spouse\n                  </MenuItem>\n                  <MenuItem value=\"JOINT\">Joint</MenuItem>\n                </CustomInputTextField>\n              </Grid>\n              <Grid item lg={6} sm={6} xs={12}>\n                <CustomInputTextField\n                  attribute=\"Account Holder Name\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"accountHolderName\"\n                  fullWidth\n                  value={formData.accountHolderName}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Confirm Account Number\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"confirmAccountNumber\"\n                  fullWidth\n                  value={formData.confirmAccountNumber}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Confirm Routing Number\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"confirmRoutingNumber\"\n                  fullWidth\n                  value={formData.confirmRoutingNumber}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                />\n                <CustomInputTextField\n                  attribute=\"Confirm Account Type\"\n                  is_required={false}\n                  margin=\"normal\"\n                  name=\"confirmAccountType\"\n                  select\n                  fullWidth\n                  value={formData.confirmAccountType}\n                  variant=\"outlined\"\n                  disabled={formData.bankingType === \"PAPER CHECK\"}\n                >\n                  <MenuItem value=\"SAVINGS\">Savings</MenuItem>\n                  <MenuItem value=\"CHECKING\">Checking</MenuItem>\n                </CustomInputTextField>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          margin: { xs: 0, sm: \"16px 0\" },\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handlePickAppointment(\"Pick Appointment\")}\n          sx={{ display: { xs: \"none\", sm: \"block\" } }}\n        >\n          Confirm Personal Details To Pick An Appointment\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handlePickAppointment(\"panel6\")}\n          sx={{ display: { xs: \"block\", sm: \"none\" } }}\n        >\n          Confirm Personal Details To Pick An Appointment\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ConfirmDetails;\n","import { Container, Typography, Box, Paper, Grid } from \"@mui/material\";\nimport React from \"react\";\n\nconst RefundQuote = ({ open }) => {\n  return (\n    <Box\n      sx={{\n        padding: \"20px 30px 5px\",\n        border: { xs: \"none\", sm: \"none\" },\n        minHeight: { xs: \"auto\", sm: \"800px\" },\n      }}\n    >\n      {\" \"}\n      <Paper elevation={3} style={{ padding: \"16px\" }}>\n        <Grid container alignItems=\"center\" justifyContent=\"center\">\n          <Grid item>\n            <Typography variant=\"h5\" color=\"error\" align=\"center\">\n              Refund Quote will be available after a telephone call with Tax\n              Consultant.\n            </Typography>\n            <Box mt={2}>\n              <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                You will be receiving an email as soon as the Refund quote is\n                ready.\n              </Typography>\n            </Box>\n            <Box mt={2}>\n              <Typography variant=\"h5\" color=\"error\" align=\"center\">\n                Please visit the Refund Quote section later.\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default RefundQuote;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport { Grid, Box, Avatar, Typography } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { makeStyles } from \"@mui/styles\";\nimport BankDetails from \"./Forms/bankDetails\";\nimport FilerDetails from \"./Forms/filerDeatils\";\nimport IncomeDetails from \"./Forms/incomeDetails\";\nimport PickAppointment from \"./Forms/pickAppointment\";\nimport UploadTaxDocs from \"./Forms/TaxDocs\";\nimport TaxReturns from \"./Forms/taxReturns\";\nimport PayPalPayment from \"../Home/payPalPayment\";\nimport ConfirmDetails from \"./Forms/confirmDetails\";\nimport RefundQuote from \"./Forms/refundQuote\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  accordion: {\n    marginBottom: \"8px\",\n    borderRadius: \"10px\",\n    \"&.MuiPaper-elevation\": {\n      boxShadow: \"none !important\",\n    },\n    \"&:before\": {\n      backgroundColor: \"transparent !important\",\n    },\n  },\n  accordionHeader: {\n    opacity: 1,\n    paddingLeft: \"12px\",\n    paddingTop: \"8px\",\n    paddingBottom: \"8px\",\n    maxHeight: \"60px\",\n  },\n  accordionHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: \"#474747\",\n  },\n  accordionColumn: {\n    marginTop: \"24px\",\n  },\n  accordionColumnHeaderText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    fontWeight: \"600\",\n    marginTop: \"10px\",\n    marginBottom: \"4px\",\n  },\n  accordionColumnText: {\n    fontSize: \"13px\",\n    lineHeight: \"19px\",\n    fontWeight: \"400\",\n  },\n  footerText: {\n    opacity: 0.8,\n    fontSize: \"11px\",\n    fontWeight: 400,\n    lineHeight: \"19px\",\n    marginTop: \"26px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  collpaseIcon: {\n    // height: \"9px\",\n    // width: \"9px\",\n    opacity: 1,\n    color: \"#474747\",\n  },\n}));\n\nconst BasicAccordion = ({ data, handleFetchData, handleDownloadTemplate }) => {\n  const customTextClasses = customTextStyles();\n  const params = useParams();\n  const [expanded, setExpanded] =\n    parseInt(params.action) === 7 ? useState(\"panel7\") : useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    console.log(panel);\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handlePickAppointment = () => {\n    setExpanded(\"panel6\");\n  };\n\n  return (\n    <Box>\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel1\" ? \"600\" : \"400\" }}\n          >\n            Filer Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <FilerDetails\n            open={expanded === \"panel1\"}\n            id={data[\"id\"]}\n            personalDetails={data[\"personalDetails\"]}\n            contactDetails={data[\"contactDetails\"]}\n            spouseDetails={data[\"spouseDetails\"]}\n            incomeDetails={data[\"incomeDetails\"]}\n            providedLivingSupport={data[\"providedLivingSupport\"]}\n            handleFetchData={handleFetchData}\n            handleDownloadTemplate={handleDownloadTemplate}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel2\"}\n        onChange={handleChange(\"panel2\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel2\" ? \"600\" : \"400\" }}\n          >\n            Income Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <IncomeDetails\n            open={expanded === \"panel2\"}\n            id={data[\"id\"]}\n            data={data[\"incomeDetails\"]}\n            handleFetchData={handleFetchData}\n            handleDownloadTemplate={handleDownloadTemplate}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel3\"}\n        onChange={handleChange(\"panel3\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel3\" ? \"600\" : \"400\" }}\n          >\n            Bank Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\", paddingLeft: \"0px\" }}>\n          <BankDetails\n            open={expanded === \"panel3\"}\n            id={data[\"id\"]}\n            data={data[\"bankDetails\"]}\n            handleFetchData={handleFetchData}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel4\"}\n        onChange={handleChange(\"panel4\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4a-content\"\n          id=\"panel4a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          Upload Tax Docs\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <UploadTaxDocs open={expanded === \"panel4\"} id={data[\"id\"]} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel5\"}\n        onChange={handleChange(\"panel5\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel5a-content\"\n          id=\"panel5a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel5\" ? \"600\" : \"400\" }}\n          >\n            Confirm Details\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <ConfirmDetails\n            open={expanded === \"panel5\"}\n            id={data[\"id\"]}\n            personalDetails={data[\"personalDetails\"]}\n            contactDetails={data[\"contactDetails\"]}\n            spouseDetails={data[\"spouseDetails\"]}\n            providedLivingSupport={data[\"providedLivingSupport\"]}\n            incomeDetails={data[\"incomeDetails\"]}\n            bankDetails={data[\"bankDetails\"]}\n            handlePickAppointment={handlePickAppointment}\n            dependantDetails={data[\"dependantDetails\"]}\n          />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel6\"}\n        onChange={handleChange(\"panel6\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel6a-content\"\n          id=\"panel6a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel6\" ? \"600\" : \"400\" }}\n          >\n            Pick Appointment\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <PickAppointment open={expanded === \"panel6\"} id={data[\"id\"]} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel7\"}\n        onChange={handleChange(\"panel7\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel7a-content\"\n          id=\"panel7a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel7\" ? \"600\" : \"400\" }}\n          >\n            Pay Now\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <PayPalPayment open={expanded === \"panel7\"} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel8\"}\n        onChange={handleChange(\"panel8\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel8a-content\"\n          id=\"panel8a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel8\" ? \"600\" : \"400\" }}\n          >\n            Tax Return\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <TaxReturns open={expanded === \"panel8\"} />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={expanded === \"panel9\"}\n        onChange={handleChange(\"panel9\")}\n        className={customTextClasses.accordion}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel9a-content\"\n          id=\"panel9a-header\"\n          className={customTextClasses.accordionHeader}\n        >\n          <Typography\n            className={customTextClasses.accordionHeaderText}\n            sx={{ fontWeight: expanded === \"panel9\" ? \"600\" : \"400\" }}\n          >\n            Refund Quote\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails sx={{ bgcolor: \"#FAFAFA\" }}>\n          <RefundQuote open={expanded === \"panel9\"} />\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default BasicAccordion;\n","import React, { useEffect, useState } from \"react\";\nimport Page from \"../../../components/Page\";\nimport {\n  Grid,\n  Container,\n  Box,\n  CircularProgress,\n  Typography,\n  Card,\n  Button,\n  Avatar,\n} from \"@mui/material\";\nimport { useParams } from \"react-router-dom\";\nimport TabsDesktop from \"../TabsDesktop\";\nimport BasicAccordion from \"../AccordionMobile\";\nimport { makeStyles } from \"@mui/styles\";\nimport ConfirmDetails from \"../Forms/confirmDetails\";\nimport PickAppointment from \"../Forms/pickAppointment\";\nimport PayPalPayment from \"../../Home/payPalPayment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nimport Api from \"../../../components/Api\";\nimport {\n  privateApiGET,\n  privateApiPOST,\n} from \"../../../components/PrivateRoute\";\nimport RefundQuote from \"../Forms/refundQuote\";\n\nexport const customTextStyles = makeStyles((theme) => ({\n  tabButton: {\n    display: \"inline-block\",\n    minWidth: \"100px\",\n    margin: \"0 15px\",\n    textAlign: \"center\",\n    fontWeight: \"500\",\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    borderRadius: \"20px\",\n  },\n}));\n\nconst ClientTaxFillingPage = () => {\n  const params = useParams();\n  const customStyles = customTextStyles();\n  const [data, setData] = useState({});\n  const [isLoadingSpin, setIsLoadingSpin] = useState(true);\n  const [isActiveTab, setIsActiveTab] =\n    parseInt(params.action) === 7\n      ? useState(\"Pay Now\")\n      : useState(\"My Details\");\n\n  const handleActiveTabChange = (tabName) => {\n    setIsActiveTab(tabName);\n  };\n\n  const handleFetchTaxFilingDetails = () => {\n    setIsLoadingSpin(true);\n    let payload = { id: params.id };\n    privateApiPOST(Api.taxFiling, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          setData(data?.data);\n          setIsLoadingSpin(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsLoadingSpin(false);\n      });\n  };\n\n  const handleDownloadTemplate = (file) => {\n    let payload = {\n      file_name: file,\n    };\n\n    privateApiPOST(Api.templateDownload, payload, { responseType: \"blob\" })\n      .then((res) => {\n        const { status, data } = res;\n        if (status === 200) {\n          const url = window.URL.createObjectURL(new Blob([data]));\n          const anchor = document.createElement(\"a\");\n          anchor.href = url;\n          anchor.setAttribute(\"download\", file);\n          document.body.appendChild(anchor);\n          anchor.click();\n        } else {\n        }\n      })\n      .catch((err) => {\n        console.log(\"handleDownloadFile--->\", err);\n      });\n  };\n\n  useEffect(() => {\n    handleFetchTaxFilingDetails();\n  }, []);\n\n  return (\n    <Page title={\"Tax Filing\"}>\n      <Box>\n        {/* <Container maxWidth=\"lg\"> */}\n        <Box\n          sx={{\n            padding: \"10px 0\",\n            backgroundColor: \"rgba(255,255,255,1)\",\n            boxShadow:\n              \"rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px\",\n            display: \"flex\",\n            margin: \"10px 0\",\n            borderRadius: \"4px\",\n          }}\n        >\n          {[\n            \"My Details\",\n            \"Confirm Details\",\n            \"Pick Appointment\",\n            \"Refund Quote\",\n            \"Pay Now\",\n          ].map((each, index) => (\n            <Button\n              key={index}\n              onClick={() => handleActiveTabChange(each)}\n              variant={isActiveTab === each ? \"contained\" : \"text\"}\n              className={customStyles.tabButton}\n              sx={{\n                color:\n                  isActiveTab === each\n                    ? \"#rgb(255,255,255)\"\n                    : \"rgb(71, 71, 71)\",\n                padding: \"8px 15px\",\n                backgroundColor:\n                  isActiveTab === each ? \"#2069D8\" : \"rgba(255,255,255, 1)\",\n                boxShadow:\n                  isActiveTab === each\n                    ? \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\"\n                    : \"none\",\n              }}\n            >\n              {each}\n            </Button>\n          ))}\n        </Box>\n        <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n          {isLoadingSpin ? (\n            <Box\n              display=\"flex\"\n              height=\"100%\"\n              width=\"100%\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              sx={{\n                position: \"absolute\",\n                zIndex: \"10\",\n                left: 0,\n                top: \"10%\",\n              }}\n            >\n              <CircularProgress size={30} />\n            </Box>\n          ) : data ? (\n            <Box\n              sx={{\n                backgroundColor: \"rgba(255,255,255,1)\",\n                boxShadow:\n                  \"rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px\",\n                borderRadius: \"4px\",\n                padding: \"20px 10px\",\n                height: \"1000px\", // Adjust the height as needed\n                overflow: \"auto\", // Add overflow to enable scrolling\n                maxHeight: \"1000px\", // Add a maximum height to prevent content from overflowing\n              }}\n            >\n              <PerfectScrollbar>\n                <Typography\n                  variant=\"h3\"\n                  sx={{\n                    marginLeft: \"20px\",\n                    marginBottom: isActiveTab === \"My Details\" ? 0 : \"30px\",\n                  }}\n                >\n                  Tax-Filing For Year - {params.year}\n                </Typography>\n\n                {isActiveTab === \"My Details\" && (\n                  <Box>\n                    <Typography\n                      color={\"primary\"}\n                      sx={{\n                        marginTop: \"10px\",\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      NOTE : ON FILLING ALL INFORMATION PLEASE MENTION YOUR\n                      AVAILABILITY IN Pick an Appointment PAGE\n                    </Typography>\n                    <Typography\n                      color={\"red\"}\n                      sx={{\n                        marginLeft: \"24px\",\n                        wordSpacing: \"3px\",\n                        marginTop: \"4px\",\n                      }}\n                    >\n                      Taxpayer and spouse's SSN and Date of Birth fields are set\n                      to default values. Please don't change them. We will\n                      collect these details via phone call at the time of tax\n                      filing\n                    </Typography>\n\n                    <TabsDesktop\n                      data={data}\n                      handleFetchData={handleFetchTaxFilingDetails}\n                      handleDownloadTemplate={handleDownloadTemplate}\n                    />\n                  </Box>\n                )}\n                {isActiveTab === \"Confirm Details\" && (\n                  <ConfirmDetails\n                    open={isActiveTab === \"Confirm Details\"}\n                    id={data[\"id\"]}\n                    personalDetails={data[\"personalDetails\"]}\n                    contactDetails={data[\"contactDetails\"]}\n                    spouseDetails={data[\"spouseDetails\"]}\n                    providedLivingSupport={data[\"providedLivingSupport\"]}\n                    incomeDetails={data[\"incomeDetails\"]}\n                    bankDetails={data[\"bankDetails\"]}\n                    handlePickAppointment={handleActiveTabChange}\n                    dependantDetails={data[\"dependantDetails\"]}\n                  />\n                )}\n                {isActiveTab === \"Pick Appointment\" && (\n                  <PickAppointment\n                    open={isActiveTab === \"Pick Appointment\"}\n                    id={data[\"id\"]}\n                  />\n                )}\n                {isActiveTab === \"Refund Quote\" && (\n                  <RefundQuote open={isActiveTab === \"Refund Quote\"} />\n                )}\n                {isActiveTab === \"Pay Now\" && (\n                  <PayPalPayment open={isActiveTab === \"Pay Now\"} />\n                )}\n              </PerfectScrollbar>\n            </Box>\n          ) : null}\n        </Box>\n        <Box sx={{ display: { xs: \"block\", sm: \"none\" } }}>\n          {isLoadingSpin ? (\n            <Box\n              display=\"flex\"\n              height=\"100%\"\n              width=\"100%\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              sx={{\n                position: \"absolute\",\n                zIndex: \"10\",\n                left: 0,\n                top: \"70%\",\n              }}\n            >\n              <CircularProgress size={30} />\n            </Box>\n          ) : data ? (\n            <BasicAccordion\n              data={data}\n              handleFetchData={handleFetchTaxFilingDetails}\n              handleDownloadTemplate={handleDownloadTemplate}\n            />\n          ) : null}\n        </Box>\n        {/* </Container> */}\n      </Box>\n    </Page>\n  );\n};\n\nexport default ClientTaxFillingPage;\n","import React, { useEffect, useState } from \"react\";\n\nimport { TableCell, styled } from \"@mui/material\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport AdminTaxFillingPage from \"./AdminTaxFilingpage\";\nimport ClientTaxFillingPage from \"./ClientTaxFilingPage\";\n\nexport const StyledTableCell = styled(TableCell)(({ theme }) => ({\n  \"&\": {\n    backgroundColor: \"#FFFFFF\",\n    borderWidth: \"1px 0\",\n    borderStyle: \"solid\",\n    borderColor: \"#E2EBFF\",\n    \"&:first-of-type\": {\n      borderLeftWidth: \"1px\",\n    },\n    \"&:nth-last-of-type(2)\": {\n      borderRightWidth: \"1px\",\n    },\n  },\n}));\n\nconst HomePage = () => {\n  const state = useSelector((state) => state.app);\n\n  return (\n    <>\n      {state.role === \"ADMIN\" ? (\n        <AdminTaxFillingPage />\n      ) : state.role === \"CLIENT\" ? (\n        <ClientTaxFillingPage />\n      ) : null}\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { Box, TextField, Grid, Typography } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst NO_WRAP_ATTRIBUTES = [\n  \"Occupation / Job Title\",\n  \"Email Address\",\n  \"Password\",\n  \"Email ID (User ID)\",\n  \"Confirm Password\",\n  \"Referral ID (Optional)\",\n];\n\nconst CustomInputTextField = ({\n  attribute,\n  is_required,\n  attributeTextAlign,\n  attributeMarginTop,\n  ...others\n}) => {\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        maxHeight: \"60px\",\n      }}\n    >\n      <Grid container>\n        <Grid\n          item\n          xs={4}\n          sx={{ marginTop: attributeMarginTop ? attributeMarginTop : \"24px\" }}\n        >\n          {/* <Typography\n            sx={{\n              margin: \"20px 10px\",\n              fontSize: \"16px\",\n              lineHeight: \"24px\",\n              fontWeight: 400,\n            }}\n          >\n            {is_required ? (\n              <>\n                {attribute}\n                <span\n                  style={{\n                    color: \"red\", // Set color to red\n                    fontSize: \"16px\",\n                    marginLeft: \"3px\",\n                  }}\n                >\n                  {\" \"}\n                  *\n                </span>\n              </>\n            ) : (\n              attribute\n            )}\n          </Typography> */}\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginRight: { xs: 0, sm: attributeTextAlign ? \"5px\" : 0 },\n              justifyContent: {\n                xs: \"flex-start\",\n                sm: attributeTextAlign ? \"flex-end\" : \"flex-start\",\n              },\n            }}\n          >\n            <Typography\n              variant=\"body1\"\n              sx={{\n                whiteSpace: NO_WRAP_ATTRIBUTES.includes(attribute)\n                  ? \"nowrap\"\n                  : \"pre-wrap\",\n              }}\n            >\n              {attribute}\n            </Typography>\n            {is_required && (\n              <Typography\n                sx={{\n                  color: \"red\",\n                  fontSize: \"0.875rem\",\n                  marginLeft: \"3px\",\n                }}\n              >\n                *\n              </Typography>\n            )}\n            &nbsp;:\n          </Box>\n        </Grid>\n        <Grid item xs={attribute === \"Income Amount\" ? 4 : 8}>\n          <TextField\n            {...others}\n            sx={{\n              \"& .MuiOutlinedInput-root\": {\n                \"& fieldset\": {\n                  borderRadius: \"2px\",\n                },\n              },\n              \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n                border: \"0.1px solid #bdbdbd\",\n              },\n              \"& .MuiOutlinedInput-input\": {\n                padding: \"10px\",\n                backgroundColor: \"rgba(255,255,255,1)\",\n              },\n              width: \"90%\",\n            }}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nCustomInputTextField.prototype = {\n  is_required: PropTypes.bool,\n  attribute: PropTypes.string, //['success','warning', 'error']\n  attributeTextAlign: PropTypes.string, //['success','warning', 'error']\n  attributeMarginTop: PropTypes.string,\n};\n\nexport default CustomInputTextField;\n","export const statesNames = [\n  { value: \"SELECT\", label: \"SELECT\" },\n  { value: \"Alabama\", label: \"Alabama\" },\n  { value: \"Alaska\", label: \"Alaska\" },\n  { value: \"Arizona\", label: \"Arizona\" },\n  { value: \"Arkansas\", label: \"Arkansas\" },\n  { value: \"California\", label: \"California\" },\n  { value: \"Colorado\", label: \"Colorado\" },\n  { value: \"Connecticut\", label: \"Connecticut\" },\n  { value: \"Delaware\", label: \"Delaware\" },\n  { value: \"Florida\", label: \"Florida\" },\n  { value: \"Georgia\", label: \"Georgia\" },\n  { value: \"Hawaii\", label: \"Hawaii\" },\n  { value: \"Idaho\", label: \"Idaho\" },\n  { value: \"Illinois\", label: \"Illinois\" },\n  { value: \"Indiana\", label: \"Indiana\" },\n  { value: \"Iowa\", label: \"Iowa\" },\n  { value: \"Kansas\", label: \"Kansas\" },\n  { value: \"Kentucky\", label: \"Kentucky\" },\n  { value: \"Louisiana\", label: \"Louisiana\" },\n  { value: \"Maine\", label: \"Maine\" },\n  { value: \"Maryland\", label: \"Maryland\" },\n  { value: \"Massachusetts\", label: \"Massachusetts\" },\n  { value: \"Michigan\", label: \"Michigan\" },\n  { value: \"Minnesota\", label: \"Minnesota\" },\n  { value: \"Mississippi\", label: \"Mississippi\" },\n  { value: \"Missouri\", label: \"Missouri\" },\n  { value: \"Montana\", label: \"Montana\" },\n  { value: \"Nebraska\", label: \"Nebraska\" },\n  { value: \"Nevada\", label: \"Nevada\" },\n  { value: \"New Hampshire\", label: \"New Hampshire\" },\n  { value: \"New Jersey\", label: \"New Jersey\" },\n  { value: \"New Mexico\", label: \"New Mexico\" },\n  { value: \"New York\", label: \"New York\" },\n  { value: \"North Carolina\", label: \"North Carolina\" },\n  { value: \"North Dakota\", label: \"North Dakota\" },\n  { value: \"Ohio\", label: \"Ohio\" },\n  { value: \"Oklahoma\", label: \"Oklahoma\" },\n  { value: \"Oregon\", label: \"Oregon\" },\n  { value: \"Pennsylvania\", label: \"Pennsylvania\" },\n  { value: \"Rhode Island\", label: \"Rhode Island\" },\n  { value: \"South Carolina\", label: \"South Carolina\" },\n  { value: \"South Dakota\", label: \"South Dakota\" },\n  { value: \"Tennessee\", label: \"Tennessee\" },\n  { value: \"Texas\", label: \"Texas\" },\n  { value: \"Utah\", label: \"Utah\" },\n  { value: \"Vermont\", label: \"Vermont\" },\n  { value: \"Virginia\", label: \"Virginia\" },\n  { value: \"Washington\", label: \"Washington\" },\n  { value: \"West Virginia\", label: \"West Virginia\" },\n  { value: \"Wisconsin\", label: \"Wisconsin\" },\n  { value: \"Wyoming\", label: \"Wyoming\" },\n  { value: \"Foreign\", label: \"Foreign\" },\n  { value: \"District of Columbia\", label: \"District of Columbia\" },\n];\n\nexport const countryCode = [\n  { value: \"Select\", label: \"Select\" },\n  { value: \"+91 (India)\", label: \"+91 (India)\" },\n  { value: \"+1 (USA / Canada)\", label: \"+1 (USA / Canada)\" },\n  { value: \"+44 (U.K)\", label: \"+44 (U.K)\" },\n  { value: \"+49 (Germany)\", label: \"+49 (Germany)\" },\n  { value: \"+60 (Malaysia)\", label: \"+60 (Malaysia)\" },\n  { value: \"+61 (Australia)\", label: \"+61 (Australia)\" },\n  { value: \"+65 (Singapore)\", label: \"+65 (Singapore)\" },\n  { value: \"+81 (Japan)\", label: \"+81 (Japan)\" },\n  { value: \"+86 (China)\", label: \"+86 (China)\" },\n  { value: \"Others\", label: \"Others\" },\n];\n\nexport const refundTypes = [\n  \"FEDERAL REFUND\",\n  \"FEDERAL AMENDMENT\",\n  \"STATE AMENDMENT\",\n  \"FBAR TAX PAYER\",\n  \"FBAR SPOUSE\",\n  \"FBAR COMBINED\",\n  \"CITY FILING 1\",\n  \"CITY FILING 2\",\n  \"CITY FILING 3\",\n  \"CITY FILING 4\",\n  \"EXTENSION FILING\",\n  \"OTHER\",\n  \"ADVANCE PAYMENT\",\n  \"REFERRAL DISCOUNT\",\n];\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}