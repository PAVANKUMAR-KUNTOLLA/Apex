{"version":3,"sources":["webpack:///./src/views/Auth/LoginView.js","webpack:///./src/components/Page.js","webpack:///./src/components/CustomAlert.js"],"names":["useStyles","makeStyles","theme","_rightSide","_logoAvatar","root","backgroundColor","palette","background","dark","height","paddingBottom","paddingTop","position","logo","_defineProperty","width","padding","breakpoints","down","submitProgress","top","left","marginTop","marginLeft","mainBlock","display","flexDirection","margin","leftSide","avatarLogo","title","fontFamily","fontWeight","fontSize","textAlign","lineHeight","color","marginBottom","rightSide","justifyContent","alignItems","paddingRight","up","paddingLeft","logoAvatar","marginRight","LoginView","classes","navigate","useNavigate","dispatch","useDispatch","_useState2","_slicedToArray","useState","isAlert","alertTitle","alertText","severity","showAlert","setShowAlert","_useState4","isForgotPassword","setIsForgotPassword","_useState6","email","forgotPasswordState","setForgetPasswordState","_useState8","isResetPasswordSubmitting","setIsRestPasswordSubmitting","React","createElement","Fragment","Page","className","Box","Container","maxWidth","sx","minWidth","xs","sm","minHeight","borderRadius","boxShadow","CustomAlert","open","onClose","Avatar","variant","src","Formik","initialValues","password","validationSchema","Yup","shape","max","required","onSubmit","values","_ref","setSubmitting","resetForm","url","Api","login","config","headers","Cookies","get","axios","post","then","res","_res$data","_res$data2","status","window","sessionStorage","setItem","data","token","setTaxYear","taxYear","role","error","response","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","autoComplete","Typography","TextField","Boolean","fullWidth","helperText","label","name","onBlur","onChange","type","value","my","Button","disabled","size","right","Link","onClick","component","RouterLink","to","Dialog","DialogTitle","id","DialogContent","DialogContentText","autoFocus","e","target","DialogActions","forgotPassword","console","log","CircularProgress","forwardRef","ref","children","_ref$title","rest","_objectWithoutProperties","_excluded","_extends","Helmet","propTypes","PropTypes","node","isRequired","string","spacing","alertContainer","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","AlertTitle","prototype","bool","func"],"mappings":"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","file":"LoginView.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  CircularProgress,\r\n  Avatar,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAlert from \"../../components/CustomAlert\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport Api from \"../../components/Api\";\r\nimport Page from \"../../components/Page\";\r\nimport { setTaxYear } from \"../../redux/app/appSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: \"100%\",\r\n    paddingBottom: \"0px\",\r\n    paddingTop: \"0px\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  logo: {\r\n    width: 150,\r\n    padding: 10,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 110,\r\n    },\r\n  },\r\n  submitProgress: {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  mainBlock: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    margin: \"0\",\r\n    padding: \"0\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  leftSide: {\r\n    width: \"70%\",\r\n    height: \"100vh\",\r\n    position: \"relative\",\r\n    backgroundColor: \"#2069D8\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      height: \"40vh\",\r\n      margin: \"0\",\r\n    },\r\n  },\r\n\r\n  avatarLogo: {\r\n    width: 200,\r\n    height: 72,\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"33%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      left: \"20%\",\r\n      top: \"30%\",\r\n    },\r\n  },\r\n  title: {\r\n    fontFamily: \"Montserrat\",\r\n    fontWeight: \"700\",\r\n    fontSize: \"72px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"87.7px\",\r\n    color: \"#FFFFFF\",\r\n    margin: \"auto\",\r\n    marginTop: \"50vh\",\r\n    marginBottom: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: \"10vh\",\r\n    },\r\n  },\r\n\r\n  rightSide: {\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    backgroundColor: \"#F5F5F5\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\", // Center vertically\r\n    alignItems: \"center\", // Center horizontally\r\n    margin: \"0\",\r\n    paddingRight: \"200px\",\r\n    padding: \"0\", // Reset padding\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: \"244px\", // Adjust padding for medium and larger screens\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\", // Set width to 100%\r\n      paddingLeft: \"0\", // Reset padding\r\n      justifyContent: \"center\", // Center vertically\r\n      alignItems: \"center\", // Center horizontally\r\n      paddingRight: \"0px\",\r\n      marginTop: \"-100px\",\r\n    },\r\n  },\r\n  logoAvatar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: \"0px\",\r\n      marginRight: \"auto\",\r\n      marginTop: \"15px\",\r\n      marginBottom: \"15px\",\r\n    },\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: \"auto\",\r\n      marginRight: \"150px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [showAlert, setShowAlert] = useState({\r\n    isAlert: false,\r\n    alertTitle: \"\",\r\n    alertText: \"\",\r\n    severity: \"\",\r\n  });\r\n\r\n  const [isForgotPassword, setIsForgotPassword] = useState(false);\r\n  const [forgotPasswordState, setForgetPasswordState] = useState({ email: \"\" });\r\n  const [isResetPasswordSubmitting, setIsRestPasswordSubmitting] =\r\n    useState(false);\r\n\r\n  const handleForgotPassword = () => {\r\n    const url = Api.forgotPassword;\r\n    setIsRestPasswordSubmitting(true);\r\n    const config = {\r\n      headers: {\r\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post(url, forgotPasswordState, config)\r\n      .then((res) => {\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: res.data[\"message\"],\r\n          severity: \"success\",\r\n        });\r\n        setIsForgotPassword(false);\r\n        setIsRestPasswordSubmitting(false);\r\n        setForgetPasswordState({ email: \"\" });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        setShowAlert({\r\n          isAlert: true,\r\n          alertText: error.response.data[\"message\"],\r\n          severity: \"error\",\r\n          alertTitle: \"Error\",\r\n        });\r\n        setIsForgotPassword(false);\r\n        setIsRestPasswordSubmitting(false);\r\n        setForgetPasswordState({ email: \"\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Login\">\r\n        <Box>\r\n          <Container maxWidth=\"md\">\r\n            {/* <Box className={classes.leftSide}>\r\n            <Avatar\r\n              variant=\"square\"\r\n              src=\"/static/img/onecall-logo.png\"\r\n              className={classes.avatarLogo}\r\n            />\r\n          </Box> */}\r\n            <Box\r\n              // className={classes.rightSide}\r\n              sx={{\r\n                minWidth: \"350px\",\r\n                maxWidth: { xs: \"350px\", sm: \"500px\" },\r\n                minHeight: \"450px\",\r\n                backgroundColor: \"rgba(255,255,255,1)\",\r\n                borderRadius: \"4px\",\r\n                boxShadow: \"rgba(149, 157, 165, 0.2) 0px 8px 24px\",\r\n                margin: \"15% auto 0\",\r\n                padding: \"24px\",\r\n              }}\r\n            >\r\n              {showAlert.isAlert ? (\r\n                <CustomAlert\r\n                  open={showAlert.isAlert}\r\n                  severity={showAlert.severity}\r\n                  alertTitle={showAlert.alertTitle}\r\n                  alertText={showAlert.alertText}\r\n                  onClose={() =>\r\n                    setShowAlert({\r\n                      isAlert: false,\r\n                      alertTitle: \"\",\r\n                      alertText: \"\",\r\n                      severity: \"\",\r\n                    })\r\n                  }\r\n                />\r\n              ) : null}\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                height=\"100%\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <Container maxWidth=\"sm\">\r\n                  <Box\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    marginBottom={2}\r\n                  >\r\n                    {/* We can place our logo here */}\r\n                    <Avatar\r\n                      variant=\"square\"\r\n                      src=\"/static/img/apexlogo.png\"\r\n                      sx={{\r\n                        // flexGrow: 1,\r\n                        height: 60,\r\n                        width: 170,\r\n                      }}\r\n                      className={classes.logoAvatar}\r\n                    />\r\n                  </Box>\r\n                  <Formik\r\n                    initialValues={{\r\n                      email: \"\",\r\n                      password: \"\",\r\n                      // taxYear: \"\",\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                      email: Yup.string()\r\n                        .email(\"Must be a valid email\")\r\n                        .max(255)\r\n                        .required(\"Email is required\"),\r\n                      password: Yup.string()\r\n                        .max(255)\r\n                        .required(\"Password is required\"),\r\n                      // taxYear: Yup.string()\r\n                      //   .max(255)\r\n                      //   .required(\"Tax Year is required\"),\r\n                    })}\r\n                    onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                      const url = Api.login;\r\n\r\n                      const config = {\r\n                        headers: {\r\n                          \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\r\n                        },\r\n                      };\r\n\r\n                      axios\r\n                        .post(url, values, config)\r\n                        .then((res) => {\r\n                          if (res.status === 200) {\r\n                            window.sessionStorage.setItem(\r\n                              \"token\",\r\n                              res.data?.data?.token\r\n                            );\r\n                            setSubmitting(false);\r\n                            dispatch(setTaxYear(values.taxYear));\r\n                            if (res.data?.data?.role === \"ADMIN\") {\r\n                              navigate(\"/app/home/clients\");\r\n                            } else {\r\n                              navigate(\"/\");\r\n                            }\r\n                          }\r\n                        })\r\n                        .catch((error) => {\r\n                          if (error.response.status === 400) {\r\n                            setShowAlert({\r\n                              isAlert: true,\r\n                              alertText: \"Invalid credentials\",\r\n                              severity: \"error\",\r\n                              alertTitle: \"Error\",\r\n                            });\r\n                            setSubmitting(false);\r\n                          } else {\r\n                            setShowAlert({\r\n                              isAlert: true,\r\n                              alertText: \"Something went wrong\",\r\n                              severity: \"error\",\r\n                              alertTitle: \"Error\",\r\n                            });\r\n                            resetForm();\r\n                            setSubmitting(false);\r\n                          }\r\n                        });\r\n                    }}\r\n                  >\r\n                    {({\r\n                      errors,\r\n                      handleBlur,\r\n                      handleChange,\r\n                      handleSubmit,\r\n                      isSubmitting,\r\n                      touched,\r\n                      values,\r\n                    }) => (\r\n                      <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                        <Box sx={{ margin: \"12px 0 24px\" }}>\r\n                          <Typography color=\"textPrimary\" variant=\"h2\">\r\n                            Sign in\r\n                          </Typography>\r\n                        </Box>\r\n\r\n                        <TextField\r\n                          error={Boolean(touched.email && errors.email)}\r\n                          fullWidth\r\n                          helperText={touched.email && errors.email}\r\n                          label=\"Email Address\"\r\n                          margin=\"normal\"\r\n                          name=\"email\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          type=\"email\"\r\n                          value={values.email}\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                          error={Boolean(touched.password && errors.password)}\r\n                          fullWidth\r\n                          helperText={touched.password && errors.password}\r\n                          label=\"Password\"\r\n                          margin=\"normal\"\r\n                          name=\"password\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          type=\"password\"\r\n                          value={values.password}\r\n                          variant=\"outlined\"\r\n                        />\r\n                        {/* <TextField\r\n                        select\r\n                        error={Boolean(touched.taxYear && errors.taxYear)}\r\n                        helperText={touched.taxYear && errors.taxYear}\r\n                        fullWidth\r\n                        label=\"Tax Year\"\r\n                        margin=\"normal\"\r\n                        name=\"taxYear\" // Change \"taxyear\" to \"taxYear\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.taxYear}\r\n                        variant=\"outlined\"\r\n                      >\r\n                        <MenuItem value=\"currentYear\">Current Year</MenuItem>\r\n                        <MenuItem value=\"AllYears\">All Years</MenuItem>\r\n                      </TextField> */}\r\n                        <Box my={2}>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            disabled={isSubmitting}\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                          >\r\n                            Sign in now\r\n                          </Button>\r\n                        </Box>\r\n                        {/* <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Don&apos;t have an account?{\" \"}\r\n                  <Link component={RouterLink} to=\"/register\" variant=\"h6\">\r\n                    Sign up\r\n                  </Link>\r\n                </Typography> */}\r\n                        <Box display=\"flex\" justifyContent=\"space-between\">\r\n                          <Typography\r\n                            color=\"textSecondary\"\r\n                            variant=\"body1\"\r\n                            right={0}\r\n                          >\r\n                            <Link\r\n                              onClick={() => setIsForgotPassword(true)}\r\n                              color=\"primary\"\r\n                              variant=\"h6\"\r\n                            >\r\n                              Forgot Password?\r\n                            </Link>\r\n                          </Typography>\r\n                          <Typography color=\"textSecondary\" variant=\"body1\">\r\n                            Don&apos;t have an account?{\" \"}\r\n                            <Link\r\n                              component={RouterLink}\r\n                              to=\"/register\"\r\n                              variant=\"h6\"\r\n                            >\r\n                              Sign up\r\n                            </Link>\r\n                          </Typography>\r\n                        </Box>\r\n                      </form>\r\n                    )}\r\n                  </Formik>\r\n                </Container>\r\n              </Box>\r\n            </Box>\r\n          </Container>\r\n        </Box>\r\n      </Page>\r\n\r\n      <Dialog\r\n        open={isForgotPassword}\r\n        onClose={() => setIsForgotPassword(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Forgot Password?</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Please enter your email address to reset password\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            value={forgotPasswordState.email}\r\n            onChange={(e) => setForgetPasswordState({ email: e.target.value })}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setIsForgotPassword(false)} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleForgotPassword}\r\n            color=\"primary\"\r\n            disabled={isResetPasswordSubmitting}\r\n          >\r\n            Reset Password\r\n            {isResetPasswordSubmitting && (\r\n              <CircularProgress size={24} className={classes.submitProgress} />\r\n            )}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Snackbar } from \"@mui/material\";\nimport { Alert, AlertTitle } from \"@mui/material\";\n\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(10),\n    boxShadow: \"-2px 5px 15px -2px rgba(0,0,0,0.71)\",\n  },\n  alertContainer: {\n    minWidth: 350,\n  },\n}));\n\nconst CustomAlert = ({ open, severity, alertTitle, alertText, onClose }) => {\n  let vertical = \"top\",\n    horizontal = \"right\";\n\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={onClose}\n      className={classes.root}\n    >\n      <Alert\n        severity={severity}\n        onClose={onClose}\n        className={classes.alertContainer}\n      >\n        {alertTitle ? <AlertTitle>{alertTitle}</AlertTitle> : null}\n        {alertText}!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nCustomAlert.prototype = {\n  open: PropTypes.bool,\n  severity: PropTypes.string, //['success','warning', 'error']\n  alertText: PropTypes.string,\n  alertTitle: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nexport default CustomAlert;\n"],"sourceRoot":""}